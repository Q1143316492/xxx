#pragma once
#include "UEPyModule.h"
void unreal_export_uenum_EInterpCurveMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EInterpCurveMode = PyImport_AddModule("EInterpCurveMode");
#else                                                                                     
	PyObject* new__module_EInterpCurveMode = Py_InitModule3("EInterpCurveMode", NULL, NULL);
#endif

	PyObject* new_dict_EInterpCurveMode = PyModule_GetDict(new_module_EInterpCurveMode);
	PyDict_SetItemString(new_dict_EInterpCurveMode, "CIM_Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EInterpCurveMode, "CIM_CurveAuto", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EInterpCurveMode, "CIM_Constant", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EInterpCurveMode, "CIM_CurveUser", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EInterpCurveMode, "CIM_CurveBreak", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EInterpCurveMode, "CIM_CurveAutoClamped", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EInterpCurveMode, "CIM_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ERangeBoundTypes()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERangeBoundTypes = PyImport_AddModule("ERangeBoundTypes");
#else                                                                                     
	PyObject* new__module_ERangeBoundTypes = Py_InitModule3("ERangeBoundTypes", NULL, NULL);
#endif

	PyObject* new_dict_ERangeBoundTypes = PyModule_GetDict(new_module_ERangeBoundTypes);
	PyDict_SetItemString(new_dict_ERangeBoundTypes, "Exclusive", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERangeBoundTypes, "Inclusive", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERangeBoundTypes, "Open", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERangeBoundTypes, "ERangeBoundTypes_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELocalizedTextSourceCategory()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELocalizedTextSourceCategory = PyImport_AddModule("ELocalizedTextSourceCategory");
#else                                                                                     
	PyObject* new__module_ELocalizedTextSourceCategory = Py_InitModule3("ELocalizedTextSourceCategory", NULL, NULL);
#endif

	PyObject* new_dict_ELocalizedTextSourceCategory = PyModule_GetDict(new_module_ELocalizedTextSourceCategory);
	PyDict_SetItemString(new_dict_ELocalizedTextSourceCategory, "Game", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELocalizedTextSourceCategory, "Engine", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELocalizedTextSourceCategory, "Editor", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELocalizedTextSourceCategory, "ELocalizedTextSourceCategory_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAutomationEventType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAutomationEventType = PyImport_AddModule("EAutomationEventType");
#else                                                                                     
	PyObject* new__module_EAutomationEventType = Py_InitModule3("EAutomationEventType", NULL, NULL);
#endif

	PyObject* new_dict_EAutomationEventType = PyModule_GetDict(new_module_EAutomationEventType);
	PyDict_SetItemString(new_dict_EAutomationEventType, "Info", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAutomationEventType, "Warning", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAutomationEventType, "Error", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAutomationEventType, "EAutomationEventType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELifetimeCondition()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELifetimeCondition = PyImport_AddModule("ELifetimeCondition");
#else                                                                                     
	PyObject* new__module_ELifetimeCondition = Py_InitModule3("ELifetimeCondition", NULL, NULL);
#endif

	PyObject* new_dict_ELifetimeCondition = PyModule_GetDict(new_module_ELifetimeCondition);
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_InitialOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_OwnerOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_SkipOwner", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_SimulatedOnly", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_AutonomousOnly", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_SimulatedOrPhysics", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_InitialOrOwner", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_Custom", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_ReplayOrOwner", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_ReplayOnly", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_SimulatedOnlyNoReplay", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_SimulatedOrPhysicsNoReplay", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_SkipReplay", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_Never", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_Max", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_ELifetimeCondition, "COND_MAX", Py_BuildValue("i", 17));

}
void unreal_export_uenum_EDataValidationResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDataValidationResult = PyImport_AddModule("EDataValidationResult");
#else                                                                                     
	PyObject* new__module_EDataValidationResult = Py_InitModule3("EDataValidationResult", NULL, NULL);
#endif

	PyObject* new_dict_EDataValidationResult = PyModule_GetDict(new_module_EDataValidationResult);
	PyDict_SetItemString(new_dict_EDataValidationResult, "Invalid", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDataValidationResult, "Valid", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDataValidationResult, "NotValidated", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDataValidationResult, "EDataValidationResult_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EUnit()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUnit = PyImport_AddModule("EUnit");
#else                                                                                     
	PyObject* new__module_EUnit = Py_InitModule3("EUnit", NULL, NULL);
#endif

	PyObject* new_dict_EUnit = PyModule_GetDict(new_module_EUnit);
	PyDict_SetItemString(new_dict_EUnit, "Micrometers", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUnit, "Millimeters", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUnit, "Centimeters", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUnit, "Meters", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EUnit, "Kilometers", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EUnit, "Inches", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EUnit, "Feet", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EUnit, "Yards", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EUnit, "Miles", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EUnit, "Lightyears", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EUnit, "Degrees", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EUnit, "Radians", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EUnit, "MetersPerSecond", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EUnit, "KilometersPerHour", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EUnit, "MilesPerHour", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EUnit, "Celsius", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EUnit, "Farenheit", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EUnit, "Kelvin", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EUnit, "Micrograms", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_EUnit, "Milligrams", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_EUnit, "Grams", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_EUnit, "Kilograms", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_EUnit, "MetricTons", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_EUnit, "Ounces", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_EUnit, "Pounds", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_EUnit, "Stones", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_EUnit, "Newtons", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_EUnit, "PoundsForce", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_EUnit, "KilogramsForce", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_EUnit, "Hertz", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_EUnit, "Kilohertz", Py_BuildValue("i", 30));
	PyDict_SetItemString(new_dict_EUnit, "Megahertz", Py_BuildValue("i", 31));
	PyDict_SetItemString(new_dict_EUnit, "Gigahertz", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_EUnit, "RevolutionsPerMinute", Py_BuildValue("i", 33));
	PyDict_SetItemString(new_dict_EUnit, "Bytes", Py_BuildValue("i", 34));
	PyDict_SetItemString(new_dict_EUnit, "Kilobytes", Py_BuildValue("i", 35));
	PyDict_SetItemString(new_dict_EUnit, "Megabytes", Py_BuildValue("i", 36));
	PyDict_SetItemString(new_dict_EUnit, "Gigabytes", Py_BuildValue("i", 37));
	PyDict_SetItemString(new_dict_EUnit, "Terabytes", Py_BuildValue("i", 38));
	PyDict_SetItemString(new_dict_EUnit, "Lumens", Py_BuildValue("i", 39));
	PyDict_SetItemString(new_dict_EUnit, "Milliseconds", Py_BuildValue("i", 43));
	PyDict_SetItemString(new_dict_EUnit, "Seconds", Py_BuildValue("i", 44));
	PyDict_SetItemString(new_dict_EUnit, "Minutes", Py_BuildValue("i", 45));
	PyDict_SetItemString(new_dict_EUnit, "Hours", Py_BuildValue("i", 46));
	PyDict_SetItemString(new_dict_EUnit, "Days", Py_BuildValue("i", 47));
	PyDict_SetItemString(new_dict_EUnit, "Months", Py_BuildValue("i", 48));
	PyDict_SetItemString(new_dict_EUnit, "Years", Py_BuildValue("i", 49));
	PyDict_SetItemString(new_dict_EUnit, "Multiplier", Py_BuildValue("i", 52));
	PyDict_SetItemString(new_dict_EUnit, "Percentage", Py_BuildValue("i", 51));
	PyDict_SetItemString(new_dict_EUnit, "Unspecified", Py_BuildValue("i", 53));
	PyDict_SetItemString(new_dict_EUnit, "EUnit_MAX", Py_BuildValue("i", 54));

}
void unreal_export_uenum_EMouseCursor()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMouseCursor = PyImport_AddModule("EMouseCursor");
#else                                                                                     
	PyObject* new__module_EMouseCursor = Py_InitModule3("EMouseCursor", NULL, NULL);
#endif

	PyObject* new_dict_EMouseCursor = PyModule_GetDict(new_module_EMouseCursor);
	PyDict_SetItemString(new_dict_EMouseCursor, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMouseCursor, "Default", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMouseCursor, "TextEditBeam", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMouseCursor, "ResizeLeftRight", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMouseCursor, "ResizeUpDown", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMouseCursor, "ResizeSouthEast", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMouseCursor, "ResizeSouthWest", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMouseCursor, "CardinalCross", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMouseCursor, "Crosshairs", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMouseCursor, "Hand", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMouseCursor, "GrabHand", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMouseCursor, "GrabHandClosed", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EMouseCursor, "SlashedCircle", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EMouseCursor, "EyeDropper", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EMouseCursor, "EMouseCursor_MAX", Py_BuildValue("i", 14));

}
void unreal_export_uenum_EPixelFormat()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPixelFormat = PyImport_AddModule("EPixelFormat");
#else                                                                                     
	PyObject* new__module_EPixelFormat = Py_InitModule3("EPixelFormat", NULL, NULL);
#endif

	PyObject* new_dict_EPixelFormat = PyModule_GetDict(new_module_EPixelFormat);
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_A32B32G32R32F", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_B8G8R8A8", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_G8", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_G16", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_DXT1", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_DXT3", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_DXT5", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_UYVY", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_FloatRGB", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_FloatRGBA", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_DepthStencil", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_ShadowDepth", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R32_FLOAT", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_G16R16", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_G16R16F", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_G16R16F_FILTER", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_G32R32F", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_A2B10G10R10", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_A16B16G16R16", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_D24", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R16F", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R16F_FILTER", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_BC5", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_V8U8", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_A1", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_FloatR11G11B10", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_A8", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R32_UINT", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R32_SINT", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_PVRTC2", Py_BuildValue("i", 30));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_PVRTC4", Py_BuildValue("i", 31));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R16_UINT", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R16_SINT", Py_BuildValue("i", 33));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R16G16B16A16_UINT", Py_BuildValue("i", 34));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R16G16B16A16_SINT", Py_BuildValue("i", 35));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R5G6B5_UNORM", Py_BuildValue("i", 36));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R8G8B8A8", Py_BuildValue("i", 37));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_A8R8G8B8", Py_BuildValue("i", 38));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_BC4", Py_BuildValue("i", 39));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R8G8", Py_BuildValue("i", 40));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_ATC_RGB", Py_BuildValue("i", 41));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_ATC_RGBA_E", Py_BuildValue("i", 42));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_ATC_RGBA_I", Py_BuildValue("i", 43));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_X24_G8", Py_BuildValue("i", 44));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_ETC1", Py_BuildValue("i", 45));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_ETC2_RGB", Py_BuildValue("i", 46));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_ETC2_RGBA", Py_BuildValue("i", 47));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R32G32B32A32_UINT", Py_BuildValue("i", 48));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R16G16_UINT", Py_BuildValue("i", 49));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_ASTC_4x4", Py_BuildValue("i", 50));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_ASTC_6x6", Py_BuildValue("i", 51));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_ASTC_8x8", Py_BuildValue("i", 52));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_ASTC_10x10", Py_BuildValue("i", 53));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_ASTC_12x12", Py_BuildValue("i", 54));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_BC6H", Py_BuildValue("i", 55));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_BC7", Py_BuildValue("i", 56));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R8_UINT", Py_BuildValue("i", 57));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_L8", Py_BuildValue("i", 58));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_XGXR8", Py_BuildValue("i", 59));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R8G8B8A8_UINT", Py_BuildValue("i", 60));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R8G8B8A8_SNORM", Py_BuildValue("i", 61));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R16G16B16A16_UNORM", Py_BuildValue("i", 62));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R16G16B16A16_SNORM", Py_BuildValue("i", 63));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_PLATFORM_HDR_0", Py_BuildValue("i", 64));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_PLATFORM_HDR_1", Py_BuildValue("i", 65));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_PLATFORM_HDR_2", Py_BuildValue("i", 66));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_NV12", Py_BuildValue("i", 67));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_R32G32_UINT", Py_BuildValue("i", 68));
	PyDict_SetItemString(new_dict_EPixelFormat, "PF_MAX", Py_BuildValue("i", 69));

}
void unreal_export_uenum_EAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAxis = PyImport_AddModule("EAxis");
#else                                                                                     
	PyObject* new__module_EAxis = Py_InitModule3("EAxis", NULL, NULL);
#endif

	PyObject* new_dict_EAxis = PyModule_GetDict(new_module_EAxis);
	PyDict_SetItemString(new_dict_EAxis, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAxis, "X", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAxis, "Y", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAxis, "Z", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAxis, "EAxis_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ELogTimes()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELogTimes = PyImport_AddModule("ELogTimes");
#else                                                                                     
	PyObject* new__module_ELogTimes = Py_InitModule3("ELogTimes", NULL, NULL);
#endif

	PyObject* new_dict_ELogTimes = PyModule_GetDict(new_module_ELogTimes);
	PyDict_SetItemString(new_dict_ELogTimes, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELogTimes, "UTC", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELogTimes, "SinceGStartTime", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELogTimes, "Local", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELogTimes, "ELogTimes_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESearchDir()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESearchDir = PyImport_AddModule("ESearchDir");
#else                                                                                     
	PyObject* new__module_ESearchDir = Py_InitModule3("ESearchDir", NULL, NULL);
#endif

	PyObject* new_dict_ESearchDir = PyModule_GetDict(new_module_ESearchDir);
	PyDict_SetItemString(new_dict_ESearchDir, "FromStart", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESearchDir, "FromEnd", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESearchDir, "ESearchDir_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESearchCase()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESearchCase = PyImport_AddModule("ESearchCase");
#else                                                                                     
	PyObject* new__module_ESearchCase = Py_InitModule3("ESearchCase", NULL, NULL);
#endif

	PyObject* new_dict_ESearchCase = PyModule_GetDict(new_module_ESearchCase);
	PyDict_SetItemString(new_dict_ESearchCase, "CaseSensitive", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESearchCase, "IgnoreCase", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESearchCase, "ESearchCase_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETouchType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETouchType = PyImport_AddModule("ETouchType");
#else                                                                                     
	PyObject* new__module_ETouchType = Py_InitModule3("ETouchType", NULL, NULL);
#endif

	PyObject* new_dict_ETouchType = PyModule_GetDict(new_module_ETouchType);
	PyDict_SetItemString(new_dict_ETouchType, "Began", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETouchType, "Moved", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETouchType, "Stationary", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETouchType, "ForceChanged", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETouchType, "FirstMove", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETouchType, "Ended", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETouchType, "NumTypes", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ETouchType, "ETouchType_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EConsoleForGamepadLabels()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EConsoleForGamepadLabels = PyImport_AddModule("EConsoleForGamepadLabels");
#else                                                                                     
	PyObject* new__module_EConsoleForGamepadLabels = Py_InitModule3("EConsoleForGamepadLabels", NULL, NULL);
#endif

	PyObject* new_dict_EConsoleForGamepadLabels = PyModule_GetDict(new_module_EConsoleForGamepadLabels);
	PyDict_SetItemString(new_dict_EConsoleForGamepadLabels, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EConsoleForGamepadLabels, "XBoxOne", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EConsoleForGamepadLabels, "PS4", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EConsoleForGamepadLabels, "EConsoleForGamepadLabels_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETouchIndex()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETouchIndex = PyImport_AddModule("ETouchIndex");
#else                                                                                     
	PyObject* new__module_ETouchIndex = Py_InitModule3("ETouchIndex", NULL, NULL);
#endif

	PyObject* new_dict_ETouchIndex = PyModule_GetDict(new_module_ETouchIndex);
	PyDict_SetItemString(new_dict_ETouchIndex, "Touch1", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETouchIndex, "Touch2", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETouchIndex, "Touch3", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETouchIndex, "Touch4", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETouchIndex, "Touch5", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETouchIndex, "Touch6", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETouchIndex, "Touch7", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ETouchIndex, "Touch8", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ETouchIndex, "Touch9", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ETouchIndex, "Touch10", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ETouchIndex, "CursorPointerIndex", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_ETouchIndex, "MAX_TOUCHES", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_ETouchIndex, "ETouchIndex_MAX", Py_BuildValue("i", 12));

}
void unreal_export_uenum_EControllerHand()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EControllerHand = PyImport_AddModule("EControllerHand");
#else                                                                                     
	PyObject* new__module_EControllerHand = Py_InitModule3("EControllerHand", NULL, NULL);
#endif

	PyObject* new_dict_EControllerHand = PyModule_GetDict(new_module_EControllerHand);
	PyDict_SetItemString(new_dict_EControllerHand, "Left", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EControllerHand, "Right", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EControllerHand, "AnyHand", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EControllerHand, "Pad", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EControllerHand, "ExternalCamera", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EControllerHand, "Gun", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EControllerHand, "Special_1", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EControllerHand, "Special_2", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EControllerHand, "Special_3", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EControllerHand, "Special_4", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EControllerHand, "Special_5", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EControllerHand, "Special_6", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EControllerHand, "Special_7", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EControllerHand, "Special_8", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EControllerHand, "Special_9", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EControllerHand, "Special_10", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EControllerHand, "Special_11", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EControllerHand, "ControllerHand_Count", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EControllerHand, "EControllerHand_MAX", Py_BuildValue("i", 18));

}
void unreal_export_uenum_EWidgetClipping()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWidgetClipping = PyImport_AddModule("EWidgetClipping");
#else                                                                                     
	PyObject* new__module_EWidgetClipping = Py_InitModule3("EWidgetClipping", NULL, NULL);
#endif

	PyObject* new_dict_EWidgetClipping = PyModule_GetDict(new_module_EWidgetClipping);
	PyDict_SetItemString(new_dict_EWidgetClipping, "Inherit", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWidgetClipping, "ClipToBounds", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWidgetClipping, "ClipToBoundsWithoutIntersecting", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EWidgetClipping, "ClipToBoundsAlways", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EWidgetClipping, "OnDemand", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EWidgetClipping, "EWidgetClipping_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EFontLayoutMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFontLayoutMethod = PyImport_AddModule("EFontLayoutMethod");
#else                                                                                     
	PyObject* new__module_EFontLayoutMethod = Py_InitModule3("EFontLayoutMethod", NULL, NULL);
#endif

	PyObject* new_dict_EFontLayoutMethod = PyModule_GetDict(new_module_EFontLayoutMethod);
	PyDict_SetItemString(new_dict_EFontLayoutMethod, "Metrics", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFontLayoutMethod, "BoundingBox", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFontLayoutMethod, "EFontLayoutMethod_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EFontLoadingPolicy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFontLoadingPolicy = PyImport_AddModule("EFontLoadingPolicy");
#else                                                                                     
	PyObject* new__module_EFontLoadingPolicy = Py_InitModule3("EFontLoadingPolicy", NULL, NULL);
#endif

	PyObject* new_dict_EFontLoadingPolicy = PyModule_GetDict(new_module_EFontLoadingPolicy);
	PyDict_SetItemString(new_dict_EFontLoadingPolicy, "LazyLoad", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFontLoadingPolicy, "Stream", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFontLoadingPolicy, "Inline", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFontLoadingPolicy, "EFontLoadingPolicy_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFontHinting()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFontHinting = PyImport_AddModule("EFontHinting");
#else                                                                                     
	PyObject* new__module_EFontHinting = Py_InitModule3("EFontHinting", NULL, NULL);
#endif

	PyObject* new_dict_EFontHinting = PyModule_GetDict(new_module_EFontHinting);
	PyDict_SetItemString(new_dict_EFontHinting, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFontHinting, "Auto", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFontHinting, "AutoLight", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFontHinting, "Monochrome", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFontHinting, "None", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFontHinting, "EFontHinting_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EFocusCause()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFocusCause = PyImport_AddModule("EFocusCause");
#else                                                                                     
	PyObject* new__module_EFocusCause = Py_InitModule3("EFocusCause", NULL, NULL);
#endif

	PyObject* new_dict_EFocusCause = PyModule_GetDict(new_module_EFocusCause);
	PyDict_SetItemString(new_dict_EFocusCause, "Mouse", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFocusCause, "Navigation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFocusCause, "SetDirectly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFocusCause, "Cleared", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFocusCause, "OtherWidgetLostFocus", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFocusCause, "WindowActivate", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EFocusCause, "EFocusCause_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EFlowDirectionPreference()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFlowDirectionPreference = PyImport_AddModule("EFlowDirectionPreference");
#else                                                                                     
	PyObject* new__module_EFlowDirectionPreference = Py_InitModule3("EFlowDirectionPreference", NULL, NULL);
#endif

	PyObject* new_dict_EFlowDirectionPreference = PyModule_GetDict(new_module_EFlowDirectionPreference);
	PyDict_SetItemString(new_dict_EFlowDirectionPreference, "Inherit", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFlowDirectionPreference, "Culture", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFlowDirectionPreference, "LeftToRight", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFlowDirectionPreference, "RightToLeft", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFlowDirectionPreference, "EFlowDirectionPreference_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ETextShapingMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextShapingMethod = PyImport_AddModule("ETextShapingMethod");
#else                                                                                     
	PyObject* new__module_ETextShapingMethod = Py_InitModule3("ETextShapingMethod", NULL, NULL);
#endif

	PyObject* new_dict_ETextShapingMethod = PyModule_GetDict(new_module_ETextShapingMethod);
	PyDict_SetItemString(new_dict_ETextShapingMethod, "Auto", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextShapingMethod, "KerningOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextShapingMethod, "FullShaping", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextShapingMethod, "ETextShapingMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EUINavigationRule()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUINavigationRule = PyImport_AddModule("EUINavigationRule");
#else                                                                                     
	PyObject* new__module_EUINavigationRule = Py_InitModule3("EUINavigationRule", NULL, NULL);
#endif

	PyObject* new_dict_EUINavigationRule = PyModule_GetDict(new_module_EUINavigationRule);
	PyDict_SetItemString(new_dict_EUINavigationRule, "Escape", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUINavigationRule, "Explicit", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUINavigationRule, "Wrap", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUINavigationRule, "Stop", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EUINavigationRule, "Custom", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EUINavigationRule, "CustomBoundary", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EUINavigationRule, "Invalid", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EUINavigationRule, "EUINavigationRule_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EColorVisionDeficiency()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EColorVisionDeficiency = PyImport_AddModule("EColorVisionDeficiency");
#else                                                                                     
	PyObject* new__module_EColorVisionDeficiency = Py_InitModule3("EColorVisionDeficiency", NULL, NULL);
#endif

	PyObject* new_dict_EColorVisionDeficiency = PyModule_GetDict(new_module_EColorVisionDeficiency);
	PyDict_SetItemString(new_dict_EColorVisionDeficiency, "NormalVision", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EColorVisionDeficiency, "Deuteranope", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EColorVisionDeficiency, "Protanope", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EColorVisionDeficiency, "Tritanope", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EColorVisionDeficiency, "EColorVisionDeficiency_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESlateBrushImageType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateBrushImageType = PyImport_AddModule("ESlateBrushImageType");
#else                                                                                     
	PyObject* new__module_ESlateBrushImageType = Py_InitModule3("ESlateBrushImageType", NULL, NULL);
#endif

	PyObject* new_dict_ESlateBrushImageType = PyModule_GetDict(new_module_ESlateBrushImageType);
	PyDict_SetItemString(new_dict_ESlateBrushImageType, "NoImage", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateBrushImageType, "FullColor", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateBrushImageType, "Linear", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESlateBrushImageType, "ESlateBrushImageType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESlateBrushMirrorType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateBrushMirrorType = PyImport_AddModule("ESlateBrushMirrorType");
#else                                                                                     
	PyObject* new__module_ESlateBrushMirrorType = Py_InitModule3("ESlateBrushMirrorType", NULL, NULL);
#endif

	PyObject* new_dict_ESlateBrushMirrorType = PyModule_GetDict(new_module_ESlateBrushMirrorType);
	PyDict_SetItemString(new_dict_ESlateBrushMirrorType, "NoMirror", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateBrushMirrorType, "Horizontal", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateBrushMirrorType, "Vertical", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESlateBrushMirrorType, "Both", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESlateBrushMirrorType, "ESlateBrushMirrorType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESlateBrushTileType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateBrushTileType = PyImport_AddModule("ESlateBrushTileType");
#else                                                                                     
	PyObject* new__module_ESlateBrushTileType = Py_InitModule3("ESlateBrushTileType", NULL, NULL);
#endif

	PyObject* new_dict_ESlateBrushTileType = PyModule_GetDict(new_module_ESlateBrushTileType);
	PyDict_SetItemString(new_dict_ESlateBrushTileType, "NoTile", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateBrushTileType, "Horizontal", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateBrushTileType, "Vertical", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESlateBrushTileType, "Both", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESlateBrushTileType, "ESlateBrushTileType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESlateBrushDrawType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateBrushDrawType = PyImport_AddModule("ESlateBrushDrawType");
#else                                                                                     
	PyObject* new__module_ESlateBrushDrawType = Py_InitModule3("ESlateBrushDrawType", NULL, NULL);
#endif

	PyObject* new_dict_ESlateBrushDrawType = PyModule_GetDict(new_module_ESlateBrushDrawType);
	PyDict_SetItemString(new_dict_ESlateBrushDrawType, "NoDrawType", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateBrushDrawType, "Box", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateBrushDrawType, "Border", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESlateBrushDrawType, "Image", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESlateBrushDrawType, "ESlateBrushDrawType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESlateColorStylingMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateColorStylingMode = PyImport_AddModule("ESlateColorStylingMode");
#else                                                                                     
	PyObject* new__module_ESlateColorStylingMode = Py_InitModule3("ESlateColorStylingMode", NULL, NULL);
#endif

	PyObject* new_dict_ESlateColorStylingMode = PyModule_GetDict(new_module_ESlateColorStylingMode);
	PyDict_SetItemString(new_dict_ESlateColorStylingMode, "UseColor_Specified", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateColorStylingMode, "UseColor_Specified_Link", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateColorStylingMode, "UseColor_Foreground", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESlateColorStylingMode, "UseColor_Foreground_Subdued", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESlateColorStylingMode, "UseColor_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESlateDebuggingFocusEvent()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateDebuggingFocusEvent = PyImport_AddModule("ESlateDebuggingFocusEvent");
#else                                                                                     
	PyObject* new__module_ESlateDebuggingFocusEvent = Py_InitModule3("ESlateDebuggingFocusEvent", NULL, NULL);
#endif

	PyObject* new_dict_ESlateDebuggingFocusEvent = PyModule_GetDict(new_module_ESlateDebuggingFocusEvent);
	PyDict_SetItemString(new_dict_ESlateDebuggingFocusEvent, "FocusChanging", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateDebuggingFocusEvent, "FocusLost", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateDebuggingFocusEvent, "FocusReceived", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESlateDebuggingFocusEvent, "ESlateDebuggingFocusEvent_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESlateDebuggingNavigationMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateDebuggingNavigationMethod = PyImport_AddModule("ESlateDebuggingNavigationMethod");
#else                                                                                     
	PyObject* new__module_ESlateDebuggingNavigationMethod = Py_InitModule3("ESlateDebuggingNavigationMethod", NULL, NULL);
#endif

	PyObject* new_dict_ESlateDebuggingNavigationMethod = PyModule_GetDict(new_module_ESlateDebuggingNavigationMethod);
	PyDict_SetItemString(new_dict_ESlateDebuggingNavigationMethod, "Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateDebuggingNavigationMethod, "Explicit", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateDebuggingNavigationMethod, "CustomDelegateBound", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESlateDebuggingNavigationMethod, "CustomDelegateUnbound", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESlateDebuggingNavigationMethod, "NextOrPrevious", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESlateDebuggingNavigationMethod, "HitTestGrid", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ESlateDebuggingNavigationMethod, "ESlateDebuggingNavigationMethod_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ESlateDebuggingStateChangeEvent()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateDebuggingStateChangeEvent = PyImport_AddModule("ESlateDebuggingStateChangeEvent");
#else                                                                                     
	PyObject* new__module_ESlateDebuggingStateChangeEvent = Py_InitModule3("ESlateDebuggingStateChangeEvent", NULL, NULL);
#endif

	PyObject* new_dict_ESlateDebuggingStateChangeEvent = PyModule_GetDict(new_module_ESlateDebuggingStateChangeEvent);
	PyDict_SetItemString(new_dict_ESlateDebuggingStateChangeEvent, "MouseCaptureGained", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateDebuggingStateChangeEvent, "MouseCaptureLost", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateDebuggingStateChangeEvent, "ESlateDebuggingStateChangeEvent_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESlateDebuggingInputEvent()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateDebuggingInputEvent = PyImport_AddModule("ESlateDebuggingInputEvent");
#else                                                                                     
	PyObject* new__module_ESlateDebuggingInputEvent = Py_InitModule3("ESlateDebuggingInputEvent", NULL, NULL);
#endif

	PyObject* new_dict_ESlateDebuggingInputEvent = PyModule_GetDict(new_module_ESlateDebuggingInputEvent);
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "MouseMove", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "MouseEnter", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "MouseLeave", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "MouseButtonDown", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "MouseButtonUp", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "MouseButtonDoubleClick", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "MouseWheel", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "TouchStart", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "TouchEnd", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "DragDetected", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "DragEnter", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "DragLeave", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "DragOver", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "DragDrop", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "DropMessage", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "KeyDown", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "KeyUp", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "KeyChar", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "AnalogInput", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "TouchGesture", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "COUNT", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_ESlateDebuggingInputEvent, "ESlateDebuggingInputEvent_MAX", Py_BuildValue("i", 21));

}
void unreal_export_uenum_ESelectInfo()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESelectInfo = PyImport_AddModule("ESelectInfo");
#else                                                                                     
	PyObject* new__module_ESelectInfo = Py_InitModule3("ESelectInfo", NULL, NULL);
#endif

	PyObject* new_dict_ESelectInfo = PyModule_GetDict(new_module_ESelectInfo);
	PyDict_SetItemString(new_dict_ESelectInfo, "OnKeyPress", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESelectInfo, "OnNavigation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESelectInfo, "OnMouseClick", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESelectInfo, "Direct", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESelectInfo, "ESelectInfo_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ETextCommit()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextCommit = PyImport_AddModule("ETextCommit");
#else                                                                                     
	PyObject* new__module_ETextCommit = Py_InitModule3("ETextCommit", NULL, NULL);
#endif

	PyObject* new_dict_ETextCommit = PyModule_GetDict(new_module_ETextCommit);
	PyDict_SetItemString(new_dict_ETextCommit, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextCommit, "OnEnter", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextCommit, "OnUserMovedFocus", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextCommit, "OnCleared", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETextCommit, "ETextCommit_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EScrollDirection()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EScrollDirection = PyImport_AddModule("EScrollDirection");
#else                                                                                     
	PyObject* new__module_EScrollDirection = Py_InitModule3("EScrollDirection", NULL, NULL);
#endif

	PyObject* new_dict_EScrollDirection = PyModule_GetDict(new_module_EScrollDirection);
	PyDict_SetItemString(new_dict_EScrollDirection, "Scroll_Down", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EScrollDirection, "Scroll_Up", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EScrollDirection, "Scroll_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EOrientation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOrientation = PyImport_AddModule("EOrientation");
#else                                                                                     
	PyObject* new__module_EOrientation = Py_InitModule3("EOrientation", NULL, NULL);
#endif

	PyObject* new_dict_EOrientation = PyModule_GetDict(new_module_EOrientation);
	PyDict_SetItemString(new_dict_EOrientation, "Orient_Horizontal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOrientation, "Orient_Vertical", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOrientation, "Orient_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EMenuPlacement()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMenuPlacement = PyImport_AddModule("EMenuPlacement");
#else                                                                                     
	PyObject* new__module_EMenuPlacement = Py_InitModule3("EMenuPlacement", NULL, NULL);
#endif

	PyObject* new_dict_EMenuPlacement = PyModule_GetDict(new_module_EMenuPlacement);
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_BelowAnchor", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_CenteredBelowAnchor", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_BelowRightAnchor", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_ComboBox", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_ComboBoxRight", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_MenuRight", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_AboveAnchor", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_CenteredAboveAnchor", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_AboveRightAnchor", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_MenuLeft", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_Center", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_RightLeftCenter", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_MatchBottomLeft", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EMenuPlacement, "MenuPlacement_MAX", Py_BuildValue("i", 13));

}
void unreal_export_uenum_EVerticalAlignment()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVerticalAlignment = PyImport_AddModule("EVerticalAlignment");
#else                                                                                     
	PyObject* new__module_EVerticalAlignment = Py_InitModule3("EVerticalAlignment", NULL, NULL);
#endif

	PyObject* new_dict_EVerticalAlignment = PyModule_GetDict(new_module_EVerticalAlignment);
	PyDict_SetItemString(new_dict_EVerticalAlignment, "VAlign_Fill", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVerticalAlignment, "VAlign_Top", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVerticalAlignment, "VAlign_Center", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVerticalAlignment, "VAlign_Bottom", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EVerticalAlignment, "VAlign_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EHorizontalAlignment()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHorizontalAlignment = PyImport_AddModule("EHorizontalAlignment");
#else                                                                                     
	PyObject* new__module_EHorizontalAlignment = Py_InitModule3("EHorizontalAlignment", NULL, NULL);
#endif

	PyObject* new_dict_EHorizontalAlignment = PyModule_GetDict(new_module_EHorizontalAlignment);
	PyDict_SetItemString(new_dict_EHorizontalAlignment, "HAlign_Fill", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHorizontalAlignment, "HAlign_Left", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHorizontalAlignment, "HAlign_Center", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHorizontalAlignment, "HAlign_Right", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EHorizontalAlignment, "HAlign_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ENavigationGenesis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENavigationGenesis = PyImport_AddModule("ENavigationGenesis");
#else                                                                                     
	PyObject* new__module_ENavigationGenesis = Py_InitModule3("ENavigationGenesis", NULL, NULL);
#endif

	PyObject* new_dict_ENavigationGenesis = PyModule_GetDict(new_module_ENavigationGenesis);
	PyDict_SetItemString(new_dict_ENavigationGenesis, "Keyboard", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENavigationGenesis, "Controller", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENavigationGenesis, "User", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENavigationGenesis, "ENavigationGenesis_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ENavigationSource()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENavigationSource = PyImport_AddModule("ENavigationSource");
#else                                                                                     
	PyObject* new__module_ENavigationSource = Py_InitModule3("ENavigationSource", NULL, NULL);
#endif

	PyObject* new_dict_ENavigationSource = PyModule_GetDict(new_module_ENavigationSource);
	PyDict_SetItemString(new_dict_ENavigationSource, "FocusedWidget", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENavigationSource, "WidgetUnderCursor", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENavigationSource, "ENavigationSource_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EUINavigationAction()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUINavigationAction = PyImport_AddModule("EUINavigationAction");
#else                                                                                     
	PyObject* new__module_EUINavigationAction = Py_InitModule3("EUINavigationAction", NULL, NULL);
#endif

	PyObject* new_dict_EUINavigationAction = PyModule_GetDict(new_module_EUINavigationAction);
	PyDict_SetItemString(new_dict_EUINavigationAction, "Accept", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUINavigationAction, "Back", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUINavigationAction, "Num", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUINavigationAction, "Invalid", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EUINavigationAction, "EUINavigationAction_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EUINavigation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUINavigation = PyImport_AddModule("EUINavigation");
#else                                                                                     
	PyObject* new__module_EUINavigation = Py_InitModule3("EUINavigation", NULL, NULL);
#endif

	PyObject* new_dict_EUINavigation = PyModule_GetDict(new_module_EUINavigation);
	PyDict_SetItemString(new_dict_EUINavigation, "Left", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUINavigation, "Right", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUINavigation, "Up", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUINavigation, "Down", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EUINavigation, "Next", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EUINavigation, "Previous", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EUINavigation, "Num", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EUINavigation, "Invalid", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EUINavigation, "EUINavigation_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_EButtonPressMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EButtonPressMethod = PyImport_AddModule("EButtonPressMethod");
#else                                                                                     
	PyObject* new__module_EButtonPressMethod = Py_InitModule3("EButtonPressMethod", NULL, NULL);
#endif

	PyObject* new_dict_EButtonPressMethod = PyModule_GetDict(new_module_EButtonPressMethod);
	PyDict_SetItemString(new_dict_EButtonPressMethod, "DownAndUp", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EButtonPressMethod, "ButtonPress", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EButtonPressMethod, "ButtonRelease", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EButtonPressMethod, "EButtonPressMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EButtonTouchMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EButtonTouchMethod = PyImport_AddModule("EButtonTouchMethod");
#else                                                                                     
	PyObject* new__module_EButtonTouchMethod = Py_InitModule3("EButtonTouchMethod", NULL, NULL);
#endif

	PyObject* new_dict_EButtonTouchMethod = PyModule_GetDict(new_module_EButtonTouchMethod);
	PyDict_SetItemString(new_dict_EButtonTouchMethod, "DownAndUp", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EButtonTouchMethod, "Down", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EButtonTouchMethod, "PreciseTap", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EButtonTouchMethod, "EButtonTouchMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EButtonClickMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EButtonClickMethod = PyImport_AddModule("EButtonClickMethod");
#else                                                                                     
	PyObject* new__module_EButtonClickMethod = Py_InitModule3("EButtonClickMethod", NULL, NULL);
#endif

	PyObject* new_dict_EButtonClickMethod = PyModule_GetDict(new_module_EButtonClickMethod);
	PyDict_SetItemString(new_dict_EButtonClickMethod, "DownAndUp", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EButtonClickMethod, "MouseDown", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EButtonClickMethod, "MouseUp", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EButtonClickMethod, "PreciseClick", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EButtonClickMethod, "EButtonClickMethod_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EFontFallback()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFontFallback = PyImport_AddModule("EFontFallback");
#else                                                                                     
	PyObject* new__module_EFontFallback = Py_InitModule3("EFontFallback", NULL, NULL);
#endif

	PyObject* new_dict_EFontFallback = PyModule_GetDict(new_module_EFontFallback);
	PyDict_SetItemString(new_dict_EFontFallback, "FF_NoFallback", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFontFallback, "FF_LocalizedFallback", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFontFallback, "FF_LastResortFallback", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFontFallback, "FF_Max", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFontFallback, "FF_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ECheckBoxState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECheckBoxState = PyImport_AddModule("ECheckBoxState");
#else                                                                                     
	PyObject* new__module_ECheckBoxState = Py_InitModule3("ECheckBoxState", NULL, NULL);
#endif

	PyObject* new_dict_ECheckBoxState = PyModule_GetDict(new_module_ECheckBoxState);
	PyDict_SetItemString(new_dict_ECheckBoxState, "Unchecked", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECheckBoxState, "Checked", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECheckBoxState, "Undetermined", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECheckBoxState, "ECheckBoxState_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESlateCheckBoxType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateCheckBoxType = PyImport_AddModule("ESlateCheckBoxType");
#else                                                                                     
	PyObject* new__module_ESlateCheckBoxType = Py_InitModule3("ESlateCheckBoxType", NULL, NULL);
#endif

	PyObject* new_dict_ESlateCheckBoxType = PyModule_GetDict(new_module_ESlateCheckBoxType);
	PyDict_SetItemString(new_dict_ESlateCheckBoxType, "CheckBox", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateCheckBoxType, "ToggleButton", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateCheckBoxType, "ESlateCheckBoxType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESlateParentWindowSearchMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateParentWindowSearchMethod = PyImport_AddModule("ESlateParentWindowSearchMethod");
#else                                                                                     
	PyObject* new__module_ESlateParentWindowSearchMethod = Py_InitModule3("ESlateParentWindowSearchMethod", NULL, NULL);
#endif

	PyObject* new_dict_ESlateParentWindowSearchMethod = PyModule_GetDict(new_module_ESlateParentWindowSearchMethod);
	PyDict_SetItemString(new_dict_ESlateParentWindowSearchMethod, "ActiveWindow", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateParentWindowSearchMethod, "MainWindow", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateParentWindowSearchMethod, "ESlateParentWindowSearchMethod_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EConsumeMouseWheel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EConsumeMouseWheel = PyImport_AddModule("EConsumeMouseWheel");
#else                                                                                     
	PyObject* new__module_EConsumeMouseWheel = Py_InitModule3("EConsumeMouseWheel", NULL, NULL);
#endif

	PyObject* new_dict_EConsumeMouseWheel = PyModule_GetDict(new_module_EConsumeMouseWheel);
	PyDict_SetItemString(new_dict_EConsumeMouseWheel, "WhenScrollingPossible", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EConsumeMouseWheel, "Always", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EConsumeMouseWheel, "Never", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EConsumeMouseWheel, "EConsumeMouseWheel_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EVirtualKeyboardDismissAction()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVirtualKeyboardDismissAction = PyImport_AddModule("EVirtualKeyboardDismissAction");
#else                                                                                     
	PyObject* new__module_EVirtualKeyboardDismissAction = Py_InitModule3("EVirtualKeyboardDismissAction", NULL, NULL);
#endif

	PyObject* new_dict_EVirtualKeyboardDismissAction = PyModule_GetDict(new_module_EVirtualKeyboardDismissAction);
	PyDict_SetItemString(new_dict_EVirtualKeyboardDismissAction, "TextChangeOnDismiss", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVirtualKeyboardDismissAction, "TextCommitOnAccept", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVirtualKeyboardDismissAction, "TextCommitOnDismiss", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVirtualKeyboardDismissAction, "EVirtualKeyboardDismissAction_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETableViewMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETableViewMode = PyImport_AddModule("ETableViewMode");
#else                                                                                     
	PyObject* new__module_ETableViewMode = Py_InitModule3("ETableViewMode", NULL, NULL);
#endif

	PyObject* new_dict_ETableViewMode = PyModule_GetDict(new_module_ETableViewMode);
	PyDict_SetItemString(new_dict_ETableViewMode, "List", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETableViewMode, "Tile", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETableViewMode, "Tree", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETableViewMode, "ETableViewMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESelectionMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESelectionMode = PyImport_AddModule("ESelectionMode");
#else                                                                                     
	PyObject* new__module_ESelectionMode = Py_InitModule3("ESelectionMode", NULL, NULL);
#endif

	PyObject* new_dict_ESelectionMode = PyModule_GetDict(new_module_ESelectionMode);
	PyDict_SetItemString(new_dict_ESelectionMode, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESelectionMode, "Single", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESelectionMode, "SingleToggle", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESelectionMode, "Multi", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESelectionMode, "ESelectionMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMultiBlockType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMultiBlockType = PyImport_AddModule("EMultiBlockType");
#else                                                                                     
	PyObject* new__module_EMultiBlockType = Py_InitModule3("EMultiBlockType", NULL, NULL);
#endif

	PyObject* new_dict_EMultiBlockType = PyModule_GetDict(new_module_EMultiBlockType);
	PyDict_SetItemString(new_dict_EMultiBlockType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMultiBlockType, "ButtonRow", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMultiBlockType, "EditableText", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMultiBlockType, "Heading", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMultiBlockType, "MenuEntry", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMultiBlockType, "MenuSeparator", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMultiBlockType, "ToolBarButton", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMultiBlockType, "ToolBarComboButton", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMultiBlockType, "ToolBarSeparator", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMultiBlockType, "Widget", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMultiBlockType, "EMultiBlockType_MAX", Py_BuildValue("i", 10));

}
void unreal_export_uenum_EMultiBoxType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMultiBoxType = PyImport_AddModule("EMultiBoxType");
#else                                                                                     
	PyObject* new__module_EMultiBoxType = Py_InitModule3("EMultiBoxType", NULL, NULL);
#endif

	PyObject* new_dict_EMultiBoxType = PyModule_GetDict(new_module_EMultiBoxType);
	PyDict_SetItemString(new_dict_EMultiBoxType, "MenuBar", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMultiBoxType, "ToolBar", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMultiBoxType, "VerticalToolBar", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMultiBoxType, "Menu", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMultiBoxType, "ButtonRow", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMultiBoxType, "ToolMenuBar", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMultiBoxType, "EMultiBoxType_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EProgressBarFillType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EProgressBarFillType = PyImport_AddModule("EProgressBarFillType");
#else                                                                                     
	PyObject* new__module_EProgressBarFillType = Py_InitModule3("EProgressBarFillType", NULL, NULL);
#endif

	PyObject* new_dict_EProgressBarFillType = PyModule_GetDict(new_module_EProgressBarFillType);
	PyDict_SetItemString(new_dict_EProgressBarFillType, "LeftToRight", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EProgressBarFillType, "RightToLeft", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EProgressBarFillType, "FillFromCenter", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EProgressBarFillType, "TopToBottom", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EProgressBarFillType, "BottomToTop", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EProgressBarFillType, "EProgressBarFillType_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EStretch()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EStretch = PyImport_AddModule("EStretch");
#else                                                                                     
	PyObject* new__module_EStretch = Py_InitModule3("EStretch", NULL, NULL);
#endif

	PyObject* new_dict_EStretch = PyModule_GetDict(new_module_EStretch);
	PyDict_SetItemString(new_dict_EStretch, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EStretch, "Fill", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EStretch, "ScaleToFit", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EStretch, "ScaleToFitX", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EStretch, "ScaleToFitY", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EStretch, "ScaleToFill", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EStretch, "ScaleBySafeZone", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EStretch, "UserSpecified", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EStretch, "EStretch_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_EStretchDirection()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EStretchDirection = PyImport_AddModule("EStretchDirection");
#else                                                                                     
	PyObject* new__module_EStretchDirection = Py_InitModule3("EStretchDirection", NULL, NULL);
#endif

	PyObject* new_dict_EStretchDirection = PyModule_GetDict(new_module_EStretchDirection);
	PyDict_SetItemString(new_dict_EStretchDirection, "Both", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EStretchDirection, "DownOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EStretchDirection, "UpOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EStretchDirection, "EStretchDirection_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDescendantScrollDestination()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDescendantScrollDestination = PyImport_AddModule("EDescendantScrollDestination");
#else                                                                                     
	PyObject* new__module_EDescendantScrollDestination = Py_InitModule3("EDescendantScrollDestination", NULL, NULL);
#endif

	PyObject* new_dict_EDescendantScrollDestination = PyModule_GetDict(new_module_EDescendantScrollDestination);
	PyDict_SetItemString(new_dict_EDescendantScrollDestination, "IntoView", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDescendantScrollDestination, "TopOrLeft", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDescendantScrollDestination, "Center", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDescendantScrollDestination, "EDescendantScrollDestination_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EListItemAlignment()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EListItemAlignment = PyImport_AddModule("EListItemAlignment");
#else                                                                                     
	PyObject* new__module_EListItemAlignment = Py_InitModule3("EListItemAlignment", NULL, NULL);
#endif

	PyObject* new_dict_EListItemAlignment = PyModule_GetDict(new_module_EListItemAlignment);
	PyDict_SetItemString(new_dict_EListItemAlignment, "EvenlyDistributed", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EListItemAlignment, "EvenlySize", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EListItemAlignment, "EvenlyWide", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EListItemAlignment, "LeftAligned", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EListItemAlignment, "RightAligned", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EListItemAlignment, "CenterAligned", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EListItemAlignment, "Fill", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EListItemAlignment, "EListItemAlignment_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_ETextFlowDirection()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextFlowDirection = PyImport_AddModule("ETextFlowDirection");
#else                                                                                     
	PyObject* new__module_ETextFlowDirection = Py_InitModule3("ETextFlowDirection", NULL, NULL);
#endif

	PyObject* new_dict_ETextFlowDirection = PyModule_GetDict(new_module_ETextFlowDirection);
	PyDict_SetItemString(new_dict_ETextFlowDirection, "Auto", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextFlowDirection, "LeftToRight", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextFlowDirection, "RightToLeft", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextFlowDirection, "ETextFlowDirection_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETextWrappingPolicy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextWrappingPolicy = PyImport_AddModule("ETextWrappingPolicy");
#else                                                                                     
	PyObject* new__module_ETextWrappingPolicy = Py_InitModule3("ETextWrappingPolicy", NULL, NULL);
#endif

	PyObject* new_dict_ETextWrappingPolicy = PyModule_GetDict(new_module_ETextWrappingPolicy);
	PyDict_SetItemString(new_dict_ETextWrappingPolicy, "DefaultWrapping", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextWrappingPolicy, "AllowPerCharacterWrapping", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextWrappingPolicy, "ETextWrappingPolicy_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETextJustify()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextJustify = PyImport_AddModule("ETextJustify");
#else                                                                                     
	PyObject* new__module_ETextJustify = Py_InitModule3("ETextJustify", NULL, NULL);
#endif

	PyObject* new_dict_ETextJustify = PyModule_GetDict(new_module_ETextJustify);
	PyDict_SetItemString(new_dict_ETextJustify, "Left", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextJustify, "Center", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextJustify, "Right", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextJustify, "ETextJustify_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMultipleKeyBindingIndex()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMultipleKeyBindingIndex = PyImport_AddModule("EMultipleKeyBindingIndex");
#else                                                                                     
	PyObject* new__module_EMultipleKeyBindingIndex = Py_InitModule3("EMultipleKeyBindingIndex", NULL, NULL);
#endif

	PyObject* new_dict_EMultipleKeyBindingIndex = PyModule_GetDict(new_module_EMultipleKeyBindingIndex);
	PyDict_SetItemString(new_dict_EMultipleKeyBindingIndex, "Primary", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMultipleKeyBindingIndex, "Secondary", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMultipleKeyBindingIndex, "NumChords", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMultipleKeyBindingIndex, "EMultipleKeyBindingIndex_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EUserInterfaceActionType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUserInterfaceActionType = PyImport_AddModule("EUserInterfaceActionType");
#else                                                                                     
	PyObject* new__module_EUserInterfaceActionType = Py_InitModule3("EUserInterfaceActionType", NULL, NULL);
#endif

	PyObject* new_dict_EUserInterfaceActionType = PyModule_GetDict(new_module_EUserInterfaceActionType);
	PyDict_SetItemString(new_dict_EUserInterfaceActionType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUserInterfaceActionType, "Button", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUserInterfaceActionType, "ToggleButton", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUserInterfaceActionType, "RadioButton", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EUserInterfaceActionType, "Check", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EUserInterfaceActionType, "CollapsedButton", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EUserInterfaceActionType, "EUserInterfaceActionType_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EAssetEditorOpenLocation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAssetEditorOpenLocation = PyImport_AddModule("EAssetEditorOpenLocation");
#else                                                                                     
	PyObject* new__module_EAssetEditorOpenLocation = Py_InitModule3("EAssetEditorOpenLocation", NULL, NULL);
#endif

	PyObject* new_dict_EAssetEditorOpenLocation = PyModule_GetDict(new_module_EAssetEditorOpenLocation);
	PyDict_SetItemString(new_dict_EAssetEditorOpenLocation, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAssetEditorOpenLocation, "NewWindow", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAssetEditorOpenLocation, "MainWindow", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAssetEditorOpenLocation, "ContentBrowser", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAssetEditorOpenLocation, "LastDockedWindowOrNewWindow", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EAssetEditorOpenLocation, "LastDockedWindowOrMainWindow", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EAssetEditorOpenLocation, "LastDockedWindowOrContentBrowser", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EAssetEditorOpenLocation, "EAssetEditorOpenLocation_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EMobileCSMQuality()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMobileCSMQuality = PyImport_AddModule("EMobileCSMQuality");
#else                                                                                     
	PyObject* new__module_EMobileCSMQuality = Py_InitModule3("EMobileCSMQuality", NULL, NULL);
#endif

	PyObject* new_dict_EMobileCSMQuality = PyModule_GetDict(new_module_EMobileCSMQuality);
	PyDict_SetItemString(new_dict_EMobileCSMQuality, "NoFiltering", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMobileCSMQuality, "PCF_1x1", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMobileCSMQuality, "PCF_2x2", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMobileCSMQuality, "EMobileCSMQuality_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EComputeNTBsOptions()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EComputeNTBsOptions = PyImport_AddModule("EComputeNTBsOptions");
#else                                                                                     
	PyObject* new__module_EComputeNTBsOptions = Py_InitModule3("EComputeNTBsOptions", NULL, NULL);
#endif

	PyObject* new_dict_EComputeNTBsOptions = PyModule_GetDict(new_module_EComputeNTBsOptions);
	PyDict_SetItemString(new_dict_EComputeNTBsOptions, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EComputeNTBsOptions, "Normals", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EComputeNTBsOptions, "Tangents", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EComputeNTBsOptions, "WeightedNTBs", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EComputeNTBsOptions, "EComputeNTBsOptions_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ESubLevelStripMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESubLevelStripMode = PyImport_AddModule("ESubLevelStripMode");
#else                                                                                     
	PyObject* new__module_ESubLevelStripMode = Py_InitModule3("ESubLevelStripMode", NULL, NULL);
#endif

	PyObject* new_dict_ESubLevelStripMode = PyModule_GetDict(new_module_ESubLevelStripMode);
	PyDict_SetItemString(new_dict_ESubLevelStripMode, "ExactClass", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESubLevelStripMode, "IsChildOf", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESubLevelStripMode, "ESubLevelStripMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EFourPlayerSplitScreenType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFourPlayerSplitScreenType = PyImport_AddModule("EFourPlayerSplitScreenType");
#else                                                                                     
	PyObject* new__module_EFourPlayerSplitScreenType = Py_InitModule3("EFourPlayerSplitScreenType", NULL, NULL);
#endif

	PyObject* new_dict_EFourPlayerSplitScreenType = PyModule_GetDict(new_module_EFourPlayerSplitScreenType);
	PyDict_SetItemString(new_dict_EFourPlayerSplitScreenType, "Grid", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFourPlayerSplitScreenType, "Vertical", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFourPlayerSplitScreenType, "Horizontal", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFourPlayerSplitScreenType, "EFourPlayerSplitScreenType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EThreePlayerSplitScreenType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EThreePlayerSplitScreenType = PyImport_AddModule("EThreePlayerSplitScreenType");
#else                                                                                     
	PyObject* new__module_EThreePlayerSplitScreenType = Py_InitModule3("EThreePlayerSplitScreenType", NULL, NULL);
#endif

	PyObject* new_dict_EThreePlayerSplitScreenType = PyModule_GetDict(new_module_EThreePlayerSplitScreenType);
	PyDict_SetItemString(new_dict_EThreePlayerSplitScreenType, "FavorTop", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EThreePlayerSplitScreenType, "FavorBottom", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EThreePlayerSplitScreenType, "Vertical", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EThreePlayerSplitScreenType, "Horizontal", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EThreePlayerSplitScreenType, "EThreePlayerSplitScreenType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ETwoPlayerSplitScreenType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETwoPlayerSplitScreenType = PyImport_AddModule("ETwoPlayerSplitScreenType");
#else                                                                                     
	PyObject* new__module_ETwoPlayerSplitScreenType = Py_InitModule3("ETwoPlayerSplitScreenType", NULL, NULL);
#endif

	PyObject* new_dict_ETwoPlayerSplitScreenType = PyModule_GetDict(new_module_ETwoPlayerSplitScreenType);
	PyDict_SetItemString(new_dict_ETwoPlayerSplitScreenType, "Horizontal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETwoPlayerSplitScreenType, "Vertical", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETwoPlayerSplitScreenType, "ETwoPlayerSplitScreenType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESoundwaveSampleRateSettings()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESoundwaveSampleRateSettings = PyImport_AddModule("ESoundwaveSampleRateSettings");
#else                                                                                     
	PyObject* new__module_ESoundwaveSampleRateSettings = Py_InitModule3("ESoundwaveSampleRateSettings", NULL, NULL);
#endif

	PyObject* new_dict_ESoundwaveSampleRateSettings = PyModule_GetDict(new_module_ESoundwaveSampleRateSettings);
	PyDict_SetItemString(new_dict_ESoundwaveSampleRateSettings, "Max", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESoundwaveSampleRateSettings, "High", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESoundwaveSampleRateSettings, "Medium", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESoundwaveSampleRateSettings, "Low", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESoundwaveSampleRateSettings, "Min", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESoundwaveSampleRateSettings, "MatchDevice", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ESoundwaveSampleRateSettings, "ESoundwaveSampleRateSettings_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EChaosBufferMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EChaosBufferMode = PyImport_AddModule("EChaosBufferMode");
#else                                                                                     
	PyObject* new__module_EChaosBufferMode = Py_InitModule3("EChaosBufferMode", NULL, NULL);
#endif

	PyObject* new_dict_EChaosBufferMode = PyModule_GetDict(new_module_EChaosBufferMode);
	PyDict_SetItemString(new_dict_EChaosBufferMode, "Double", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EChaosBufferMode, "Triple", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EChaosBufferMode, "Num", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EChaosBufferMode, "Invalid", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EChaosBufferMode, "EChaosBufferMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EChaosThreadingMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EChaosThreadingMode = PyImport_AddModule("EChaosThreadingMode");
#else                                                                                     
	PyObject* new__module_EChaosThreadingMode = Py_InitModule3("EChaosThreadingMode", NULL, NULL);
#endif

	PyObject* new_dict_EChaosThreadingMode = PyModule_GetDict(new_module_EChaosThreadingMode);
	PyDict_SetItemString(new_dict_EChaosThreadingMode, "DedicatedThread", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EChaosThreadingMode, "TaskGraph", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EChaosThreadingMode, "SingleThread", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EChaosThreadingMode, "Num", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EChaosThreadingMode, "Invalid", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EChaosThreadingMode, "EChaosThreadingMode_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EChaosSolverTickMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EChaosSolverTickMode = PyImport_AddModule("EChaosSolverTickMode");
#else                                                                                     
	PyObject* new__module_EChaosSolverTickMode = Py_InitModule3("EChaosSolverTickMode", NULL, NULL);
#endif

	PyObject* new_dict_EChaosSolverTickMode = PyModule_GetDict(new_module_EChaosSolverTickMode);
	PyDict_SetItemString(new_dict_EChaosSolverTickMode, "Fixed", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EChaosSolverTickMode, "Variable", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EChaosSolverTickMode, "VariableCapped", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EChaosSolverTickMode, "VariableCappedWithTarget", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EChaosSolverTickMode, "EChaosSolverTickMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EEmissionPatternTypeEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEmissionPatternTypeEnum = PyImport_AddModule("EEmissionPatternTypeEnum");
#else                                                                                     
	PyObject* new__module_EEmissionPatternTypeEnum = Py_InitModule3("EEmissionPatternTypeEnum", NULL, NULL);
#endif

	PyObject* new_dict_EEmissionPatternTypeEnum = PyModule_GetDict(new_module_EEmissionPatternTypeEnum);
	PyDict_SetItemString(new_dict_EEmissionPatternTypeEnum, "Chaos_Emission_Pattern_First_Frame", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEmissionPatternTypeEnum, "Chaos_Emission_Pattern_On_Demand", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEmissionPatternTypeEnum, "Chaos_Max", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEmissionPatternTypeEnum, "Chaos_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EInitialVelocityTypeEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EInitialVelocityTypeEnum = PyImport_AddModule("EInitialVelocityTypeEnum");
#else                                                                                     
	PyObject* new__module_EInitialVelocityTypeEnum = Py_InitModule3("EInitialVelocityTypeEnum", NULL, NULL);
#endif

	PyObject* new_dict_EInitialVelocityTypeEnum = PyModule_GetDict(new_module_EInitialVelocityTypeEnum);
	PyDict_SetItemString(new_dict_EInitialVelocityTypeEnum, "Chaos_Initial_Velocity_User_Defined", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EInitialVelocityTypeEnum, "Chaos_Initial_Velocity_None", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EInitialVelocityTypeEnum, "Chaos_Max", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EInitialVelocityTypeEnum, "Chaos_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EGeometryCollectionPhysicsTypeEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGeometryCollectionPhysicsTypeEnum = PyImport_AddModule("EGeometryCollectionPhysicsTypeEnum");
#else                                                                                     
	PyObject* new__module_EGeometryCollectionPhysicsTypeEnum = Py_InitModule3("EGeometryCollectionPhysicsTypeEnum", NULL, NULL);
#endif

	PyObject* new_dict_EGeometryCollectionPhysicsTypeEnum = PyModule_GetDict(new_module_EGeometryCollectionPhysicsTypeEnum);
	PyDict_SetItemString(new_dict_EGeometryCollectionPhysicsTypeEnum, "Chaos_AngularVelocity", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGeometryCollectionPhysicsTypeEnum, "Chaos_DynamicState", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGeometryCollectionPhysicsTypeEnum, "Chaos_LinearVelocity", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGeometryCollectionPhysicsTypeEnum, "Chaos_InitialAngularVelocity", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGeometryCollectionPhysicsTypeEnum, "Chaos_InitialLinearVelocity", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EGeometryCollectionPhysicsTypeEnum, "Chaos_CollisionGroup", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EGeometryCollectionPhysicsTypeEnum, "Chaos_LinearForce", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EGeometryCollectionPhysicsTypeEnum, "Chaos_AngularTorque", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EGeometryCollectionPhysicsTypeEnum, "Chaos_Max", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EGeometryCollectionPhysicsTypeEnum, "Chaos_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_EObjectStateTypeEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EObjectStateTypeEnum = PyImport_AddModule("EObjectStateTypeEnum");
#else                                                                                     
	PyObject* new__module_EObjectStateTypeEnum = Py_InitModule3("EObjectStateTypeEnum", NULL, NULL);
#endif

	PyObject* new_dict_EObjectStateTypeEnum = PyModule_GetDict(new_module_EObjectStateTypeEnum);
	PyDict_SetItemString(new_dict_EObjectStateTypeEnum, "Chaos_Object_Sleeping", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EObjectStateTypeEnum, "Chaos_Object_Kinematic", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EObjectStateTypeEnum, "Chaos_Object_Static", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EObjectStateTypeEnum, "Chaos_Object_Dynamic", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EObjectStateTypeEnum, "Chaos_Object_UserDefined", Py_BuildValue("i", 100));
	PyDict_SetItemString(new_dict_EObjectStateTypeEnum, "Chaos_Max", Py_BuildValue("i", 101));
	PyDict_SetItemString(new_dict_EObjectStateTypeEnum, "Chaos_MAX", Py_BuildValue("i", 102));

}
void unreal_export_uenum_EImplicitTypeEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EImplicitTypeEnum = PyImport_AddModule("EImplicitTypeEnum");
#else                                                                                     
	PyObject* new__module_EImplicitTypeEnum = Py_InitModule3("EImplicitTypeEnum", NULL, NULL);
#endif

	PyObject* new_dict_EImplicitTypeEnum = PyModule_GetDict(new_module_EImplicitTypeEnum);
	PyDict_SetItemString(new_dict_EImplicitTypeEnum, "Chaos_Implicit_Box", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EImplicitTypeEnum, "Chaos_Implicit_Sphere", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EImplicitTypeEnum, "Chaos_Implicit_Capsule", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EImplicitTypeEnum, "Chaos_Implicit_LevelSet", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EImplicitTypeEnum, "Chaos_Implicit_None", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EImplicitTypeEnum, "Chaos_Max", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EImplicitTypeEnum, "Chaos_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ECollisionTypeEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECollisionTypeEnum = PyImport_AddModule("ECollisionTypeEnum");
#else                                                                                     
	PyObject* new__module_ECollisionTypeEnum = Py_InitModule3("ECollisionTypeEnum", NULL, NULL);
#endif

	PyObject* new_dict_ECollisionTypeEnum = PyModule_GetDict(new_module_ECollisionTypeEnum);
	PyDict_SetItemString(new_dict_ECollisionTypeEnum, "Chaos_Volumetric", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECollisionTypeEnum, "Chaos_Surface_Volumetric", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECollisionTypeEnum, "Chaos_Max", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECollisionTypeEnum, "Chaos_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPIEPreviewDeviceType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPIEPreviewDeviceType = PyImport_AddModule("EPIEPreviewDeviceType");
#else                                                                                     
	PyObject* new__module_EPIEPreviewDeviceType = Py_InitModule3("EPIEPreviewDeviceType", NULL, NULL);
#endif

	PyObject* new_dict_EPIEPreviewDeviceType = PyModule_GetDict(new_module_EPIEPreviewDeviceType);
	PyDict_SetItemString(new_dict_EPIEPreviewDeviceType, "Unset", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPIEPreviewDeviceType, "Android", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPIEPreviewDeviceType, "IOS", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPIEPreviewDeviceType, "TVOS", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPIEPreviewDeviceType, "Switch", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPIEPreviewDeviceType, "MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EGameplayTagQueryExprType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGameplayTagQueryExprType = PyImport_AddModule("EGameplayTagQueryExprType");
#else                                                                                     
	PyObject* new__module_EGameplayTagQueryExprType = Py_InitModule3("EGameplayTagQueryExprType", NULL, NULL);
#endif

	PyObject* new_dict_EGameplayTagQueryExprType = PyModule_GetDict(new_module_EGameplayTagQueryExprType);
	PyDict_SetItemString(new_dict_EGameplayTagQueryExprType, "Undefined", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGameplayTagQueryExprType, "AnyTagsMatch", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGameplayTagQueryExprType, "AllTagsMatch", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGameplayTagQueryExprType, "NoTagsMatch", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGameplayTagQueryExprType, "AnyExprMatch", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EGameplayTagQueryExprType, "AllExprMatch", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EGameplayTagQueryExprType, "NoExprMatch", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EGameplayTagQueryExprType, "EGameplayTagQueryExprType_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EGameplayContainerMatchType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGameplayContainerMatchType = PyImport_AddModule("EGameplayContainerMatchType");
#else                                                                                     
	PyObject* new__module_EGameplayContainerMatchType = Py_InitModule3("EGameplayContainerMatchType", NULL, NULL);
#endif

	PyObject* new_dict_EGameplayContainerMatchType = PyModule_GetDict(new_module_EGameplayContainerMatchType);
	PyDict_SetItemString(new_dict_EGameplayContainerMatchType, "Any", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGameplayContainerMatchType, "All", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGameplayContainerMatchType, "EGameplayContainerMatchType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EGameplayTagMatchType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGameplayTagMatchType = PyImport_AddModule("EGameplayTagMatchType");
#else                                                                                     
	PyObject* new__module_EGameplayTagMatchType = Py_InitModule3("EGameplayTagMatchType", NULL, NULL);
#endif

	PyObject* new_dict_EGameplayTagMatchType = PyModule_GetDict(new_module_EGameplayTagMatchType);
	PyDict_SetItemString(new_dict_EGameplayTagMatchType, "Explicit", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGameplayTagMatchType, "IncludeParentTags", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGameplayTagMatchType, "EGameplayTagMatchType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EGameplayTagSelectionType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGameplayTagSelectionType = PyImport_AddModule("EGameplayTagSelectionType");
#else                                                                                     
	PyObject* new__module_EGameplayTagSelectionType = Py_InitModule3("EGameplayTagSelectionType", NULL, NULL);
#endif

	PyObject* new_dict_EGameplayTagSelectionType = PyModule_GetDict(new_module_EGameplayTagSelectionType);
	PyDict_SetItemString(new_dict_EGameplayTagSelectionType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGameplayTagSelectionType, "NonRestrictedOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGameplayTagSelectionType, "RestrictedOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGameplayTagSelectionType, "All", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGameplayTagSelectionType, "EGameplayTagSelectionType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EGameplayTagSourceType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGameplayTagSourceType = PyImport_AddModule("EGameplayTagSourceType");
#else                                                                                     
	PyObject* new__module_EGameplayTagSourceType = Py_InitModule3("EGameplayTagSourceType", NULL, NULL);
#endif

	PyObject* new_dict_EGameplayTagSourceType = PyModule_GetDict(new_module_EGameplayTagSourceType);
	PyDict_SetItemString(new_dict_EGameplayTagSourceType, "Native", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGameplayTagSourceType, "DefaultTagList", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGameplayTagSourceType, "TagList", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGameplayTagSourceType, "RestrictedTagList", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGameplayTagSourceType, "DataTable", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EGameplayTagSourceType, "Invalid", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EGameplayTagSourceType, "EGameplayTagSourceType_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ETextGender()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextGender = PyImport_AddModule("ETextGender");
#else                                                                                     
	PyObject* new__module_ETextGender = Py_InitModule3("ETextGender", NULL, NULL);
#endif

	PyObject* new_dict_ETextGender = PyModule_GetDict(new_module_ETextGender);
	PyDict_SetItemString(new_dict_ETextGender, "Masculine", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextGender, "Feminine", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextGender, "Neuter", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextGender, "ETextGender_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFormatArgumentType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFormatArgumentType = PyImport_AddModule("EFormatArgumentType");
#else                                                                                     
	PyObject* new__module_EFormatArgumentType = Py_InitModule3("EFormatArgumentType", NULL, NULL);
#endif

	PyObject* new_dict_EFormatArgumentType = PyModule_GetDict(new_module_EFormatArgumentType);
	PyDict_SetItemString(new_dict_EFormatArgumentType, "Int", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFormatArgumentType, "UInt", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFormatArgumentType, "Float", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFormatArgumentType, "Double", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFormatArgumentType, "Text", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFormatArgumentType, "Gender", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EFormatArgumentType, "EFormatArgumentType_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EEndPlayReason()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEndPlayReason = PyImport_AddModule("EEndPlayReason");
#else                                                                                     
	PyObject* new__module_EEndPlayReason = Py_InitModule3("EEndPlayReason", NULL, NULL);
#endif

	PyObject* new_dict_EEndPlayReason = PyModule_GetDict(new_module_EEndPlayReason);
	PyDict_SetItemString(new_dict_EEndPlayReason, "Destroyed", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEndPlayReason, "LevelTransition", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEndPlayReason, "EndPlayInEditor", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEndPlayReason, "RemovedFromWorld", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEndPlayReason, "Quit", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EEndPlayReason, "EEndPlayReason_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ETickingGroup()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETickingGroup = PyImport_AddModule("ETickingGroup");
#else                                                                                     
	PyObject* new__module_ETickingGroup = Py_InitModule3("ETickingGroup", NULL, NULL);
#endif

	PyObject* new_dict_ETickingGroup = PyModule_GetDict(new_module_ETickingGroup);
	PyDict_SetItemString(new_dict_ETickingGroup, "TG_PrePhysics", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETickingGroup, "TG_StartPhysics", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETickingGroup, "TG_DuringPhysics", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETickingGroup, "TG_EndPhysics", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETickingGroup, "TG_PostPhysics", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETickingGroup, "TG_PostUpdateWork", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETickingGroup, "TG_LastDemotable", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ETickingGroup, "TG_NewlySpawned", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ETickingGroup, "TG_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_EComponentCreationMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EComponentCreationMethod = PyImport_AddModule("EComponentCreationMethod");
#else                                                                                     
	PyObject* new__module_EComponentCreationMethod = Py_InitModule3("EComponentCreationMethod", NULL, NULL);
#endif

	PyObject* new_dict_EComponentCreationMethod = PyModule_GetDict(new_module_EComponentCreationMethod);
	PyDict_SetItemString(new_dict_EComponentCreationMethod, "Native", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EComponentCreationMethod, "SimpleConstructionScript", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EComponentCreationMethod, "UserConstructionScript", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EComponentCreationMethod, "Instance", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EComponentCreationMethod, "EComponentCreationMethod_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ETemperatureSeverityType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETemperatureSeverityType = PyImport_AddModule("ETemperatureSeverityType");
#else                                                                                     
	PyObject* new__module_ETemperatureSeverityType = Py_InitModule3("ETemperatureSeverityType", NULL, NULL);
#endif

	PyObject* new_dict_ETemperatureSeverityType = PyModule_GetDict(new_module_ETemperatureSeverityType);
	PyDict_SetItemString(new_dict_ETemperatureSeverityType, "Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETemperatureSeverityType, "Good", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETemperatureSeverityType, "Bad", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETemperatureSeverityType, "Serious", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETemperatureSeverityType, "Critical", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETemperatureSeverityType, "NumSeverities", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETemperatureSeverityType, "ETemperatureSeverityType_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EPlaneConstraintAxisSetting()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPlaneConstraintAxisSetting = PyImport_AddModule("EPlaneConstraintAxisSetting");
#else                                                                                     
	PyObject* new__module_EPlaneConstraintAxisSetting = Py_InitModule3("EPlaneConstraintAxisSetting", NULL, NULL);
#endif

	PyObject* new_dict_EPlaneConstraintAxisSetting = PyModule_GetDict(new_module_EPlaneConstraintAxisSetting);
	PyDict_SetItemString(new_dict_EPlaneConstraintAxisSetting, "Custom", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPlaneConstraintAxisSetting, "X", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPlaneConstraintAxisSetting, "Y", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPlaneConstraintAxisSetting, "Z", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPlaneConstraintAxisSetting, "UseGlobalPhysicsSetting", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPlaneConstraintAxisSetting, "EPlaneConstraintAxisSetting_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EInterpToBehaviourType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EInterpToBehaviourType = PyImport_AddModule("EInterpToBehaviourType");
#else                                                                                     
	PyObject* new__module_EInterpToBehaviourType = Py_InitModule3("EInterpToBehaviourType", NULL, NULL);
#endif

	PyObject* new_dict_EInterpToBehaviourType = PyModule_GetDict(new_module_EInterpToBehaviourType);
	PyDict_SetItemString(new_dict_EInterpToBehaviourType, "OneShot", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EInterpToBehaviourType, "OneShot_Reverse", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EInterpToBehaviourType, "Loop_Reset", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EInterpToBehaviourType, "PingPong", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EInterpToBehaviourType, "EInterpToBehaviourType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ETeleportType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETeleportType = PyImport_AddModule("ETeleportType");
#else                                                                                     
	PyObject* new__module_ETeleportType = Py_InitModule3("ETeleportType", NULL, NULL);
#endif

	PyObject* new_dict_ETeleportType = PyModule_GetDict(new_module_ETeleportType);
	PyDict_SetItemString(new_dict_ETeleportType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETeleportType, "TeleportPhysics", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETeleportType, "ResetPhysics", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETeleportType, "ETeleportType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPlatformInterfaceDataType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPlatformInterfaceDataType = PyImport_AddModule("EPlatformInterfaceDataType");
#else                                                                                     
	PyObject* new__module_EPlatformInterfaceDataType = Py_InitModule3("EPlatformInterfaceDataType", NULL, NULL);
#endif

	PyObject* new_dict_EPlatformInterfaceDataType = PyModule_GetDict(new_module_EPlatformInterfaceDataType);
	PyDict_SetItemString(new_dict_EPlatformInterfaceDataType, "PIDT_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPlatformInterfaceDataType, "PIDT_Int", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPlatformInterfaceDataType, "PIDT_Float", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPlatformInterfaceDataType, "PIDT_String", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPlatformInterfaceDataType, "PIDT_Object", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPlatformInterfaceDataType, "PIDT_Custom", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EPlatformInterfaceDataType, "PIDT_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EMovementMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMovementMode = PyImport_AddModule("EMovementMode");
#else                                                                                     
	PyObject* new__module_EMovementMode = Py_InitModule3("EMovementMode", NULL, NULL);
#endif

	PyObject* new_dict_EMovementMode = PyModule_GetDict(new_module_EMovementMode);
	PyDict_SetItemString(new_dict_EMovementMode, "MOVE_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMovementMode, "MOVE_Walking", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMovementMode, "MOVE_NavWalking", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMovementMode, "MOVE_Falling", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMovementMode, "MOVE_Swimming", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMovementMode, "MOVE_Flying", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMovementMode, "MOVE_Custom", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMovementMode, "MOVE_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_ENetworkFailure()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENetworkFailure = PyImport_AddModule("ENetworkFailure");
#else                                                                                     
	PyObject* new__module_ENetworkFailure = Py_InitModule3("ENetworkFailure", NULL, NULL);
#endif

	PyObject* new_dict_ENetworkFailure = PyModule_GetDict(new_module_ENetworkFailure);
	PyDict_SetItemString(new_dict_ENetworkFailure, "NetDriverAlreadyExists", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENetworkFailure, "NetDriverCreateFailure", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENetworkFailure, "NetDriverListenFailure", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENetworkFailure, "ConnectionLost", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ENetworkFailure, "ConnectionTimeout", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ENetworkFailure, "FailureReceived", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ENetworkFailure, "OutdatedClient", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ENetworkFailure, "OutdatedServer", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ENetworkFailure, "PendingConnectionFailure", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ENetworkFailure, "NetGuidMismatch", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ENetworkFailure, "NetChecksumMismatch", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_ENetworkFailure, "ENetworkFailure_MAX", Py_BuildValue("i", 11));

}
void unreal_export_uenum_ETravelFailure()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETravelFailure = PyImport_AddModule("ETravelFailure");
#else                                                                                     
	PyObject* new__module_ETravelFailure = Py_InitModule3("ETravelFailure", NULL, NULL);
#endif

	PyObject* new_dict_ETravelFailure = PyModule_GetDict(new_module_ETravelFailure);
	PyDict_SetItemString(new_dict_ETravelFailure, "NoLevel", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETravelFailure, "LoadMapFailure", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETravelFailure, "InvalidURL", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETravelFailure, "PackageMissing", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETravelFailure, "PackageVersion", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETravelFailure, "NoDownload", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETravelFailure, "TravelFailure", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ETravelFailure, "CheatCommands", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ETravelFailure, "PendingNetGameCreateFailure", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ETravelFailure, "CloudSaveFailure", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ETravelFailure, "ServerTravelFailure", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_ETravelFailure, "ClientTravelFailure", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_ETravelFailure, "ETravelFailure_MAX", Py_BuildValue("i", 12));

}
void unreal_export_uenum_EApplicationState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EApplicationState = PyImport_AddModule("EApplicationState");
#else                                                                                     
	PyObject* new__module_EApplicationState = Py_InitModule3("EApplicationState", NULL, NULL);
#endif

	PyObject* new_dict_EApplicationState = PyModule_GetDict(new_module_EApplicationState);
	PyDict_SetItemString(new_dict_EApplicationState, "Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EApplicationState, "Inactive", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EApplicationState, "Background", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EApplicationState, "Active", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EApplicationState, "EApplicationState_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EScreenOrientation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EScreenOrientation = PyImport_AddModule("EScreenOrientation");
#else                                                                                     
	PyObject* new__module_EScreenOrientation = Py_InitModule3("EScreenOrientation", NULL, NULL);
#endif

	PyObject* new_dict_EScreenOrientation = PyModule_GetDict(new_module_EScreenOrientation);
	PyDict_SetItemString(new_dict_EScreenOrientation, "Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EScreenOrientation, "Portrait", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EScreenOrientation, "PortraitUpsideDown", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EScreenOrientation, "LandscapeLeft", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EScreenOrientation, "LandscapeRight", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EScreenOrientation, "FaceUp", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EScreenOrientation, "FaceDown", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EScreenOrientation, "EScreenOrientation_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EObjectTypeQuery()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EObjectTypeQuery = PyImport_AddModule("EObjectTypeQuery");
#else                                                                                     
	PyObject* new__module_EObjectTypeQuery = Py_InitModule3("EObjectTypeQuery", NULL, NULL);
#endif

	PyObject* new_dict_EObjectTypeQuery = PyModule_GetDict(new_module_EObjectTypeQuery);
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery1", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery2", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery3", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery4", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery5", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery6", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery7", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery8", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery9", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery10", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery11", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery12", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery13", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery14", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery15", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery16", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery17", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery18", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery19", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery20", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery21", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery22", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery23", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery24", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery25", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery26", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery27", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery28", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery29", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery30", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery31", Py_BuildValue("i", 30));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery32", Py_BuildValue("i", 31));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "ObjectTypeQuery_MAX", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_EObjectTypeQuery, "EObjectTypeQuery_MAX", Py_BuildValue("i", 33));

}
void unreal_export_uenum_EDrawDebugTrace()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDrawDebugTrace = PyImport_AddModule("EDrawDebugTrace");
#else                                                                                     
	PyObject* new__module_EDrawDebugTrace = Py_InitModule3("EDrawDebugTrace", NULL, NULL);
#endif

	PyObject* new_dict_EDrawDebugTrace = PyModule_GetDict(new_module_EDrawDebugTrace);
	PyDict_SetItemString(new_dict_EDrawDebugTrace, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDrawDebugTrace, "ForOneFrame", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDrawDebugTrace, "ForDuration", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDrawDebugTrace, "Persistent", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDrawDebugTrace, "EDrawDebugTrace_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ETraceTypeQuery()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETraceTypeQuery = PyImport_AddModule("ETraceTypeQuery");
#else                                                                                     
	PyObject* new__module_ETraceTypeQuery = Py_InitModule3("ETraceTypeQuery", NULL, NULL);
#endif

	PyObject* new_dict_ETraceTypeQuery = PyModule_GetDict(new_module_ETraceTypeQuery);
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery1", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery2", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery3", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery4", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery5", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery6", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery7", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery8", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery9", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery10", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery11", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery12", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery13", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery14", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery15", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery16", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery17", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery18", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery19", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery20", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery21", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery22", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery23", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery24", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery25", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery26", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery27", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery28", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery29", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery30", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery31", Py_BuildValue("i", 30));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery32", Py_BuildValue("i", 31));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "TraceTypeQuery_MAX", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_ETraceTypeQuery, "ETraceTypeQuery_MAX", Py_BuildValue("i", 33));

}
void unreal_export_uenum_EMoveComponentAction()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMoveComponentAction = PyImport_AddModule("EMoveComponentAction");
#else                                                                                     
	PyObject* new__module_EMoveComponentAction = Py_InitModule3("EMoveComponentAction", NULL, NULL);
#endif

	PyObject* new_dict_EMoveComponentAction = PyModule_GetDict(new_module_EMoveComponentAction);
	PyDict_SetItemString(new_dict_EMoveComponentAction, "Move", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMoveComponentAction, "Stop", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMoveComponentAction, "Return", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMoveComponentAction, "EMoveComponentAction_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EQuitPreference()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EQuitPreference = PyImport_AddModule("EQuitPreference");
#else                                                                                     
	PyObject* new__module_EQuitPreference = Py_InitModule3("EQuitPreference", NULL, NULL);
#endif

	PyObject* new_dict_EQuitPreference = PyModule_GetDict(new_module_EQuitPreference);
	PyDict_SetItemString(new_dict_EQuitPreference, "Quit", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EQuitPreference, "Background", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EQuitPreference, "EQuitPreference_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ENavPathEvent()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENavPathEvent = PyImport_AddModule("ENavPathEvent");
#else                                                                                     
	PyObject* new__module_ENavPathEvent = Py_InitModule3("ENavPathEvent", NULL, NULL);
#endif

	PyObject* new_dict_ENavPathEvent = PyModule_GetDict(new_module_ENavPathEvent);
	PyDict_SetItemString(new_dict_ENavPathEvent, "Cleared", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENavPathEvent, "NewPath", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENavPathEvent, "UpdatedDueToGoalMoved", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENavPathEvent, "UpdatedDueToNavigationChanged", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ENavPathEvent, "Invalidated", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ENavPathEvent, "RePathFailed", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ENavPathEvent, "MetaPathUpdate", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ENavPathEvent, "Custom", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ENavPathEvent, "ENavPathEvent_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_ERuntimeGenerationType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERuntimeGenerationType = PyImport_AddModule("ERuntimeGenerationType");
#else                                                                                     
	PyObject* new__module_ERuntimeGenerationType = Py_InitModule3("ERuntimeGenerationType", NULL, NULL);
#endif

	PyObject* new_dict_ERuntimeGenerationType = PyModule_GetDict(new_module_ERuntimeGenerationType);
	PyDict_SetItemString(new_dict_ERuntimeGenerationType, "Static", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERuntimeGenerationType, "DynamicModifiersOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERuntimeGenerationType, "Dynamic", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERuntimeGenerationType, "LegacyGeneration", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERuntimeGenerationType, "ERuntimeGenerationType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ENavCostDisplay()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENavCostDisplay = PyImport_AddModule("ENavCostDisplay");
#else                                                                                     
	PyObject* new__module_ENavCostDisplay = Py_InitModule3("ENavCostDisplay", NULL, NULL);
#endif

	PyObject* new_dict_ENavCostDisplay = PyModule_GetDict(new_module_ENavCostDisplay);
	PyDict_SetItemString(new_dict_ENavCostDisplay, "TotalCost", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENavCostDisplay, "HeuristicOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENavCostDisplay, "RealCostOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENavCostDisplay, "ENavCostDisplay_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ERecastPartitioning()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERecastPartitioning = PyImport_AddModule("ERecastPartitioning");
#else                                                                                     
	PyObject* new__module_ERecastPartitioning = Py_InitModule3("ERecastPartitioning", NULL, NULL);
#endif

	PyObject* new_dict_ERecastPartitioning = PyModule_GetDict(new_module_ERecastPartitioning);
	PyDict_SetItemString(new_dict_ERecastPartitioning, "Monotone", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERecastPartitioning, "Watershed", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERecastPartitioning, "ChunkyMonotone", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERecastPartitioning, "ERecastPartitioning_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EClothingWindMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EClothingWindMethod = PyImport_AddModule("EClothingWindMethod");
#else                                                                                     
	PyObject* new__module_EClothingWindMethod = Py_InitModule3("EClothingWindMethod", NULL, NULL);
#endif

	PyObject* new_dict_EClothingWindMethod = PyModule_GetDict(new_module_EClothingWindMethod);
	PyDict_SetItemString(new_dict_EClothingWindMethod, "Legacy", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EClothingWindMethod, "Accurate", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EClothingWindMethod, "EClothingWindMethod_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_MaskTarget_PhysMesh()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_MaskTarget_PhysMesh = PyImport_AddModule("MaskTarget_PhysMesh");
#else                                                                                     
	PyObject* new__module_MaskTarget_PhysMesh = Py_InitModule3("MaskTarget_PhysMesh", NULL, NULL);
#endif

	PyObject* new_dict_MaskTarget_PhysMesh = PyModule_GetDict(new_module_MaskTarget_PhysMesh);
	PyDict_SetItemString(new_dict_MaskTarget_PhysMesh, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_MaskTarget_PhysMesh, "MaxDistance", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_MaskTarget_PhysMesh, "BackstopDistance", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_MaskTarget_PhysMesh, "BackstopRadius", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_MaskTarget_PhysMesh, "AnimDriveMultiplier", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_MaskTarget_PhysMesh, "MaskTarget_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EHDRCaptureGamut()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHDRCaptureGamut = PyImport_AddModule("EHDRCaptureGamut");
#else                                                                                     
	PyObject* new__module_EHDRCaptureGamut = Py_InitModule3("EHDRCaptureGamut", NULL, NULL);
#endif

	PyObject* new_dict_EHDRCaptureGamut = PyModule_GetDict(new_module_EHDRCaptureGamut);
	PyDict_SetItemString(new_dict_EHDRCaptureGamut, "HCGM_Rec709", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHDRCaptureGamut, "HCGM_P3DCI", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHDRCaptureGamut, "HCGM_Rec2020", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHDRCaptureGamut, "HCGM_ACES", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EHDRCaptureGamut, "HCGM_ACEScg", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EHDRCaptureGamut, "HCGM_Linear", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EHDRCaptureGamut, "HCGM_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EMovieSceneCaptureProtocolState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMovieSceneCaptureProtocolState = PyImport_AddModule("EMovieSceneCaptureProtocolState");
#else                                                                                     
	PyObject* new__module_EMovieSceneCaptureProtocolState = Py_InitModule3("EMovieSceneCaptureProtocolState", NULL, NULL);
#endif

	PyObject* new_dict_EMovieSceneCaptureProtocolState = PyModule_GetDict(new_module_EMovieSceneCaptureProtocolState);
	PyDict_SetItemString(new_dict_EMovieSceneCaptureProtocolState, "Idle", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMovieSceneCaptureProtocolState, "Initialized", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMovieSceneCaptureProtocolState, "Capturing", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMovieSceneCaptureProtocolState, "Finalizing", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMovieSceneCaptureProtocolState, "EMovieSceneCaptureProtocolState_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EThumbnailQuality()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EThumbnailQuality = PyImport_AddModule("EThumbnailQuality");
#else                                                                                     
	PyObject* new__module_EThumbnailQuality = Py_InitModule3("EThumbnailQuality", NULL, NULL);
#endif

	PyObject* new_dict_EThumbnailQuality = PyModule_GetDict(new_module_EThumbnailQuality);
	PyDict_SetItemString(new_dict_EThumbnailQuality, "Draft", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EThumbnailQuality, "Normal", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EThumbnailQuality, "Best", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EThumbnailQuality, "EThumbnailQuality_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EKeyGroupMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EKeyGroupMode = PyImport_AddModule("EKeyGroupMode");
#else                                                                                     
	PyObject* new__module_EKeyGroupMode = Py_InitModule3("EKeyGroupMode", NULL, NULL);
#endif

	PyObject* new_dict_EKeyGroupMode = PyModule_GetDict(new_module_EKeyGroupMode);
	PyDict_SetItemString(new_dict_EKeyGroupMode, "KeyChanged", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EKeyGroupMode, "KeyGroup", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EKeyGroupMode, "KeyAll", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EKeyGroupMode, "EKeyGroupMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAllowEditsMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAllowEditsMode = PyImport_AddModule("EAllowEditsMode");
#else                                                                                     
	PyObject* new__module_EAllowEditsMode = Py_InitModule3("EAllowEditsMode", NULL, NULL);
#endif

	PyObject* new_dict_EAllowEditsMode = PyModule_GetDict(new_module_EAllowEditsMode);
	PyDict_SetItemString(new_dict_EAllowEditsMode, "AllEdits", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAllowEditsMode, "AllowSequencerEditsOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAllowEditsMode, "AllowLevelEditsOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAllowEditsMode, "EAllowEditsMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAutoChangeMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAutoChangeMode = PyImport_AddModule("EAutoChangeMode");
#else                                                                                     
	PyObject* new__module_EAutoChangeMode = Py_InitModule3("EAutoChangeMode", NULL, NULL);
#endif

	PyObject* new_dict_EAutoChangeMode = PyModule_GetDict(new_module_EAutoChangeMode);
	PyDict_SetItemString(new_dict_EAutoChangeMode, "AutoKey", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAutoChangeMode, "AutoTrack", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAutoChangeMode, "All", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAutoChangeMode, "None", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAutoChangeMode, "EAutoChangeMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESequencerSectionResizeMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESequencerSectionResizeMode = PyImport_AddModule("ESequencerSectionResizeMode");
#else                                                                                     
	PyObject* new__module_ESequencerSectionResizeMode = Py_InitModule3("ESequencerSectionResizeMode", NULL, NULL);
#endif

	PyObject* new_dict_ESequencerSectionResizeMode = PyModule_GetDict(new_module_ESequencerSectionResizeMode);
	PyDict_SetItemString(new_dict_ESequencerSectionResizeMode, "SSRM_LeadingEdge", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESequencerSectionResizeMode, "SSRM_TrailingEdge", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESequencerSectionResizeMode, "SSRM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESequencerLoopMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESequencerLoopMode = PyImport_AddModule("ESequencerLoopMode");
#else                                                                                     
	PyObject* new__module_ESequencerLoopMode = Py_InitModule3("ESequencerLoopMode", NULL, NULL);
#endif

	PyObject* new_dict_ESequencerLoopMode = PyModule_GetDict(new_module_ESequencerLoopMode);
	PyDict_SetItemString(new_dict_ESequencerLoopMode, "SLM_NoLoop", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESequencerLoopMode, "SLM_Loop", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESequencerLoopMode, "SLM_LoopSelectionRange", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESequencerLoopMode, "SLM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESequencerZoomPosition()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESequencerZoomPosition = PyImport_AddModule("ESequencerZoomPosition");
#else                                                                                     
	PyObject* new__module_ESequencerZoomPosition = Py_InitModule3("ESequencerZoomPosition", NULL, NULL);
#endif

	PyObject* new_dict_ESequencerZoomPosition = PyModule_GetDict(new_module_ESequencerZoomPosition);
	PyDict_SetItemString(new_dict_ESequencerZoomPosition, "SZP_CurrentTime", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESequencerZoomPosition, "SZP_MousePosition", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESequencerZoomPosition, "SZP_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESequencerSpawnPosition()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESequencerSpawnPosition = PyImport_AddModule("ESequencerSpawnPosition");
#else                                                                                     
	PyObject* new__module_ESequencerSpawnPosition = Py_InitModule3("ESequencerSpawnPosition", NULL, NULL);
#endif

	PyObject* new_dict_ESequencerSpawnPosition = PyModule_GetDict(new_module_ESequencerSpawnPosition);
	PyDict_SetItemString(new_dict_ESequencerSpawnPosition, "SSP_Origin", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESequencerSpawnPosition, "SSP_PlaceInFrontOfCamera", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESequencerSpawnPosition, "SSP_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETouchSwipeDirection()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETouchSwipeDirection = PyImport_AddModule("ETouchSwipeDirection");
#else                                                                                     
	PyObject* new__module_ETouchSwipeDirection = Py_InitModule3("ETouchSwipeDirection", NULL, NULL);
#endif

	PyObject* new_dict_ETouchSwipeDirection = PyModule_GetDict(new_module_ETouchSwipeDirection);
	PyDict_SetItemString(new_dict_ETouchSwipeDirection, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETouchSwipeDirection, "Left", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETouchSwipeDirection, "Right", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETouchSwipeDirection, "Up", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETouchSwipeDirection, "Down", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETouchSwipeDirection, "ETouchSwipeDirection_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EControllerType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EControllerType = PyImport_AddModule("EControllerType");
#else                                                                                     
	PyObject* new__module_EControllerType = Py_InitModule3("EControllerType", NULL, NULL);
#endif

	PyObject* new_dict_EControllerType = PyModule_GetDict(new_module_EControllerType);
	PyDict_SetItemString(new_dict_EControllerType, "Laser", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EControllerType, "AssistingLaser", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EControllerType, "UI", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EControllerType, "Navigation", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EControllerType, "Unknown", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EControllerType, "EControllerType_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EVREditorWidgetDrawingPolicy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVREditorWidgetDrawingPolicy = PyImport_AddModule("EVREditorWidgetDrawingPolicy");
#else                                                                                     
	PyObject* new__module_EVREditorWidgetDrawingPolicy = Py_InitModule3("EVREditorWidgetDrawingPolicy", NULL, NULL);
#endif

	PyObject* new_dict_EVREditorWidgetDrawingPolicy = PyModule_GetDict(new_module_EVREditorWidgetDrawingPolicy);
	PyDict_SetItemString(new_dict_EVREditorWidgetDrawingPolicy, "Always", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVREditorWidgetDrawingPolicy, "Hovering", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVREditorWidgetDrawingPolicy, "EVREditorWidgetDrawingPolicy_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EInteractorHand()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EInteractorHand = PyImport_AddModule("EInteractorHand");
#else                                                                                     
	PyObject* new__module_EInteractorHand = Py_InitModule3("EInteractorHand", NULL, NULL);
#endif

	PyObject* new_dict_EInteractorHand = PyModule_GetDict(new_module_EInteractorHand);
	PyDict_SetItemString(new_dict_EInteractorHand, "Right", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EInteractorHand, "Left", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EInteractorHand, "EInteractorHand_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EGizmoHandleTypes()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGizmoHandleTypes = PyImport_AddModule("EGizmoHandleTypes");
#else                                                                                     
	PyObject* new__module_EGizmoHandleTypes = Py_InitModule3("EGizmoHandleTypes", NULL, NULL);
#endif

	PyObject* new_dict_EGizmoHandleTypes = PyModule_GetDict(new_module_EGizmoHandleTypes);
	PyDict_SetItemString(new_dict_EGizmoHandleTypes, "All", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGizmoHandleTypes, "Translate", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGizmoHandleTypes, "Rotate", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGizmoHandleTypes, "Scale", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGizmoHandleTypes, "EGizmoHandleTypes_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EViewportInteractionDraggingMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EViewportInteractionDraggingMode = PyImport_AddModule("EViewportInteractionDraggingMode");
#else                                                                                     
	PyObject* new__module_EViewportInteractionDraggingMode = Py_InitModule3("EViewportInteractionDraggingMode", NULL, NULL);
#endif

	PyObject* new_dict_EViewportInteractionDraggingMode = PyModule_GetDict(new_module_EViewportInteractionDraggingMode);
	PyDict_SetItemString(new_dict_EViewportInteractionDraggingMode, "Nothing", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EViewportInteractionDraggingMode, "TransformablesWithGizmo", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EViewportInteractionDraggingMode, "TransformablesAtLaserImpact", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EViewportInteractionDraggingMode, "AssistingDrag", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EViewportInteractionDraggingMode, "TransformablesFreely", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EViewportInteractionDraggingMode, "World", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EViewportInteractionDraggingMode, "Interactable", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EViewportInteractionDraggingMode, "Material", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EViewportInteractionDraggingMode, "EViewportInteractionDraggingMode_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_EViewportWorldInteractionType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EViewportWorldInteractionType = PyImport_AddModule("EViewportWorldInteractionType");
#else                                                                                     
	PyObject* new__module_EViewportWorldInteractionType = Py_InitModule3("EViewportWorldInteractionType", NULL, NULL);
#endif

	PyObject* new_dict_EViewportWorldInteractionType = PyModule_GetDict(new_module_EViewportWorldInteractionType);
	PyDict_SetItemString(new_dict_EViewportWorldInteractionType, "VR", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EViewportWorldInteractionType, "Legacy", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EViewportWorldInteractionType, "EViewportWorldInteractionType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELocalizationTargetLoadingPolicy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELocalizationTargetLoadingPolicy = PyImport_AddModule("ELocalizationTargetLoadingPolicy");
#else                                                                                     
	PyObject* new__module_ELocalizationTargetLoadingPolicy = Py_InitModule3("ELocalizationTargetLoadingPolicy", NULL, NULL);
#endif

	PyObject* new_dict_ELocalizationTargetLoadingPolicy = PyModule_GetDict(new_module_ELocalizationTargetLoadingPolicy);
	PyDict_SetItemString(new_dict_ELocalizationTargetLoadingPolicy, "Never", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELocalizationTargetLoadingPolicy, "Always", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELocalizationTargetLoadingPolicy, "Editor", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELocalizationTargetLoadingPolicy, "Game", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELocalizationTargetLoadingPolicy, "PropertyNames", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELocalizationTargetLoadingPolicy, "ToolTips", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ELocalizationTargetLoadingPolicy, "ELocalizationTargetLoadingPolicy_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ELocalizationGatherPathRoot()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELocalizationGatherPathRoot = PyImport_AddModule("ELocalizationGatherPathRoot");
#else                                                                                     
	PyObject* new__module_ELocalizationGatherPathRoot = Py_InitModule3("ELocalizationGatherPathRoot", NULL, NULL);
#endif

	PyObject* new_dict_ELocalizationGatherPathRoot = PyModule_GetDict(new_module_ELocalizationGatherPathRoot);
	PyDict_SetItemString(new_dict_ELocalizationGatherPathRoot, "Auto", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELocalizationGatherPathRoot, "Engine", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELocalizationGatherPathRoot, "Project", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELocalizationGatherPathRoot, "ELocalizationGatherPathRoot_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELocalizationTargetConflictStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELocalizationTargetConflictStatus = PyImport_AddModule("ELocalizationTargetConflictStatus");
#else                                                                                     
	PyObject* new__module_ELocalizationTargetConflictStatus = Py_InitModule3("ELocalizationTargetConflictStatus", NULL, NULL);
#endif

	PyObject* new_dict_ELocalizationTargetConflictStatus = PyModule_GetDict(new_module_ELocalizationTargetConflictStatus);
	PyDict_SetItemString(new_dict_ELocalizationTargetConflictStatus, "Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELocalizationTargetConflictStatus, "ConflictsPresent", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELocalizationTargetConflictStatus, "Clear", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELocalizationTargetConflictStatus, "ELocalizationTargetConflictStatus_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELocTextPlatformSplitMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELocTextPlatformSplitMode = PyImport_AddModule("ELocTextPlatformSplitMode");
#else                                                                                     
	PyObject* new__module_ELocTextPlatformSplitMode = Py_InitModule3("ELocTextPlatformSplitMode", NULL, NULL);
#endif

	PyObject* new_dict_ELocTextPlatformSplitMode = PyModule_GetDict(new_module_ELocTextPlatformSplitMode);
	PyDict_SetItemString(new_dict_ELocTextPlatformSplitMode, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELocTextPlatformSplitMode, "Restricted", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELocTextPlatformSplitMode, "All", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELocTextPlatformSplitMode, "ELocTextPlatformSplitMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELocalizedTextCollapseMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELocalizedTextCollapseMode = PyImport_AddModule("ELocalizedTextCollapseMode");
#else                                                                                     
	PyObject* new__module_ELocalizedTextCollapseMode = Py_InitModule3("ELocalizedTextCollapseMode", NULL, NULL);
#endif

	PyObject* new_dict_ELocalizedTextCollapseMode = PyModule_GetDict(new_module_ELocalizedTextCollapseMode);
	PyDict_SetItemString(new_dict_ELocalizedTextCollapseMode, "IdenticalTextIdAndSource", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELocalizedTextCollapseMode, "IdenticalPackageIdTextIdAndSource", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELocalizedTextCollapseMode, "IdenticalNamespaceAndSource", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELocalizedTextCollapseMode, "ELocalizedTextCollapseMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ERelativeTransformSpace()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERelativeTransformSpace = PyImport_AddModule("ERelativeTransformSpace");
#else                                                                                     
	PyObject* new__module_ERelativeTransformSpace = Py_InitModule3("ERelativeTransformSpace", NULL, NULL);
#endif

	PyObject* new_dict_ERelativeTransformSpace = PyModule_GetDict(new_module_ERelativeTransformSpace);
	PyDict_SetItemString(new_dict_ERelativeTransformSpace, "RTS_World", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERelativeTransformSpace, "RTS_Actor", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERelativeTransformSpace, "RTS_Component", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERelativeTransformSpace, "RTS_ParentBoneSpace", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERelativeTransformSpace, "RTS_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EAttachLocation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAttachLocation = PyImport_AddModule("EAttachLocation");
#else                                                                                     
	PyObject* new__module_EAttachLocation = Py_InitModule3("EAttachLocation", NULL, NULL);
#endif

	PyObject* new_dict_EAttachLocation = PyModule_GetDict(new_module_EAttachLocation);
	PyDict_SetItemString(new_dict_EAttachLocation, "KeepRelativeOffset", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAttachLocation, "KeepWorldPosition", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAttachLocation, "SnapToTarget", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAttachLocation, "SnapToTargetIncludingScale", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAttachLocation, "EAttachLocation_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EAttachmentRule()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAttachmentRule = PyImport_AddModule("EAttachmentRule");
#else                                                                                     
	PyObject* new__module_EAttachmentRule = Py_InitModule3("EAttachmentRule", NULL, NULL);
#endif

	PyObject* new_dict_EAttachmentRule = PyModule_GetDict(new_module_EAttachmentRule);
	PyDict_SetItemString(new_dict_EAttachmentRule, "KeepRelative", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAttachmentRule, "KeepWorld", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAttachmentRule, "SnapToTarget", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAttachmentRule, "EAttachmentRule_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDetachmentRule()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDetachmentRule = PyImport_AddModule("EDetachmentRule");
#else                                                                                     
	PyObject* new__module_EDetachmentRule = Py_InitModule3("EDetachmentRule", NULL, NULL);
#endif

	PyObject* new_dict_EDetachmentRule = PyModule_GetDict(new_module_EDetachmentRule);
	PyDict_SetItemString(new_dict_EDetachmentRule, "KeepRelative", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDetachmentRule, "KeepWorld", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDetachmentRule, "EDetachmentRule_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EComponentMobility()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EComponentMobility = PyImport_AddModule("EComponentMobility");
#else                                                                                     
	PyObject* new__module_EComponentMobility = Py_InitModule3("EComponentMobility", NULL, NULL);
#endif

	PyObject* new_dict_EComponentMobility = PyModule_GetDict(new_module_EComponentMobility);
	PyDict_SetItemString(new_dict_EComponentMobility, "Static", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EComponentMobility, "Stationary", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EComponentMobility, "Movable", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EComponentMobility, "EComponentMobility_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDetailMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDetailMode = PyImport_AddModule("EDetailMode");
#else                                                                                     
	PyObject* new__module_EDetailMode = Py_InitModule3("EDetailMode", NULL, NULL);
#endif

	PyObject* new_dict_EDetailMode = PyModule_GetDict(new_module_EDetailMode);
	PyDict_SetItemString(new_dict_EDetailMode, "DM_Low", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDetailMode, "DM_Medium", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDetailMode, "DM_High", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDetailMode, "DM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMeshTrackerVertexColorMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshTrackerVertexColorMode = PyImport_AddModule("EMeshTrackerVertexColorMode");
#else                                                                                     
	PyObject* new__module_EMeshTrackerVertexColorMode = Py_InitModule3("EMeshTrackerVertexColorMode", NULL, NULL);
#endif

	PyObject* new_dict_EMeshTrackerVertexColorMode = PyModule_GetDict(new_module_EMeshTrackerVertexColorMode);
	PyDict_SetItemString(new_dict_EMeshTrackerVertexColorMode, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshTrackerVertexColorMode, "Confidence", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshTrackerVertexColorMode, "Block", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMeshTrackerVertexColorMode, "EMeshTrackerVertexColorMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EARTrackingState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARTrackingState = PyImport_AddModule("EARTrackingState");
#else                                                                                     
	PyObject* new__module_EARTrackingState = Py_InitModule3("EARTrackingState", NULL, NULL);
#endif

	PyObject* new_dict_EARTrackingState = PyModule_GetDict(new_module_EARTrackingState);
	PyDict_SetItemString(new_dict_EARTrackingState, "Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARTrackingState, "Tracking", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARTrackingState, "NotTracking", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARTrackingState, "StoppedTracking", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EARTrackingState, "EARTrackingState_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EARSessionTrackingFeature()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARSessionTrackingFeature = PyImport_AddModule("EARSessionTrackingFeature");
#else                                                                                     
	PyObject* new__module_EARSessionTrackingFeature = Py_InitModule3("EARSessionTrackingFeature", NULL, NULL);
#endif

	PyObject* new_dict_EARSessionTrackingFeature = PyModule_GetDict(new_module_EARSessionTrackingFeature);
	PyDict_SetItemString(new_dict_EARSessionTrackingFeature, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARSessionTrackingFeature, "PoseDetection2D", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARSessionTrackingFeature, "PersonSegmentation", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARSessionTrackingFeature, "PersonSegmentationWithDepth", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EARSessionTrackingFeature, "EARSessionTrackingFeature_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EARFaceTrackingUpdate()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARFaceTrackingUpdate = PyImport_AddModule("EARFaceTrackingUpdate");
#else                                                                                     
	PyObject* new__module_EARFaceTrackingUpdate = Py_InitModule3("EARFaceTrackingUpdate", NULL, NULL);
#endif

	PyObject* new_dict_EARFaceTrackingUpdate = PyModule_GetDict(new_module_EARFaceTrackingUpdate);
	PyDict_SetItemString(new_dict_EARFaceTrackingUpdate, "CurvesAndGeo", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARFaceTrackingUpdate, "CurvesOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARFaceTrackingUpdate, "EARFaceTrackingUpdate_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EAREnvironmentCaptureProbeType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAREnvironmentCaptureProbeType = PyImport_AddModule("EAREnvironmentCaptureProbeType");
#else                                                                                     
	PyObject* new__module_EAREnvironmentCaptureProbeType = Py_InitModule3("EAREnvironmentCaptureProbeType", NULL, NULL);
#endif

	PyObject* new_dict_EAREnvironmentCaptureProbeType = PyModule_GetDict(new_module_EAREnvironmentCaptureProbeType);
	PyDict_SetItemString(new_dict_EAREnvironmentCaptureProbeType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAREnvironmentCaptureProbeType, "Manual", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAREnvironmentCaptureProbeType, "Automatic", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAREnvironmentCaptureProbeType, "EAREnvironmentCaptureProbeType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EARFrameSyncMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARFrameSyncMode = PyImport_AddModule("EARFrameSyncMode");
#else                                                                                     
	PyObject* new__module_EARFrameSyncMode = Py_InitModule3("EARFrameSyncMode", NULL, NULL);
#endif

	PyObject* new_dict_EARFrameSyncMode = PyModule_GetDict(new_module_EARFrameSyncMode);
	PyDict_SetItemString(new_dict_EARFrameSyncMode, "SyncTickWithCameraImage", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARFrameSyncMode, "SyncTickWithoutCameraImage", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARFrameSyncMode, "EARFrameSyncMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EARLightEstimationMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARLightEstimationMode = PyImport_AddModule("EARLightEstimationMode");
#else                                                                                     
	PyObject* new__module_EARLightEstimationMode = Py_InitModule3("EARLightEstimationMode", NULL, NULL);
#endif

	PyObject* new_dict_EARLightEstimationMode = PyModule_GetDict(new_module_EARLightEstimationMode);
	PyDict_SetItemString(new_dict_EARLightEstimationMode, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARLightEstimationMode, "AmbientLightEstimate", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARLightEstimationMode, "DirectionalLightEstimate", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARLightEstimationMode, "EARLightEstimationMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EARPlaneDetectionMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARPlaneDetectionMode = PyImport_AddModule("EARPlaneDetectionMode");
#else                                                                                     
	PyObject* new__module_EARPlaneDetectionMode = Py_InitModule3("EARPlaneDetectionMode", NULL, NULL);
#endif

	PyObject* new_dict_EARPlaneDetectionMode = PyModule_GetDict(new_module_EARPlaneDetectionMode);
	PyDict_SetItemString(new_dict_EARPlaneDetectionMode, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARPlaneDetectionMode, "HorizontalPlaneDetection", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARPlaneDetectionMode, "VerticalPlaneDetection", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARPlaneDetectionMode, "EARPlaneDetectionMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EARSessionType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARSessionType = PyImport_AddModule("EARSessionType");
#else                                                                                     
	PyObject* new__module_EARSessionType = Py_InitModule3("EARSessionType", NULL, NULL);
#endif

	PyObject* new_dict_EARSessionType = PyModule_GetDict(new_module_EARSessionType);
	PyDict_SetItemString(new_dict_EARSessionType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARSessionType, "Orientation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARSessionType, "World", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARSessionType, "Face", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EARSessionType, "Image", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EARSessionType, "ObjectScanning", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EARSessionType, "PoseTracking", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EARSessionType, "EARSessionType_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EARWorldAlignment()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARWorldAlignment = PyImport_AddModule("EARWorldAlignment");
#else                                                                                     
	PyObject* new__module_EARWorldAlignment = Py_InitModule3("EARWorldAlignment", NULL, NULL);
#endif

	PyObject* new_dict_EARWorldAlignment = PyModule_GetDict(new_module_EARWorldAlignment);
	PyDict_SetItemString(new_dict_EARWorldAlignment, "Gravity", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARWorldAlignment, "GravityAndHeading", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARWorldAlignment, "Camera", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARWorldAlignment, "EARWorldAlignment_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EARDepthAccuracy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARDepthAccuracy = PyImport_AddModule("EARDepthAccuracy");
#else                                                                                     
	PyObject* new__module_EARDepthAccuracy = Py_InitModule3("EARDepthAccuracy", NULL, NULL);
#endif

	PyObject* new_dict_EARDepthAccuracy = PyModule_GetDict(new_module_EARDepthAccuracy);
	PyDict_SetItemString(new_dict_EARDepthAccuracy, "Unkown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARDepthAccuracy, "Approximate", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARDepthAccuracy, "Accurate", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARDepthAccuracy, "EARDepthAccuracy_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EARDepthQuality()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARDepthQuality = PyImport_AddModule("EARDepthQuality");
#else                                                                                     
	PyObject* new__module_EARDepthQuality = Py_InitModule3("EARDepthQuality", NULL, NULL);
#endif

	PyObject* new_dict_EARDepthQuality = PyModule_GetDict(new_module_EARDepthQuality);
	PyDict_SetItemString(new_dict_EARDepthQuality, "Unkown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARDepthQuality, "Low", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARDepthQuality, "High", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARDepthQuality, "EARDepthQuality_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EARTextureType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARTextureType = PyImport_AddModule("EARTextureType");
#else                                                                                     
	PyObject* new__module_EARTextureType = Py_InitModule3("EARTextureType", NULL, NULL);
#endif

	PyObject* new_dict_EARTextureType = PyModule_GetDict(new_module_EARTextureType);
	PyDict_SetItemString(new_dict_EARTextureType, "CameraImage", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARTextureType, "CameraDepth", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARTextureType, "EnvironmentCapture", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARTextureType, "EARTextureType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAREye()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAREye = PyImport_AddModule("EAREye");
#else                                                                                     
	PyObject* new__module_EAREye = Py_InitModule3("EAREye", NULL, NULL);
#endif

	PyObject* new_dict_EAREye = PyModule_GetDict(new_module_EAREye);
	PyDict_SetItemString(new_dict_EAREye, "LeftEye", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAREye, "RightEye", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAREye, "EAREye_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EARFaceBlendShape()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARFaceBlendShape = PyImport_AddModule("EARFaceBlendShape");
#else                                                                                     
	PyObject* new__module_EARFaceBlendShape = Py_InitModule3("EARFaceBlendShape", NULL, NULL);
#endif

	PyObject* new_dict_EARFaceBlendShape = PyModule_GetDict(new_module_EARFaceBlendShape);
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeBlinkLeft", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeLookDownLeft", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeLookInLeft", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeLookOutLeft", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeLookUpLeft", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeSquintLeft", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeWideLeft", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeBlinkRight", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeLookDownRight", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeLookInRight", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeLookOutRight", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeLookUpRight", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeSquintRight", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "EyeWideRight", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "JawForward", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "JawLeft", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "JawRight", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "JawOpen", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthClose", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthFunnel", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthPucker", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthLeft", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthRight", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthSmileLeft", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthSmileRight", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthFrownLeft", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthFrownRight", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthDimpleLeft", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthDimpleRight", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthStretchLeft", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthStretchRight", Py_BuildValue("i", 30));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthRollLower", Py_BuildValue("i", 31));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthRollUpper", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthShrugLower", Py_BuildValue("i", 33));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthShrugUpper", Py_BuildValue("i", 34));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthPressLeft", Py_BuildValue("i", 35));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthPressRight", Py_BuildValue("i", 36));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthLowerDownLeft", Py_BuildValue("i", 37));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthLowerDownRight", Py_BuildValue("i", 38));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthUpperUpLeft", Py_BuildValue("i", 39));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MouthUpperUpRight", Py_BuildValue("i", 40));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "BrowDownLeft", Py_BuildValue("i", 41));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "BrowDownRight", Py_BuildValue("i", 42));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "BrowInnerUp", Py_BuildValue("i", 43));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "BrowOuterUpLeft", Py_BuildValue("i", 44));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "BrowOuterUpRight", Py_BuildValue("i", 45));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "CheekPuff", Py_BuildValue("i", 46));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "CheekSquintLeft", Py_BuildValue("i", 47));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "CheekSquintRight", Py_BuildValue("i", 48));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "NoseSneerLeft", Py_BuildValue("i", 49));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "NoseSneerRight", Py_BuildValue("i", 50));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "TongueOut", Py_BuildValue("i", 51));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "HeadYaw", Py_BuildValue("i", 52));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "HeadPitch", Py_BuildValue("i", 53));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "HeadRoll", Py_BuildValue("i", 54));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "LeftEyeYaw", Py_BuildValue("i", 55));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "LeftEyePitch", Py_BuildValue("i", 56));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "LeftEyeRoll", Py_BuildValue("i", 57));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "RightEyeYaw", Py_BuildValue("i", 58));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "RightEyePitch", Py_BuildValue("i", 59));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "RightEyeRoll", Py_BuildValue("i", 60));
	PyDict_SetItemString(new_dict_EARFaceBlendShape, "MAX", Py_BuildValue("i", 61));

}
void unreal_export_uenum_EARFaceTrackingDirection()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARFaceTrackingDirection = PyImport_AddModule("EARFaceTrackingDirection");
#else                                                                                     
	PyObject* new__module_EARFaceTrackingDirection = Py_InitModule3("EARFaceTrackingDirection", NULL, NULL);
#endif

	PyObject* new_dict_EARFaceTrackingDirection = PyModule_GetDict(new_module_EARFaceTrackingDirection);
	PyDict_SetItemString(new_dict_EARFaceTrackingDirection, "FaceRelative", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARFaceTrackingDirection, "FaceMirrored", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARFaceTrackingDirection, "EARFaceTrackingDirection_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EARCandidateImageOrientation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARCandidateImageOrientation = PyImport_AddModule("EARCandidateImageOrientation");
#else                                                                                     
	PyObject* new__module_EARCandidateImageOrientation = Py_InitModule3("EARCandidateImageOrientation", NULL, NULL);
#endif

	PyObject* new_dict_EARCandidateImageOrientation = PyModule_GetDict(new_module_EARCandidateImageOrientation);
	PyDict_SetItemString(new_dict_EARCandidateImageOrientation, "Landscape", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARCandidateImageOrientation, "Portrait", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARCandidateImageOrientation, "EARCandidateImageOrientation_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EARJointTransformSpace()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARJointTransformSpace = PyImport_AddModule("EARJointTransformSpace");
#else                                                                                     
	PyObject* new__module_EARJointTransformSpace = Py_InitModule3("EARJointTransformSpace", NULL, NULL);
#endif

	PyObject* new_dict_EARJointTransformSpace = PyModule_GetDict(new_module_EARJointTransformSpace);
	PyDict_SetItemString(new_dict_EARJointTransformSpace, "Model", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARJointTransformSpace, "ParentJoint", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARJointTransformSpace, "EARJointTransformSpace_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EARObjectClassification()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARObjectClassification = PyImport_AddModule("EARObjectClassification");
#else                                                                                     
	PyObject* new__module_EARObjectClassification = Py_InitModule3("EARObjectClassification", NULL, NULL);
#endif

	PyObject* new_dict_EARObjectClassification = PyModule_GetDict(new_module_EARObjectClassification);
	PyDict_SetItemString(new_dict_EARObjectClassification, "NotApplicable", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARObjectClassification, "Unknown", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARObjectClassification, "Wall", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARObjectClassification, "Ceiling", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EARObjectClassification, "Floor", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EARObjectClassification, "Table", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EARObjectClassification, "Seat", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EARObjectClassification, "Face", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EARObjectClassification, "Image", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EARObjectClassification, "World", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EARObjectClassification, "SceneObject", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EARObjectClassification, "EARObjectClassification_MAX", Py_BuildValue("i", 11));

}
void unreal_export_uenum_EARPlaneOrientation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARPlaneOrientation = PyImport_AddModule("EARPlaneOrientation");
#else                                                                                     
	PyObject* new__module_EARPlaneOrientation = Py_InitModule3("EARPlaneOrientation", NULL, NULL);
#endif

	PyObject* new_dict_EARPlaneOrientation = PyModule_GetDict(new_module_EARPlaneOrientation);
	PyDict_SetItemString(new_dict_EARPlaneOrientation, "Horizontal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARPlaneOrientation, "Vertical", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARPlaneOrientation, "Diagonal", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARPlaneOrientation, "EARPlaneOrientation_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EARWorldMappingState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARWorldMappingState = PyImport_AddModule("EARWorldMappingState");
#else                                                                                     
	PyObject* new__module_EARWorldMappingState = Py_InitModule3("EARWorldMappingState", NULL, NULL);
#endif

	PyObject* new_dict_EARWorldMappingState = PyModule_GetDict(new_module_EARWorldMappingState);
	PyDict_SetItemString(new_dict_EARWorldMappingState, "NotAvailable", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARWorldMappingState, "StillMappingNotRelocalizable", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARWorldMappingState, "StillMappingRelocalizable", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARWorldMappingState, "Mapped", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EARWorldMappingState, "EARWorldMappingState_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EARSessionStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARSessionStatus = PyImport_AddModule("EARSessionStatus");
#else                                                                                     
	PyObject* new__module_EARSessionStatus = Py_InitModule3("EARSessionStatus", NULL, NULL);
#endif

	PyObject* new_dict_EARSessionStatus = PyModule_GetDict(new_module_EARSessionStatus);
	PyDict_SetItemString(new_dict_EARSessionStatus, "NotStarted", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARSessionStatus, "Running", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARSessionStatus, "NotSupported", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARSessionStatus, "FatalError", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EARSessionStatus, "PermissionNotGranted", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EARSessionStatus, "UnsupportedConfiguration", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EARSessionStatus, "Other", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EARSessionStatus, "EARSessionStatus_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EARTrackingQualityReason()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARTrackingQualityReason = PyImport_AddModule("EARTrackingQualityReason");
#else                                                                                     
	PyObject* new__module_EARTrackingQualityReason = Py_InitModule3("EARTrackingQualityReason", NULL, NULL);
#endif

	PyObject* new_dict_EARTrackingQualityReason = PyModule_GetDict(new_module_EARTrackingQualityReason);
	PyDict_SetItemString(new_dict_EARTrackingQualityReason, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARTrackingQualityReason, "Initializing", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARTrackingQualityReason, "Relocalizing", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARTrackingQualityReason, "ExcessiveMotion", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EARTrackingQualityReason, "InsufficientFeatures", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EARTrackingQualityReason, "EARTrackingQualityReason_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EARTrackingQuality()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARTrackingQuality = PyImport_AddModule("EARTrackingQuality");
#else                                                                                     
	PyObject* new__module_EARTrackingQuality = Py_InitModule3("EARTrackingQuality", NULL, NULL);
#endif

	PyObject* new_dict_EARTrackingQuality = PyModule_GetDict(new_module_EARTrackingQuality);
	PyDict_SetItemString(new_dict_EARTrackingQuality, "NotTracking", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARTrackingQuality, "OrientationOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARTrackingQuality, "OrientationAndPosition", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARTrackingQuality, "EARTrackingQuality_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EARLineTraceChannels()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EARLineTraceChannels = PyImport_AddModule("EARLineTraceChannels");
#else                                                                                     
	PyObject* new__module_EARLineTraceChannels = Py_InitModule3("EARLineTraceChannels", NULL, NULL);
#endif

	PyObject* new_dict_EARLineTraceChannels = PyModule_GetDict(new_module_EARLineTraceChannels);
	PyDict_SetItemString(new_dict_EARLineTraceChannels, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EARLineTraceChannels, "FeaturePoint", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EARLineTraceChannels, "GroundPlane", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EARLineTraceChannels, "PlaneUsingExtent", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EARLineTraceChannels, "PlaneUsingBoundaryPolygon", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EARLineTraceChannels, "EARLineTraceChannels_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_EXRTrackedDeviceType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EXRTrackedDeviceType = PyImport_AddModule("EXRTrackedDeviceType");
#else                                                                                     
	PyObject* new__module_EXRTrackedDeviceType = Py_InitModule3("EXRTrackedDeviceType", NULL, NULL);
#endif

	PyObject* new_dict_EXRTrackedDeviceType = PyModule_GetDict(new_module_EXRTrackedDeviceType);
	PyDict_SetItemString(new_dict_EXRTrackedDeviceType, "HeadMountedDisplay", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EXRTrackedDeviceType, "Controller", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EXRTrackedDeviceType, "TrackingReference", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EXRTrackedDeviceType, "Other", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EXRTrackedDeviceType, "Invalid", Py_BuildValue("i", 254));
	PyDict_SetItemString(new_dict_EXRTrackedDeviceType, "Any", Py_BuildValue("i", 255));
	PyDict_SetItemString(new_dict_EXRTrackedDeviceType, "EXRTrackedDeviceType_MAX", Py_BuildValue("i", 256));

}
void unreal_export_uenum_ESpectatorScreenMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESpectatorScreenMode = PyImport_AddModule("ESpectatorScreenMode");
#else                                                                                     
	PyObject* new__module_ESpectatorScreenMode = Py_InitModule3("ESpectatorScreenMode", NULL, NULL);
#endif

	PyObject* new_dict_ESpectatorScreenMode = PyModule_GetDict(new_module_ESpectatorScreenMode);
	PyDict_SetItemString(new_dict_ESpectatorScreenMode, "Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESpectatorScreenMode, "SingleEyeLetterboxed", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESpectatorScreenMode, "Undistorted", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESpectatorScreenMode, "Distorted", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESpectatorScreenMode, "SingleEye", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESpectatorScreenMode, "SingleEyeCroppedToFill", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ESpectatorScreenMode, "Texture", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ESpectatorScreenMode, "TexturePlusEye", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ESpectatorScreenMode, "ESpectatorScreenMode_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_EHMDWornState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHMDWornState = PyImport_AddModule("EHMDWornState");
#else                                                                                     
	PyObject* new__module_EHMDWornState = Py_InitModule3("EHMDWornState", NULL, NULL);
#endif

	PyObject* new_dict_EHMDWornState = PyModule_GetDict(new_module_EHMDWornState);
	PyDict_SetItemString(new_dict_EHMDWornState, "Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHMDWornState, "Worn", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHMDWornState, "NotWorn", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHMDWornState, "EHMDWornState_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EHMDTrackingOrigin()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHMDTrackingOrigin = PyImport_AddModule("EHMDTrackingOrigin");
#else                                                                                     
	PyObject* new__module_EHMDTrackingOrigin = Py_InitModule3("EHMDTrackingOrigin", NULL, NULL);
#endif

	PyObject* new_dict_EHMDTrackingOrigin = PyModule_GetDict(new_module_EHMDTrackingOrigin);
	PyDict_SetItemString(new_dict_EHMDTrackingOrigin, "Floor", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHMDTrackingOrigin, "Eye", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHMDTrackingOrigin, "Stage", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHMDTrackingOrigin, "EHMDTrackingOrigin_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EOrientPositionSelector()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOrientPositionSelector = PyImport_AddModule("EOrientPositionSelector");
#else                                                                                     
	PyObject* new__module_EOrientPositionSelector = Py_InitModule3("EOrientPositionSelector", NULL, NULL);
#endif

	PyObject* new_dict_EOrientPositionSelector = PyModule_GetDict(new_module_EOrientPositionSelector);
	PyDict_SetItemString(new_dict_EOrientPositionSelector, "Orientation", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOrientPositionSelector, "Position", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOrientPositionSelector, "OrientationAndPosition", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EOrientPositionSelector, "EOrientPositionSelector_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETrackingStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETrackingStatus = PyImport_AddModule("ETrackingStatus");
#else                                                                                     
	PyObject* new__module_ETrackingStatus = Py_InitModule3("ETrackingStatus", NULL, NULL);
#endif

	PyObject* new_dict_ETrackingStatus = PyModule_GetDict(new_module_ETrackingStatus);
	PyDict_SetItemString(new_dict_ETrackingStatus, "NotTracked", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETrackingStatus, "InertialOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETrackingStatus, "Tracked", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETrackingStatus, "ETrackingStatus_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ECookerStatsObjectSets()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECookerStatsObjectSets = PyImport_AddModule("ECookerStatsObjectSets");
#else                                                                                     
	PyObject* new__module_ECookerStatsObjectSets = Py_InitModule3("ECookerStatsObjectSets", NULL, NULL);
#endif

	PyObject* new_dict_ECookerStatsObjectSets = PyModule_GetDict(new_module_ECookerStatsObjectSets);
	PyDict_SetItemString(new_dict_ECookerStatsObjectSets, "CookerStatsObjectSets_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECookerStatsObjectSets, "CookerStatsObjectSets_MAX", Py_BuildValue("i", 1));

}
void unreal_export_uenum_ELightingBuildInfoObjectSets()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELightingBuildInfoObjectSets = PyImport_AddModule("ELightingBuildInfoObjectSets");
#else                                                                                     
	PyObject* new__module_ELightingBuildInfoObjectSets = Py_InitModule3("ELightingBuildInfoObjectSets", NULL, NULL);
#endif

	PyObject* new_dict_ELightingBuildInfoObjectSets = PyModule_GetDict(new_module_ELightingBuildInfoObjectSets);
	PyDict_SetItemString(new_dict_ELightingBuildInfoObjectSets, "LightingBuildInfoObjectSets_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELightingBuildInfoObjectSets, "LightingBuildInfoObjectSets_MAX", Py_BuildValue("i", 1));

}
void unreal_export_uenum_EPrimitiveObjectSets()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPrimitiveObjectSets = PyImport_AddModule("EPrimitiveObjectSets");
#else                                                                                     
	PyObject* new__module_EPrimitiveObjectSets = Py_InitModule3("EPrimitiveObjectSets", NULL, NULL);
#endif

	PyObject* new_dict_EPrimitiveObjectSets = PyModule_GetDict(new_module_EPrimitiveObjectSets);
	PyDict_SetItemString(new_dict_EPrimitiveObjectSets, "PrimitiveObjectSets_AllObjects", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPrimitiveObjectSets, "PrimitiveObjectSets_CurrentLevel", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPrimitiveObjectSets, "PrimitiveObjectSets_SelectedObjects", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPrimitiveObjectSets, "PrimitiveObjectSets_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EStaticMeshLightingInfoObjectSets()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EStaticMeshLightingInfoObjectSets = PyImport_AddModule("EStaticMeshLightingInfoObjectSets");
#else                                                                                     
	PyObject* new__module_EStaticMeshLightingInfoObjectSets = Py_InitModule3("EStaticMeshLightingInfoObjectSets", NULL, NULL);
#endif

	PyObject* new_dict_EStaticMeshLightingInfoObjectSets = PyModule_GetDict(new_module_EStaticMeshLightingInfoObjectSets);
	PyDict_SetItemString(new_dict_EStaticMeshLightingInfoObjectSets, "StaticMeshLightingInfoObjectSets_CurrentLevel", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EStaticMeshLightingInfoObjectSets, "StaticMeshLightingInfoObjectSets_SelectedLevels", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EStaticMeshLightingInfoObjectSets, "StaticMeshLightingInfoObjectSets_AllLevels", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EStaticMeshLightingInfoObjectSets, "StaticMeshLightingInfoObjectSets_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETextureObjectSets()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureObjectSets = PyImport_AddModule("ETextureObjectSets");
#else                                                                                     
	PyObject* new__module_ETextureObjectSets = Py_InitModule3("ETextureObjectSets", NULL, NULL);
#endif

	PyObject* new_dict_ETextureObjectSets = PyModule_GetDict(new_module_ETextureObjectSets);
	PyDict_SetItemString(new_dict_ETextureObjectSets, "TextureObjectSet_CurrentStreamingLevel", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextureObjectSets, "TextureObjectSet_AllStreamingLevels", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextureObjectSets, "TextureObjectSet_SelectedActors", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureObjectSets, "TextureObjectSet_SelectedMaterials", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETextureObjectSets, "TextureObjectSet_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMaterialBakeMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialBakeMethod = PyImport_AddModule("EMaterialBakeMethod");
#else                                                                                     
	PyObject* new__module_EMaterialBakeMethod = Py_InitModule3("EMaterialBakeMethod", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialBakeMethod = PyModule_GetDict(new_module_EMaterialBakeMethod);
	PyDict_SetItemString(new_dict_EMaterialBakeMethod, "IndividualMaterial", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialBakeMethod, "AtlasMaterial", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialBakeMethod, "BinnedMaterial", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialBakeMethod, "EMaterialBakeMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFlattenMaterialProperties()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFlattenMaterialProperties = PyImport_AddModule("EFlattenMaterialProperties");
#else                                                                                     
	PyObject* new__module_EFlattenMaterialProperties = Py_InitModule3("EFlattenMaterialProperties", NULL, NULL);
#endif

	PyObject* new_dict_EFlattenMaterialProperties = PyModule_GetDict(new_module_EFlattenMaterialProperties);
	PyDict_SetItemString(new_dict_EFlattenMaterialProperties, "Diffuse", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFlattenMaterialProperties, "Metallic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFlattenMaterialProperties, "Specular", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFlattenMaterialProperties, "Roughness", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFlattenMaterialProperties, "Normal", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFlattenMaterialProperties, "Opacity", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EFlattenMaterialProperties, "Emissive", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EFlattenMaterialProperties, "SubSurface", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EFlattenMaterialProperties, "OpacityMask", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EFlattenMaterialProperties, "AmbientOcclusion", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EFlattenMaterialProperties, "NumFlattenMaterialProperties", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EFlattenMaterialProperties, "EFlattenMaterialProperties_MAX", Py_BuildValue("i", 18));

}
void unreal_export_uenum_ECurveEditorZoomPosition()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECurveEditorZoomPosition = PyImport_AddModule("ECurveEditorZoomPosition");
#else                                                                                     
	PyObject* new__module_ECurveEditorZoomPosition = Py_InitModule3("ECurveEditorZoomPosition", NULL, NULL);
#endif

	PyObject* new_dict_ECurveEditorZoomPosition = PyModule_GetDict(new_module_ECurveEditorZoomPosition);
	PyDict_SetItemString(new_dict_ECurveEditorZoomPosition, "CurrentTime", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECurveEditorZoomPosition, "MousePosition", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECurveEditorZoomPosition, "ECurveEditorZoomPosition_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ECurveEditorTangentVisibility()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECurveEditorTangentVisibility = PyImport_AddModule("ECurveEditorTangentVisibility");
#else                                                                                     
	PyObject* new__module_ECurveEditorTangentVisibility = Py_InitModule3("ECurveEditorTangentVisibility", NULL, NULL);
#endif

	PyObject* new_dict_ECurveEditorTangentVisibility = PyModule_GetDict(new_module_ECurveEditorTangentVisibility);
	PyDict_SetItemString(new_dict_ECurveEditorTangentVisibility, "AllTangents", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECurveEditorTangentVisibility, "SelectedKeys", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECurveEditorTangentVisibility, "NoTangents", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECurveEditorTangentVisibility, "ECurveEditorTangentVisibility_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ECameraFocusMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECameraFocusMethod = PyImport_AddModule("ECameraFocusMethod");
#else                                                                                     
	PyObject* new__module_ECameraFocusMethod = Py_InitModule3("ECameraFocusMethod", NULL, NULL);
#endif

	PyObject* new_dict_ECameraFocusMethod = PyModule_GetDict(new_module_ECameraFocusMethod);
	PyDict_SetItemString(new_dict_ECameraFocusMethod, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECameraFocusMethod, "Manual", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECameraFocusMethod, "Tracking", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECameraFocusMethod, "ECameraFocusMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFFTWindowType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFFTWindowType = PyImport_AddModule("EFFTWindowType");
#else                                                                                     
	PyObject* new__module_EFFTWindowType = Py_InitModule3("EFFTWindowType", NULL, NULL);
#endif

	PyObject* new_dict_EFFTWindowType = PyModule_GetDict(new_module_EFFTWindowType);
	PyDict_SetItemString(new_dict_EFFTWindowType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFFTWindowType, "Hamming", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFFTWindowType, "Hann", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFFTWindowType, "Blackman", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFFTWindowType, "EFFTWindowType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EFFTPeakInterpolationMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFFTPeakInterpolationMethod = PyImport_AddModule("EFFTPeakInterpolationMethod");
#else                                                                                     
	PyObject* new__module_EFFTPeakInterpolationMethod = Py_InitModule3("EFFTPeakInterpolationMethod", NULL, NULL);
#endif

	PyObject* new_dict_EFFTPeakInterpolationMethod = PyModule_GetDict(new_module_EFFTPeakInterpolationMethod);
	PyDict_SetItemString(new_dict_EFFTPeakInterpolationMethod, "NearestNeighbor", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFFTPeakInterpolationMethod, "Linear", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFFTPeakInterpolationMethod, "Quadratic", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFFTPeakInterpolationMethod, "EFFTPeakInterpolationMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFFTSize()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFFTSize = PyImport_AddModule("EFFTSize");
#else                                                                                     
	PyObject* new__module_EFFTSize = Py_InitModule3("EFFTSize", NULL, NULL);
#endif

	PyObject* new_dict_EFFTSize = PyModule_GetDict(new_module_EFFTSize);
	PyDict_SetItemString(new_dict_EFFTSize, "DefaultSize", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFFTSize, "Min", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFFTSize, "Small", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFFTSize, "Medium", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFFTSize, "Large", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFFTSize, "Max", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EFFTSize, "EFFTSize_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ESubmixEffectDynamicsPeakMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESubmixEffectDynamicsPeakMode = PyImport_AddModule("ESubmixEffectDynamicsPeakMode");
#else                                                                                     
	PyObject* new__module_ESubmixEffectDynamicsPeakMode = Py_InitModule3("ESubmixEffectDynamicsPeakMode", NULL, NULL);
#endif

	PyObject* new_dict_ESubmixEffectDynamicsPeakMode = PyModule_GetDict(new_module_ESubmixEffectDynamicsPeakMode);
	PyDict_SetItemString(new_dict_ESubmixEffectDynamicsPeakMode, "MeanSquared", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESubmixEffectDynamicsPeakMode, "RootMeanSquared", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESubmixEffectDynamicsPeakMode, "Peak", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESubmixEffectDynamicsPeakMode, "Count", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESubmixEffectDynamicsPeakMode, "ESubmixEffectDynamicsPeakMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESubmixEffectDynamicsProcessorType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESubmixEffectDynamicsProcessorType = PyImport_AddModule("ESubmixEffectDynamicsProcessorType");
#else                                                                                     
	PyObject* new__module_ESubmixEffectDynamicsProcessorType = Py_InitModule3("ESubmixEffectDynamicsProcessorType", NULL, NULL);
#endif

	PyObject* new_dict_ESubmixEffectDynamicsProcessorType = PyModule_GetDict(new_module_ESubmixEffectDynamicsProcessorType);
	PyDict_SetItemString(new_dict_ESubmixEffectDynamicsProcessorType, "Compressor", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESubmixEffectDynamicsProcessorType, "Limiter", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESubmixEffectDynamicsProcessorType, "Expander", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESubmixEffectDynamicsProcessorType, "Gate", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESubmixEffectDynamicsProcessorType, "Count", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESubmixEffectDynamicsProcessorType, "ESubmixEffectDynamicsProcessorType_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EFeaturePackDetailLevel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFeaturePackDetailLevel = PyImport_AddModule("EFeaturePackDetailLevel");
#else                                                                                     
	PyObject* new__module_EFeaturePackDetailLevel = Py_InitModule3("EFeaturePackDetailLevel", NULL, NULL);
#endif

	PyObject* new_dict_EFeaturePackDetailLevel = PyModule_GetDict(new_module_EFeaturePackDetailLevel);
	PyDict_SetItemString(new_dict_EFeaturePackDetailLevel, "Standard", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFeaturePackDetailLevel, "High", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFeaturePackDetailLevel, "EFeaturePackDetailLevel_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EContentSourceCategory()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EContentSourceCategory = PyImport_AddModule("EContentSourceCategory");
#else                                                                                     
	PyObject* new__module_EContentSourceCategory = Py_InitModule3("EContentSourceCategory", NULL, NULL);
#endif

	PyObject* new_dict_EContentSourceCategory = PyModule_GetDict(new_module_EContentSourceCategory);
	PyDict_SetItemString(new_dict_EContentSourceCategory, "BlueprintFeature", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EContentSourceCategory, "CodeFeature", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EContentSourceCategory, "EnterpriseFeature", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EContentSourceCategory, "Content", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EContentSourceCategory, "EnterpriseContent", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EContentSourceCategory, "SharedPack", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EContentSourceCategory, "Unknown", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EContentSourceCategory, "EContentSourceCategory_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EGraphicsPreset()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGraphicsPreset = PyImport_AddModule("EGraphicsPreset");
#else                                                                                     
	PyObject* new__module_EGraphicsPreset = Py_InitModule3("EGraphicsPreset", NULL, NULL);
#endif

	PyObject* new_dict_EGraphicsPreset = PyModule_GetDict(new_module_EGraphicsPreset);
	PyDict_SetItemString(new_dict_EGraphicsPreset, "Unspecified", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGraphicsPreset, "Maximum", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGraphicsPreset, "Scalable", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGraphicsPreset, "EGraphicsPreset_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EHardwareClass()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHardwareClass = PyImport_AddModule("EHardwareClass");
#else                                                                                     
	PyObject* new__module_EHardwareClass = Py_InitModule3("EHardwareClass", NULL, NULL);
#endif

	PyObject* new_dict_EHardwareClass = PyModule_GetDict(new_module_EHardwareClass);
	PyDict_SetItemString(new_dict_EHardwareClass, "Unspecified", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHardwareClass, "Desktop", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHardwareClass, "Mobile", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHardwareClass, "EHardwareClass_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESlateAccessibleBehavior()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateAccessibleBehavior = PyImport_AddModule("ESlateAccessibleBehavior");
#else                                                                                     
	PyObject* new__module_ESlateAccessibleBehavior = Py_InitModule3("ESlateAccessibleBehavior", NULL, NULL);
#endif

	PyObject* new_dict_ESlateAccessibleBehavior = PyModule_GetDict(new_module_ESlateAccessibleBehavior);
	PyDict_SetItemString(new_dict_ESlateAccessibleBehavior, "NotAccessible", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateAccessibleBehavior, "Auto", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateAccessibleBehavior, "Summary", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESlateAccessibleBehavior, "Custom", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESlateAccessibleBehavior, "ToolTip", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESlateAccessibleBehavior, "ESlateAccessibleBehavior_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ESlateVisibility()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateVisibility = PyImport_AddModule("ESlateVisibility");
#else                                                                                     
	PyObject* new__module_ESlateVisibility = Py_InitModule3("ESlateVisibility", NULL, NULL);
#endif

	PyObject* new_dict_ESlateVisibility = PyModule_GetDict(new_module_ESlateVisibility);
	PyDict_SetItemString(new_dict_ESlateVisibility, "Visible", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateVisibility, "Collapsed", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateVisibility, "Hidden", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESlateVisibility, "HitTestInvisible", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESlateVisibility, "SelfHitTestInvisible", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESlateVisibility, "ESlateVisibility_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EWidgetDesignFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWidgetDesignFlags = PyImport_AddModule("EWidgetDesignFlags");
#else                                                                                     
	PyObject* new__module_EWidgetDesignFlags = Py_InitModule3("EWidgetDesignFlags", NULL, NULL);
#endif

	PyObject* new_dict_EWidgetDesignFlags = PyModule_GetDict(new_module_EWidgetDesignFlags);
	PyDict_SetItemString(new_dict_EWidgetDesignFlags, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWidgetDesignFlags, "Designing", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWidgetDesignFlags, "ShowOutline", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EWidgetDesignFlags, "ExecutePreConstruct", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EWidgetDesignFlags, "EWidgetDesignFlags_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EMouseLockMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMouseLockMode = PyImport_AddModule("EMouseLockMode");
#else                                                                                     
	PyObject* new__module_EMouseLockMode = Py_InitModule3("EMouseLockMode", NULL, NULL);
#endif

	PyObject* new_dict_EMouseLockMode = PyModule_GetDict(new_module_EMouseLockMode);
	PyDict_SetItemString(new_dict_EMouseLockMode, "DoNotLock", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMouseLockMode, "LockOnCapture", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMouseLockMode, "LockAlways", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMouseLockMode, "LockInFullscreen", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMouseLockMode, "EMouseLockMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EWindowTitleBarMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWindowTitleBarMode = PyImport_AddModule("EWindowTitleBarMode");
#else                                                                                     
	PyObject* new__module_EWindowTitleBarMode = Py_InitModule3("EWindowTitleBarMode", NULL, NULL);
#endif

	PyObject* new_dict_EWindowTitleBarMode = PyModule_GetDict(new_module_EWindowTitleBarMode);
	PyDict_SetItemString(new_dict_EWindowTitleBarMode, "Overlay", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWindowTitleBarMode, "VerticalBox", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWindowTitleBarMode, "EWindowTitleBarMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EVirtualKeyboardType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVirtualKeyboardType = PyImport_AddModule("EVirtualKeyboardType");
#else                                                                                     
	PyObject* new__module_EVirtualKeyboardType = Py_InitModule3("EVirtualKeyboardType", NULL, NULL);
#endif

	PyObject* new_dict_EVirtualKeyboardType = PyModule_GetDict(new_module_EVirtualKeyboardType);
	PyDict_SetItemString(new_dict_EVirtualKeyboardType, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVirtualKeyboardType, "Number", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVirtualKeyboardType, "Web", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVirtualKeyboardType, "Email", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EVirtualKeyboardType, "Password", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EVirtualKeyboardType, "AlphaNumeric", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EVirtualKeyboardType, "EVirtualKeyboardType_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EDragPivot()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDragPivot = PyImport_AddModule("EDragPivot");
#else                                                                                     
	PyObject* new__module_EDragPivot = Py_InitModule3("EDragPivot", NULL, NULL);
#endif

	PyObject* new_dict_EDragPivot = PyModule_GetDict(new_module_EDragPivot);
	PyDict_SetItemString(new_dict_EDragPivot, "MouseDown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDragPivot, "TopLeft", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDragPivot, "TopCenter", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDragPivot, "TopRight", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDragPivot, "CenterLeft", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EDragPivot, "CenterCenter", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EDragPivot, "CenterRight", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EDragPivot, "BottomLeft", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EDragPivot, "BottomCenter", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EDragPivot, "BottomRight", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EDragPivot, "EDragPivot_MAX", Py_BuildValue("i", 10));

}
void unreal_export_uenum_EDynamicBoxType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDynamicBoxType = PyImport_AddModule("EDynamicBoxType");
#else                                                                                     
	PyObject* new__module_EDynamicBoxType = Py_InitModule3("EDynamicBoxType", NULL, NULL);
#endif

	PyObject* new_dict_EDynamicBoxType = PyModule_GetDict(new_module_EDynamicBoxType);
	PyDict_SetItemString(new_dict_EDynamicBoxType, "Horizontal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDynamicBoxType, "Vertical", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDynamicBoxType, "Wrap", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDynamicBoxType, "Overlay", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDynamicBoxType, "EDynamicBoxType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESlateSizeRule()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateSizeRule = PyImport_AddModule("ESlateSizeRule");
#else                                                                                     
	PyObject* new__module_ESlateSizeRule = Py_InitModule3("ESlateSizeRule", NULL, NULL);
#endif

	PyObject* new_dict_ESlateSizeRule = PyModule_GetDict(new_module_ESlateSizeRule);
	PyDict_SetItemString(new_dict_ESlateSizeRule, "Automatic", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateSizeRule, "Fill", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateSizeRule, "ESlateSizeRule_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EDesignPreviewSizeMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDesignPreviewSizeMode = PyImport_AddModule("EDesignPreviewSizeMode");
#else                                                                                     
	PyObject* new__module_EDesignPreviewSizeMode = Py_InitModule3("EDesignPreviewSizeMode", NULL, NULL);
#endif

	PyObject* new_dict_EDesignPreviewSizeMode = PyModule_GetDict(new_module_EDesignPreviewSizeMode);
	PyDict_SetItemString(new_dict_EDesignPreviewSizeMode, "FillScreen", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDesignPreviewSizeMode, "Custom", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDesignPreviewSizeMode, "CustomOnScreen", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDesignPreviewSizeMode, "Desired", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDesignPreviewSizeMode, "DesiredOnScreen", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EDesignPreviewSizeMode, "EDesignPreviewSizeMode_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EUMGSequencePlayMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUMGSequencePlayMode = PyImport_AddModule("EUMGSequencePlayMode");
#else                                                                                     
	PyObject* new__module_EUMGSequencePlayMode = Py_InitModule3("EUMGSequencePlayMode", NULL, NULL);
#endif

	PyObject* new_dict_EUMGSequencePlayMode = PyModule_GetDict(new_module_EUMGSequencePlayMode);
	PyDict_SetItemString(new_dict_EUMGSequencePlayMode, "Forward", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUMGSequencePlayMode, "Reverse", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUMGSequencePlayMode, "PingPong", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUMGSequencePlayMode, "EUMGSequencePlayMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EWidgetAnimationEvent()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWidgetAnimationEvent = PyImport_AddModule("EWidgetAnimationEvent");
#else                                                                                     
	PyObject* new__module_EWidgetAnimationEvent = Py_InitModule3("EWidgetAnimationEvent", NULL, NULL);
#endif

	PyObject* new_dict_EWidgetAnimationEvent = PyModule_GetDict(new_module_EWidgetAnimationEvent);
	PyDict_SetItemString(new_dict_EWidgetAnimationEvent, "Started", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWidgetAnimationEvent, "Finished", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWidgetAnimationEvent, "EWidgetAnimationEvent_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EWidgetTickFrequency()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWidgetTickFrequency = PyImport_AddModule("EWidgetTickFrequency");
#else                                                                                     
	PyObject* new__module_EWidgetTickFrequency = Py_InitModule3("EWidgetTickFrequency", NULL, NULL);
#endif

	PyObject* new_dict_EWidgetTickFrequency = PyModule_GetDict(new_module_EWidgetTickFrequency);
	PyDict_SetItemString(new_dict_EWidgetTickFrequency, "Never", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWidgetTickFrequency, "Auto", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWidgetTickFrequency, "EWidgetTickFrequency_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EBindingKind()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBindingKind = PyImport_AddModule("EBindingKind");
#else                                                                                     
	PyObject* new__module_EBindingKind = Py_InitModule3("EBindingKind", NULL, NULL);
#endif

	PyObject* new_dict_EBindingKind = PyModule_GetDict(new_module_EBindingKind);
	PyDict_SetItemString(new_dict_EBindingKind, "Function", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBindingKind, "Property", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBindingKind, "EBindingKind_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EWindowVisibility()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWindowVisibility = PyImport_AddModule("EWindowVisibility");
#else                                                                                     
	PyObject* new__module_EWindowVisibility = Py_InitModule3("EWindowVisibility", NULL, NULL);
#endif

	PyObject* new_dict_EWindowVisibility = PyModule_GetDict(new_module_EWindowVisibility);
	PyDict_SetItemString(new_dict_EWindowVisibility, "Visible", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWindowVisibility, "SelfHitTestInvisible", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWindowVisibility, "EWindowVisibility_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EWidgetGeometryMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWidgetGeometryMode = PyImport_AddModule("EWidgetGeometryMode");
#else                                                                                     
	PyObject* new__module_EWidgetGeometryMode = Py_InitModule3("EWidgetGeometryMode", NULL, NULL);
#endif

	PyObject* new_dict_EWidgetGeometryMode = PyModule_GetDict(new_module_EWidgetGeometryMode);
	PyDict_SetItemString(new_dict_EWidgetGeometryMode, "Plane", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWidgetGeometryMode, "Cylinder", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWidgetGeometryMode, "EWidgetGeometryMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EWidgetBlendMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWidgetBlendMode = PyImport_AddModule("EWidgetBlendMode");
#else                                                                                     
	PyObject* new__module_EWidgetBlendMode = Py_InitModule3("EWidgetBlendMode", NULL, NULL);
#endif

	PyObject* new_dict_EWidgetBlendMode = PyModule_GetDict(new_module_EWidgetBlendMode);
	PyDict_SetItemString(new_dict_EWidgetBlendMode, "Opaque", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWidgetBlendMode, "Masked", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWidgetBlendMode, "Transparent", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EWidgetBlendMode, "EWidgetBlendMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EWidgetTimingPolicy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWidgetTimingPolicy = PyImport_AddModule("EWidgetTimingPolicy");
#else                                                                                     
	PyObject* new__module_EWidgetTimingPolicy = Py_InitModule3("EWidgetTimingPolicy", NULL, NULL);
#endif

	PyObject* new_dict_EWidgetTimingPolicy = PyModule_GetDict(new_module_EWidgetTimingPolicy);
	PyDict_SetItemString(new_dict_EWidgetTimingPolicy, "RealTime", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWidgetTimingPolicy, "GameTime", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWidgetTimingPolicy, "EWidgetTimingPolicy_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EWidgetSpace()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWidgetSpace = PyImport_AddModule("EWidgetSpace");
#else                                                                                     
	PyObject* new__module_EWidgetSpace = Py_InitModule3("EWidgetSpace", NULL, NULL);
#endif

	PyObject* new_dict_EWidgetSpace = PyModule_GetDict(new_module_EWidgetSpace);
	PyDict_SetItemString(new_dict_EWidgetSpace, "World", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWidgetSpace, "Screen", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWidgetSpace, "EWidgetSpace_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EWidgetInteractionSource()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWidgetInteractionSource = PyImport_AddModule("EWidgetInteractionSource");
#else                                                                                     
	PyObject* new__module_EWidgetInteractionSource = Py_InitModule3("EWidgetInteractionSource", NULL, NULL);
#endif

	PyObject* new_dict_EWidgetInteractionSource = PyModule_GetDict(new_module_EWidgetInteractionSource);
	PyDict_SetItemString(new_dict_EWidgetInteractionSource, "World", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWidgetInteractionSource, "Mouse", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWidgetInteractionSource, "CenterScreen", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EWidgetInteractionSource, "Custom", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EWidgetInteractionSource, "EWidgetInteractionSource_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EContextTargetFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EContextTargetFlags = PyImport_AddModule("EContextTargetFlags");
#else                                                                                     
	PyObject* new__module_EContextTargetFlags = Py_InitModule3("EContextTargetFlags", NULL, NULL);
#endif

	PyObject* new_dict_EContextTargetFlags = PyModule_GetDict(new_module_EContextTargetFlags);
	PyDict_SetItemString(new_dict_EContextTargetFlags, "TARGET_Blueprint", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EContextTargetFlags, "TARGET_SubComponents", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EContextTargetFlags, "TARGET_NodeTarget", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EContextTargetFlags, "TARGET_PinObject", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EContextTargetFlags, "TARGET_SiblingPinObjects", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EContextTargetFlags, "TARGET_BlueprintLibraries", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_EContextTargetFlags, "ContextTargetFlagsEnd", Py_BuildValue("i", 33));
	PyDict_SetItemString(new_dict_EContextTargetFlags, "EContextTargetFlags_MAX", Py_BuildValue("i", 34));

}
void unreal_export_uenum_EditConditionByteEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EditConditionByteEnum = PyImport_AddModule("EditConditionByteEnum");
#else                                                                                     
	PyObject* new__module_EditConditionByteEnum = Py_InitModule3("EditConditionByteEnum", NULL, NULL);
#endif

	PyObject* new_dict_EditConditionByteEnum = PyModule_GetDict(new_module_EditConditionByteEnum);
	PyDict_SetItemString(new_dict_EditConditionByteEnum, "First", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EditConditionByteEnum, "Second", Py_BuildValue("i", 31));
	PyDict_SetItemString(new_dict_EditConditionByteEnum, "EditConditionByteEnum_MAX", Py_BuildValue("i", 32));

}
void unreal_export_uenum_EditConditionTestEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EditConditionTestEnum = PyImport_AddModule("EditConditionTestEnum");
#else                                                                                     
	PyObject* new__module_EditConditionTestEnum = Py_InitModule3("EditConditionTestEnum", NULL, NULL);
#endif

	PyObject* new_dict_EditConditionTestEnum = PyModule_GetDict(new_module_EditConditionTestEnum);
	PyDict_SetItemString(new_dict_EditConditionTestEnum, "First", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EditConditionTestEnum, "Second", Py_BuildValue("i", 31));
	PyDict_SetItemString(new_dict_EditConditionTestEnum, "EditConditionTestEnum_MAX", Py_BuildValue("i", 32));

}
void unreal_export_uenum_EGraphPanningMouseButton()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGraphPanningMouseButton = PyImport_AddModule("EGraphPanningMouseButton");
#else                                                                                     
	PyObject* new__module_EGraphPanningMouseButton = Py_InitModule3("EGraphPanningMouseButton", NULL, NULL);
#endif

	PyObject* new_dict_EGraphPanningMouseButton = PyModule_GetDict(new_module_EGraphPanningMouseButton);
	PyDict_SetItemString(new_dict_EGraphPanningMouseButton, "Right", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGraphPanningMouseButton, "Middle", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGraphPanningMouseButton, "Both", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGraphPanningMouseButton, "EGraphPanningMouseButton_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EBlueprintUsage()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBlueprintUsage = PyImport_AddModule("EBlueprintUsage");
#else                                                                                     
	PyObject* new__module_EBlueprintUsage = Py_InitModule3("EBlueprintUsage", NULL, NULL);
#endif

	PyObject* new_dict_EBlueprintUsage = PyModule_GetDict(new_module_EBlueprintUsage);
	PyDict_SetItemString(new_dict_EBlueprintUsage, "NoProperties", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBlueprintUsage, "DoesNotUseBlueprint", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBlueprintUsage, "UsesBlueprint", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBlueprintUsage, "EBlueprintUsage_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMontagePreviewType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMontagePreviewType = PyImport_AddModule("EMontagePreviewType");
#else                                                                                     
	PyObject* new__module_EMontagePreviewType = Py_InitModule3("EMontagePreviewType", NULL, NULL);
#endif

	PyObject* new_dict_EMontagePreviewType = PyModule_GetDict(new_module_EMontagePreviewType);
	PyDict_SetItemString(new_dict_EMontagePreviewType, "EMPT_Normal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMontagePreviewType, "EMPT_AllSections", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMontagePreviewType, "EMPT_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EAnimStateType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAnimStateType = PyImport_AddModule("EAnimStateType");
#else                                                                                     
	PyObject* new__module_EAnimStateType = Py_InitModule3("EAnimStateType", NULL, NULL);
#endif

	PyObject* new_dict_EAnimStateType = PyModule_GetDict(new_module_EAnimStateType);
	PyDict_SetItemString(new_dict_EAnimStateType, "AST_SingleAnimation", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAnimStateType, "AST_BlendGraph", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAnimStateType, "AST_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETransitionGetter()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETransitionGetter = PyImport_AddModule("ETransitionGetter");
#else                                                                                     
	PyObject* new__module_ETransitionGetter = Py_InitModule3("ETransitionGetter", NULL, NULL);
#endif

	PyObject* new_dict_ETransitionGetter = PyModule_GetDict(new_module_ETransitionGetter);
	PyDict_SetItemString(new_dict_ETransitionGetter, "AnimationAsset_GetCurrentTime", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETransitionGetter, "AnimationAsset_GetLength", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETransitionGetter, "AnimationAsset_GetCurrentTimeFraction", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETransitionGetter, "AnimationAsset_GetTimeFromEnd", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETransitionGetter, "AnimationAsset_GetTimeFromEndFraction", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETransitionGetter, "CurrentState_ElapsedTime", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETransitionGetter, "CurrentState_GetBlendWeight", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ETransitionGetter, "CurrentTransitionDuration", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ETransitionGetter, "ArbitraryState_GetBlendWeight", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ETransitionGetter, "ETransitionGetter_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_ESaveOnCompile()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESaveOnCompile = PyImport_AddModule("ESaveOnCompile");
#else                                                                                     
	PyObject* new__module_ESaveOnCompile = Py_InitModule3("ESaveOnCompile", NULL, NULL);
#endif

	PyObject* new_dict_ESaveOnCompile = PyModule_GetDict(new_module_ESaveOnCompile);
	PyDict_SetItemString(new_dict_ESaveOnCompile, "SoC_Never", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESaveOnCompile, "SoC_SuccessOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESaveOnCompile, "SoC_Always", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESaveOnCompile, "SoC_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEdGraphSchemaAction_K2Graph()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEdGraphSchemaAction_K2Graph = PyImport_AddModule("EEdGraphSchemaAction_K2Graph");
#else                                                                                     
	PyObject* new__module_EEdGraphSchemaAction_K2Graph = Py_InitModule3("EEdGraphSchemaAction_K2Graph", NULL, NULL);
#endif

	PyObject* new_dict_EEdGraphSchemaAction_K2Graph = PyModule_GetDict(new_module_EEdGraphSchemaAction_K2Graph);
	PyDict_SetItemString(new_dict_EEdGraphSchemaAction_K2Graph, "Graph", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEdGraphSchemaAction_K2Graph, "Subgraph", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEdGraphSchemaAction_K2Graph, "Function", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEdGraphSchemaAction_K2Graph, "Interface", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEdGraphSchemaAction_K2Graph, "Macro", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EEdGraphSchemaAction_K2Graph, "MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ETunnelBoundaryType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETunnelBoundaryType = PyImport_AddModule("ETunnelBoundaryType");
#else                                                                                     
	PyObject* new__module_ETunnelBoundaryType = Py_InitModule3("ETunnelBoundaryType", NULL, NULL);
#endif

	PyObject* new_dict_ETunnelBoundaryType = PyModule_GetDict(new_module_ETunnelBoundaryType);
	PyDict_SetItemString(new_dict_ETunnelBoundaryType, "Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETunnelBoundaryType, "EntrySite", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETunnelBoundaryType, "InputSite", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETunnelBoundaryType, "OutputSite", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETunnelBoundaryType, "ETunnelBoundaryType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESelfContextInfo()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESelfContextInfo = PyImport_AddModule("ESelfContextInfo");
#else                                                                                     
	PyObject* new__module_ESelfContextInfo = Py_InitModule3("ESelfContextInfo", NULL, NULL);
#endif

	PyObject* new_dict_ESelfContextInfo = PyModule_GetDict(new_module_ESelfContextInfo);
	PyDict_SetItemString(new_dict_ESelfContextInfo, "Unspecified", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESelfContextInfo, "NotSelfContext", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESelfContextInfo, "ESelfContextInfo_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETransformConstraintType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETransformConstraintType = PyImport_AddModule("ETransformConstraintType");
#else                                                                                     
	PyObject* new__module_ETransformConstraintType = Py_InitModule3("ETransformConstraintType", NULL, NULL);
#endif

	PyObject* new_dict_ETransformConstraintType = PyModule_GetDict(new_module_ETransformConstraintType);
	PyDict_SetItemString(new_dict_ETransformConstraintType, "Translation", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETransformConstraintType, "Rotation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETransformConstraintType, "Scale", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETransformConstraintType, "Parent", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETransformConstraintType, "ETransformConstraintType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EConstraintType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EConstraintType = PyImport_AddModule("EConstraintType");
#else                                                                                     
	PyObject* new__module_EConstraintType = Py_InitModule3("EConstraintType", NULL, NULL);
#endif

	PyObject* new_dict_EConstraintType = PyModule_GetDict(new_module_EConstraintType);
	PyDict_SetItemString(new_dict_EConstraintType, "Transform", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EConstraintType, "Aim", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EConstraintType, "MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESphericalLimitType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESphericalLimitType = PyImport_AddModule("ESphericalLimitType");
#else                                                                                     
	PyObject* new__module_ESphericalLimitType = Py_InitModule3("ESphericalLimitType", NULL, NULL);
#endif

	PyObject* new_dict_ESphericalLimitType = PyModule_GetDict(new_module_ESphericalLimitType);
	PyDict_SetItemString(new_dict_ESphericalLimitType, "Inner", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESphericalLimitType, "Outer", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESphericalLimitType, "ESphericalLimitType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_AnimPhysSimSpaceType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_AnimPhysSimSpaceType = PyImport_AddModule("AnimPhysSimSpaceType");
#else                                                                                     
	PyObject* new__module_AnimPhysSimSpaceType = Py_InitModule3("AnimPhysSimSpaceType", NULL, NULL);
#endif

	PyObject* new_dict_AnimPhysSimSpaceType = PyModule_GetDict(new_module_AnimPhysSimSpaceType);
	PyDict_SetItemString(new_dict_AnimPhysSimSpaceType, "Component", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_AnimPhysSimSpaceType, "Actor", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_AnimPhysSimSpaceType, "World", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_AnimPhysSimSpaceType, "RootRelative", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_AnimPhysSimSpaceType, "BoneRelative", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_AnimPhysSimSpaceType, "AnimPhysSimSpaceType_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_AnimPhysLinearConstraintType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_AnimPhysLinearConstraintType = PyImport_AddModule("AnimPhysLinearConstraintType");
#else                                                                                     
	PyObject* new__module_AnimPhysLinearConstraintType = Py_InitModule3("AnimPhysLinearConstraintType", NULL, NULL);
#endif

	PyObject* new_dict_AnimPhysLinearConstraintType = PyModule_GetDict(new_module_AnimPhysLinearConstraintType);
	PyDict_SetItemString(new_dict_AnimPhysLinearConstraintType, "Free", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_AnimPhysLinearConstraintType, "Limited", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_AnimPhysLinearConstraintType, "AnimPhysLinearConstraintType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_AnimPhysAngularConstraintType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_AnimPhysAngularConstraintType = PyImport_AddModule("AnimPhysAngularConstraintType");
#else                                                                                     
	PyObject* new__module_AnimPhysAngularConstraintType = Py_InitModule3("AnimPhysAngularConstraintType", NULL, NULL);
#endif

	PyObject* new_dict_AnimPhysAngularConstraintType = PyModule_GetDict(new_module_AnimPhysAngularConstraintType);
	PyDict_SetItemString(new_dict_AnimPhysAngularConstraintType, "Angular", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_AnimPhysAngularConstraintType, "Cone", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_AnimPhysAngularConstraintType, "AnimPhysAngularConstraintType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EDrivenDestinationMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDrivenDestinationMode = PyImport_AddModule("EDrivenDestinationMode");
#else                                                                                     
	PyObject* new__module_EDrivenDestinationMode = Py_InitModule3("EDrivenDestinationMode", NULL, NULL);
#endif

	PyObject* new_dict_EDrivenDestinationMode = PyModule_GetDict(new_module_EDrivenDestinationMode);
	PyDict_SetItemString(new_dict_EDrivenDestinationMode, "Bone", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDrivenDestinationMode, "MorphTarget", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDrivenDestinationMode, "MaterialParameter", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDrivenDestinationMode, "EDrivenDestinationMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDrivenBoneModificationMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDrivenBoneModificationMode = PyImport_AddModule("EDrivenBoneModificationMode");
#else                                                                                     
	PyObject* new__module_EDrivenBoneModificationMode = Py_InitModule3("EDrivenBoneModificationMode", NULL, NULL);
#endif

	PyObject* new_dict_EDrivenBoneModificationMode = PyModule_GetDict(new_module_EDrivenBoneModificationMode);
	PyDict_SetItemString(new_dict_EDrivenBoneModificationMode, "AddToInput", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDrivenBoneModificationMode, "ReplaceComponent", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDrivenBoneModificationMode, "AddToRefPose", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDrivenBoneModificationMode, "EDrivenBoneModificationMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EConstraintOffsetOption()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EConstraintOffsetOption = PyImport_AddModule("EConstraintOffsetOption");
#else                                                                                     
	PyObject* new__module_EConstraintOffsetOption = Py_InitModule3("EConstraintOffsetOption", NULL, NULL);
#endif

	PyObject* new_dict_EConstraintOffsetOption = PyModule_GetDict(new_module_EConstraintOffsetOption);
	PyDict_SetItemString(new_dict_EConstraintOffsetOption, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EConstraintOffsetOption, "Offset_RefPose", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EConstraintOffsetOption, "EConstraintOffsetOption_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_CopyBoneDeltaMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_CopyBoneDeltaMode = PyImport_AddModule("CopyBoneDeltaMode");
#else                                                                                     
	PyObject* new__module_CopyBoneDeltaMode = Py_InitModule3("CopyBoneDeltaMode", NULL, NULL);
#endif

	PyObject* new_dict_CopyBoneDeltaMode = PyModule_GetDict(new_module_CopyBoneDeltaMode);
	PyDict_SetItemString(new_dict_CopyBoneDeltaMode, "Accumulate", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_CopyBoneDeltaMode, "Copy", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_CopyBoneDeltaMode, "CopyBoneDeltaMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EInterpolationBlend()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EInterpolationBlend = PyImport_AddModule("EInterpolationBlend");
#else                                                                                     
	PyObject* new__module_EInterpolationBlend = Py_InitModule3("EInterpolationBlend", NULL, NULL);
#endif

	PyObject* new_dict_EInterpolationBlend = PyModule_GetDict(new_module_EInterpolationBlend);
	PyDict_SetItemString(new_dict_EInterpolationBlend, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EInterpolationBlend, "Cubic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EInterpolationBlend, "Sinusoidal", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EInterpolationBlend, "EaseInOutExponent2", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EInterpolationBlend, "EaseInOutExponent3", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EInterpolationBlend, "EaseInOutExponent4", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EInterpolationBlend, "EaseInOutExponent5", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EInterpolationBlend, "MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EBoneModificationMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBoneModificationMode = PyImport_AddModule("EBoneModificationMode");
#else                                                                                     
	PyObject* new__module_EBoneModificationMode = Py_InitModule3("EBoneModificationMode", NULL, NULL);
#endif

	PyObject* new_dict_EBoneModificationMode = PyModule_GetDict(new_module_EBoneModificationMode);
	PyDict_SetItemString(new_dict_EBoneModificationMode, "BMM_Ignore", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBoneModificationMode, "BMM_Replace", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBoneModificationMode, "BMM_Additive", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBoneModificationMode, "BMM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EModifyCurveApplyMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EModifyCurveApplyMode = PyImport_AddModule("EModifyCurveApplyMode");
#else                                                                                     
	PyObject* new__module_EModifyCurveApplyMode = Py_InitModule3("EModifyCurveApplyMode", NULL, NULL);
#endif

	PyObject* new_dict_EModifyCurveApplyMode = PyModule_GetDict(new_module_EModifyCurveApplyMode);
	PyDict_SetItemString(new_dict_EModifyCurveApplyMode, "Add", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EModifyCurveApplyMode, "Scale", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EModifyCurveApplyMode, "Blend", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EModifyCurveApplyMode, "WeightedMovingAverage", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EModifyCurveApplyMode, "RemapCurve", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EModifyCurveApplyMode, "EModifyCurveApplyMode_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EPoseDriverOutput()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPoseDriverOutput = PyImport_AddModule("EPoseDriverOutput");
#else                                                                                     
	PyObject* new__module_EPoseDriverOutput = Py_InitModule3("EPoseDriverOutput", NULL, NULL);
#endif

	PyObject* new_dict_EPoseDriverOutput = PyModule_GetDict(new_module_EPoseDriverOutput);
	PyDict_SetItemString(new_dict_EPoseDriverOutput, "DrivePoses", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPoseDriverOutput, "DriveCurves", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPoseDriverOutput, "EPoseDriverOutput_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EPoseDriverSource()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPoseDriverSource = PyImport_AddModule("EPoseDriverSource");
#else                                                                                     
	PyObject* new__module_EPoseDriverSource = Py_InitModule3("EPoseDriverSource", NULL, NULL);
#endif

	PyObject* new_dict_EPoseDriverSource = PyModule_GetDict(new_module_EPoseDriverSource);
	PyDict_SetItemString(new_dict_EPoseDriverSource, "Rotation", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPoseDriverSource, "Translation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPoseDriverSource, "EPoseDriverSource_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EPoseDriverType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPoseDriverType = PyImport_AddModule("EPoseDriverType");
#else                                                                                     
	PyObject* new__module_EPoseDriverType = Py_InitModule3("EPoseDriverType", NULL, NULL);
#endif

	PyObject* new_dict_EPoseDriverType = PyModule_GetDict(new_module_EPoseDriverType);
	PyDict_SetItemString(new_dict_EPoseDriverType, "SwingAndTwist", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPoseDriverType, "SwingOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPoseDriverType, "Translation", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPoseDriverType, "EPoseDriverType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESnapshotSourceMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESnapshotSourceMode = PyImport_AddModule("ESnapshotSourceMode");
#else                                                                                     
	PyObject* new__module_ESnapshotSourceMode = Py_InitModule3("ESnapshotSourceMode", NULL, NULL);
#endif

	PyObject* new_dict_ESnapshotSourceMode = PyModule_GetDict(new_module_ESnapshotSourceMode);
	PyDict_SetItemString(new_dict_ESnapshotSourceMode, "NamedSnapshot", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESnapshotSourceMode, "SnapshotPin", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESnapshotSourceMode, "ESnapshotSourceMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ERefPoseType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERefPoseType = PyImport_AddModule("ERefPoseType");
#else                                                                                     
	PyObject* new__module_ERefPoseType = Py_InitModule3("ERefPoseType", NULL, NULL);
#endif

	PyObject* new_dict_ERefPoseType = PyModule_GetDict(new_module_ERefPoseType);
	PyDict_SetItemString(new_dict_ERefPoseType, "EIT_LocalSpace", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERefPoseType, "EIT_Additive", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERefPoseType, "EIT_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESimulationSpace()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESimulationSpace = PyImport_AddModule("ESimulationSpace");
#else                                                                                     
	PyObject* new__module_ESimulationSpace = Py_InitModule3("ESimulationSpace", NULL, NULL);
#endif

	PyObject* new_dict_ESimulationSpace = PyModule_GetDict(new_module_ESimulationSpace);
	PyDict_SetItemString(new_dict_ESimulationSpace, "ComponentSpace", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESimulationSpace, "WorldSpace", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESimulationSpace, "BaseBoneSpace", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESimulationSpace, "ESimulationSpace_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EScaleChainInitialLength()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EScaleChainInitialLength = PyImport_AddModule("EScaleChainInitialLength");
#else                                                                                     
	PyObject* new__module_EScaleChainInitialLength = Py_InitModule3("EScaleChainInitialLength", NULL, NULL);
#endif

	PyObject* new_dict_EScaleChainInitialLength = PyModule_GetDict(new_module_EScaleChainInitialLength);
	PyDict_SetItemString(new_dict_EScaleChainInitialLength, "FixedDefaultLengthValue", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EScaleChainInitialLength, "Distance", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EScaleChainInitialLength, "ChainLength", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EScaleChainInitialLength, "EScaleChainInitialLength_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESequenceEvalReinit()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESequenceEvalReinit = PyImport_AddModule("ESequenceEvalReinit");
#else                                                                                     
	PyObject* new__module_ESequenceEvalReinit = Py_InitModule3("ESequenceEvalReinit", NULL, NULL);
#endif

	PyObject* new_dict_ESequenceEvalReinit = PyModule_GetDict(new_module_ESequenceEvalReinit);
	PyDict_SetItemString(new_dict_ESequenceEvalReinit, "NoReset", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESequenceEvalReinit, "StartPosition", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESequenceEvalReinit, "ExplicitTime", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESequenceEvalReinit, "ESequenceEvalReinit_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESplineBoneAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESplineBoneAxis = PyImport_AddModule("ESplineBoneAxis");
#else                                                                                     
	PyObject* new__module_ESplineBoneAxis = Py_InitModule3("ESplineBoneAxis", NULL, NULL);
#endif

	PyObject* new_dict_ESplineBoneAxis = PyModule_GetDict(new_module_ESplineBoneAxis);
	PyDict_SetItemString(new_dict_ESplineBoneAxis, "X", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESplineBoneAxis, "Y", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESplineBoneAxis, "Z", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESplineBoneAxis, "ESplineBoneAxis_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ERotationComponent()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERotationComponent = PyImport_AddModule("ERotationComponent");
#else                                                                                     
	PyObject* new__module_ERotationComponent = Py_InitModule3("ERotationComponent", NULL, NULL);
#endif

	PyObject* new_dict_ERotationComponent = PyModule_GetDict(new_module_ERotationComponent);
	PyDict_SetItemString(new_dict_ERotationComponent, "EulerX", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERotationComponent, "EulerY", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERotationComponent, "EulerZ", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERotationComponent, "QuaternionAngle", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERotationComponent, "SwingAngle", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ERotationComponent, "TwistAngle", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ERotationComponent, "ERotationComponent_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EEasingFuncType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEasingFuncType = PyImport_AddModule("EEasingFuncType");
#else                                                                                     
	PyObject* new__module_EEasingFuncType = Py_InitModule3("EEasingFuncType", NULL, NULL);
#endif

	PyObject* new_dict_EEasingFuncType = PyModule_GetDict(new_module_EEasingFuncType);
	PyDict_SetItemString(new_dict_EEasingFuncType, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEasingFuncType, "Sinusoidal", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEasingFuncType, "Cubic", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEasingFuncType, "QuadraticInOut", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEasingFuncType, "CubicInOut", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EEasingFuncType, "HermiteCubic", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EEasingFuncType, "QuarticInOut", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EEasingFuncType, "QuinticInOut", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EEasingFuncType, "CircularIn", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EEasingFuncType, "CircularOut", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EEasingFuncType, "CircularInOut", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EEasingFuncType, "ExpIn", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EEasingFuncType, "ExpOut", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EEasingFuncType, "ExpInOut", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EEasingFuncType, "CustomCurve", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EEasingFuncType, "EEasingFuncType_MAX", Py_BuildValue("i", 15));

}
void unreal_export_uenum_ERBFNormalizeMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERBFNormalizeMethod = PyImport_AddModule("ERBFNormalizeMethod");
#else                                                                                     
	PyObject* new__module_ERBFNormalizeMethod = Py_InitModule3("ERBFNormalizeMethod", NULL, NULL);
#endif

	PyObject* new_dict_ERBFNormalizeMethod = PyModule_GetDict(new_module_ERBFNormalizeMethod);
	PyDict_SetItemString(new_dict_ERBFNormalizeMethod, "OnlyNormalizeAboveOne", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERBFNormalizeMethod, "AlwaysNormalize", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERBFNormalizeMethod, "NormalizeWithinMedian", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERBFNormalizeMethod, "ERBFNormalizeMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ERBFDistanceMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERBFDistanceMethod = PyImport_AddModule("ERBFDistanceMethod");
#else                                                                                     
	PyObject* new__module_ERBFDistanceMethod = Py_InitModule3("ERBFDistanceMethod", NULL, NULL);
#endif

	PyObject* new_dict_ERBFDistanceMethod = PyModule_GetDict(new_module_ERBFDistanceMethod);
	PyDict_SetItemString(new_dict_ERBFDistanceMethod, "Euclidean", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERBFDistanceMethod, "Quaternion", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERBFDistanceMethod, "SwingAngle", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERBFDistanceMethod, "DefaultMethod", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERBFDistanceMethod, "ERBFDistanceMethod_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ERBFFunctionType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERBFFunctionType = PyImport_AddModule("ERBFFunctionType");
#else                                                                                     
	PyObject* new__module_ERBFFunctionType = Py_InitModule3("ERBFFunctionType", NULL, NULL);
#endif

	PyObject* new_dict_ERBFFunctionType = PyModule_GetDict(new_module_ERBFFunctionType);
	PyDict_SetItemString(new_dict_ERBFFunctionType, "Gaussian", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERBFFunctionType, "Exponential", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERBFFunctionType, "Linear", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERBFFunctionType, "Cubic", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERBFFunctionType, "Quintic", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ERBFFunctionType, "DefaultFunction", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ERBFFunctionType, "ERBFFunctionType_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_MovieScene3DPathSection_Axis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_MovieScene3DPathSection_Axis = PyImport_AddModule("MovieScene3DPathSection_Axis");
#else                                                                                     
	PyObject* new__module_MovieScene3DPathSection_Axis = Py_InitModule3("MovieScene3DPathSection_Axis", NULL, NULL);
#endif

	PyObject* new_dict_MovieScene3DPathSection_Axis = PyModule_GetDict(new_module_MovieScene3DPathSection_Axis);
	PyDict_SetItemString(new_dict_MovieScene3DPathSection_Axis, "X", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_MovieScene3DPathSection_Axis, "Y", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_MovieScene3DPathSection_Axis, "Z", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_MovieScene3DPathSection_Axis, "NEG_X", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_MovieScene3DPathSection_Axis, "NEG_Y", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_MovieScene3DPathSection_Axis, "NEG_Z", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_MovieScene3DPathSection_Axis, "MovieScene3DPathSection_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EShow3DTrajectory()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EShow3DTrajectory = PyImport_AddModule("EShow3DTrajectory");
#else                                                                                     
	PyObject* new__module_EShow3DTrajectory = Py_InitModule3("EShow3DTrajectory", NULL, NULL);
#endif

	PyObject* new_dict_EShow3DTrajectory = PyModule_GetDict(new_module_EShow3DTrajectory);
	PyDict_SetItemString(new_dict_EShow3DTrajectory, "EST_OnlyWhenSelected", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EShow3DTrajectory, "EST_Always", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EShow3DTrajectory, "EST_Never", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EShow3DTrajectory, "EST_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFireEventsAtPosition()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFireEventsAtPosition = PyImport_AddModule("EFireEventsAtPosition");
#else                                                                                     
	PyObject* new__module_EFireEventsAtPosition = Py_InitModule3("EFireEventsAtPosition", NULL, NULL);
#endif

	PyObject* new_dict_EFireEventsAtPosition = PyModule_GetDict(new_module_EFireEventsAtPosition);
	PyDict_SetItemString(new_dict_EFireEventsAtPosition, "AtStartOfEvaluation", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFireEventsAtPosition, "AtEndOfEvaluation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFireEventsAtPosition, "AfterSpawn", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFireEventsAtPosition, "EFireEventsAtPosition_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELevelVisibility()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELevelVisibility = PyImport_AddModule("ELevelVisibility");
#else                                                                                     
	PyObject* new__module_ELevelVisibility = Py_InitModule3("ELevelVisibility", NULL, NULL);
#endif

	PyObject* new_dict_ELevelVisibility = PyModule_GetDict(new_module_ELevelVisibility);
	PyDict_SetItemString(new_dict_ELevelVisibility, "Visible", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELevelVisibility, "Hidden", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELevelVisibility, "ELevelVisibility_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EParticleKey()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleKey = PyImport_AddModule("EParticleKey");
#else                                                                                     
	PyObject* new__module_EParticleKey = Py_InitModule3("EParticleKey", NULL, NULL);
#endif

	PyObject* new_dict_EParticleKey = PyModule_GetDict(new_module_EParticleKey);
	PyDict_SetItemString(new_dict_EParticleKey, "Activate", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleKey, "Deactivate", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleKey, "Trigger", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleKey, "EParticleKey_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFrameNumberDisplayFormats()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFrameNumberDisplayFormats = PyImport_AddModule("EFrameNumberDisplayFormats");
#else                                                                                     
	PyObject* new__module_EFrameNumberDisplayFormats = Py_InitModule3("EFrameNumberDisplayFormats", NULL, NULL);
#endif

	PyObject* new_dict_EFrameNumberDisplayFormats = PyModule_GetDict(new_module_EFrameNumberDisplayFormats);
	PyDict_SetItemString(new_dict_EFrameNumberDisplayFormats, "NonDropFrameTimecode", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFrameNumberDisplayFormats, "DropFrameTimecode", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFrameNumberDisplayFormats, "Seconds", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFrameNumberDisplayFormats, "Frames", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFrameNumberDisplayFormats, "MAX_Count", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFrameNumberDisplayFormats, "EFrameNumberDisplayFormats_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EMovieSceneKeyInterpolation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMovieSceneKeyInterpolation = PyImport_AddModule("EMovieSceneKeyInterpolation");
#else                                                                                     
	PyObject* new__module_EMovieSceneKeyInterpolation = Py_InitModule3("EMovieSceneKeyInterpolation", NULL, NULL);
#endif

	PyObject* new_dict_EMovieSceneKeyInterpolation = PyModule_GetDict(new_module_EMovieSceneKeyInterpolation);
	PyDict_SetItemString(new_dict_EMovieSceneKeyInterpolation, "Auto", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMovieSceneKeyInterpolation, "User", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMovieSceneKeyInterpolation, "Break", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMovieSceneKeyInterpolation, "Linear", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMovieSceneKeyInterpolation, "Constant", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMovieSceneKeyInterpolation, "EMovieSceneKeyInterpolation_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EMovieSceneBlendType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMovieSceneBlendType = PyImport_AddModule("EMovieSceneBlendType");
#else                                                                                     
	PyObject* new__module_EMovieSceneBlendType = Py_InitModule3("EMovieSceneBlendType", NULL, NULL);
#endif

	PyObject* new_dict_EMovieSceneBlendType = PyModule_GetDict(new_module_EMovieSceneBlendType);
	PyDict_SetItemString(new_dict_EMovieSceneBlendType, "Absolute", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMovieSceneBlendType, "Additive", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMovieSceneBlendType, "Relative", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMovieSceneBlendType, "EMovieSceneBlendType_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EMovieSceneBuiltInEasing()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMovieSceneBuiltInEasing = PyImport_AddModule("EMovieSceneBuiltInEasing");
#else                                                                                     
	PyObject* new__module_EMovieSceneBuiltInEasing = Py_InitModule3("EMovieSceneBuiltInEasing", NULL, NULL);
#endif

	PyObject* new_dict_EMovieSceneBuiltInEasing = PyModule_GetDict(new_module_EMovieSceneBuiltInEasing);
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "SinIn", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "SinOut", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "SinInOut", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "QuadIn", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "QuadOut", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "QuadInOut", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "CubicIn", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "CubicOut", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "CubicInOut", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "QuartIn", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "QuartOut", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "QuartInOut", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "QuintIn", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "QuintOut", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "QuintInOut", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "ExpoIn", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "ExpoOut", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "ExpoInOut", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "CircIn", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "CircOut", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "CircInOut", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_EMovieSceneBuiltInEasing, "EMovieSceneBuiltInEasing_MAX", Py_BuildValue("i", 22));

}
void unreal_export_uenum_EEvaluationMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEvaluationMethod = PyImport_AddModule("EEvaluationMethod");
#else                                                                                     
	PyObject* new__module_EEvaluationMethod = Py_InitModule3("EEvaluationMethod", NULL, NULL);
#endif

	PyObject* new_dict_EEvaluationMethod = PyModule_GetDict(new_module_EEvaluationMethod);
	PyDict_SetItemString(new_dict_EEvaluationMethod, "Static", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEvaluationMethod, "Swept", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEvaluationMethod, "EEvaluationMethod_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EUpdateClockSource()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUpdateClockSource = PyImport_AddModule("EUpdateClockSource");
#else                                                                                     
	PyObject* new__module_EUpdateClockSource = Py_InitModule3("EUpdateClockSource", NULL, NULL);
#endif

	PyObject* new_dict_EUpdateClockSource = PyModule_GetDict(new_module_EUpdateClockSource);
	PyDict_SetItemString(new_dict_EUpdateClockSource, "Tick", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUpdateClockSource, "Platform", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUpdateClockSource, "Audio", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUpdateClockSource, "Timecode", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EUpdateClockSource, "EUpdateClockSource_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMovieSceneEvaluationType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMovieSceneEvaluationType = PyImport_AddModule("EMovieSceneEvaluationType");
#else                                                                                     
	PyObject* new__module_EMovieSceneEvaluationType = Py_InitModule3("EMovieSceneEvaluationType", NULL, NULL);
#endif

	PyObject* new_dict_EMovieSceneEvaluationType = PyModule_GetDict(new_module_EMovieSceneEvaluationType);
	PyDict_SetItemString(new_dict_EMovieSceneEvaluationType, "FrameLocked", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMovieSceneEvaluationType, "WithSubFrames", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMovieSceneEvaluationType, "EMovieSceneEvaluationType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EMovieScenePlayerStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMovieScenePlayerStatus = PyImport_AddModule("EMovieScenePlayerStatus");
#else                                                                                     
	PyObject* new__module_EMovieScenePlayerStatus = Py_InitModule3("EMovieScenePlayerStatus", NULL, NULL);
#endif

	PyObject* new_dict_EMovieScenePlayerStatus = PyModule_GetDict(new_module_EMovieScenePlayerStatus);
	PyDict_SetItemString(new_dict_EMovieScenePlayerStatus, "Stopped", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMovieScenePlayerStatus, "Playing", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMovieScenePlayerStatus, "Recording", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMovieScenePlayerStatus, "Scrubbing", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMovieScenePlayerStatus, "Jumping", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMovieScenePlayerStatus, "Stepping", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMovieScenePlayerStatus, "Paused", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMovieScenePlayerStatus, "MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EMovieSceneObjectBindingSpace()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMovieSceneObjectBindingSpace = PyImport_AddModule("EMovieSceneObjectBindingSpace");
#else                                                                                     
	PyObject* new__module_EMovieSceneObjectBindingSpace = Py_InitModule3("EMovieSceneObjectBindingSpace", NULL, NULL);
#endif

	PyObject* new_dict_EMovieSceneObjectBindingSpace = PyModule_GetDict(new_module_EMovieSceneObjectBindingSpace);
	PyDict_SetItemString(new_dict_EMovieSceneObjectBindingSpace, "Local", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMovieSceneObjectBindingSpace, "Root", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMovieSceneObjectBindingSpace, "EMovieSceneObjectBindingSpace_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EMovieSceneCompletionMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMovieSceneCompletionMode = PyImport_AddModule("EMovieSceneCompletionMode");
#else                                                                                     
	PyObject* new__module_EMovieSceneCompletionMode = Py_InitModule3("EMovieSceneCompletionMode", NULL, NULL);
#endif

	PyObject* new_dict_EMovieSceneCompletionMode = PyModule_GetDict(new_module_EMovieSceneCompletionMode);
	PyDict_SetItemString(new_dict_EMovieSceneCompletionMode, "KeepState", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMovieSceneCompletionMode, "RestoreState", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMovieSceneCompletionMode, "ProjectDefault", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMovieSceneCompletionMode, "EMovieSceneCompletionMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESectionEvaluationFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESectionEvaluationFlags = PyImport_AddModule("ESectionEvaluationFlags");
#else                                                                                     
	PyObject* new__module_ESectionEvaluationFlags = Py_InitModule3("ESectionEvaluationFlags", NULL, NULL);
#endif

	PyObject* new_dict_ESectionEvaluationFlags = PyModule_GetDict(new_module_ESectionEvaluationFlags);
	PyDict_SetItemString(new_dict_ESectionEvaluationFlags, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESectionEvaluationFlags, "PreRoll", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESectionEvaluationFlags, "PostRoll", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESectionEvaluationFlags, "ESectionEvaluationFlags_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EUpdatePositionMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUpdatePositionMethod = PyImport_AddModule("EUpdatePositionMethod");
#else                                                                                     
	PyObject* new__module_EUpdatePositionMethod = Py_InitModule3("EUpdatePositionMethod", NULL, NULL);
#endif

	PyObject* new_dict_EUpdatePositionMethod = PyModule_GetDict(new_module_EUpdatePositionMethod);
	PyDict_SetItemString(new_dict_EUpdatePositionMethod, "Play", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUpdatePositionMethod, "Jump", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUpdatePositionMethod, "Scrub", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUpdatePositionMethod, "EUpdatePositionMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESpawnOwnership()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESpawnOwnership = PyImport_AddModule("ESpawnOwnership");
#else                                                                                     
	PyObject* new__module_ESpawnOwnership = Py_InitModule3("ESpawnOwnership", NULL, NULL);
#endif

	PyObject* new_dict_ESpawnOwnership = PyModule_GetDict(new_module_ESpawnOwnership);
	PyDict_SetItemString(new_dict_ESpawnOwnership, "InnerSequence", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESpawnOwnership, "MasterSequence", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESpawnOwnership, "External", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESpawnOwnership, "ESpawnOwnership_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EClassViewerDeveloperType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EClassViewerDeveloperType = PyImport_AddModule("EClassViewerDeveloperType");
#else                                                                                     
	PyObject* new__module_EClassViewerDeveloperType = Py_InitModule3("EClassViewerDeveloperType", NULL, NULL);
#endif

	PyObject* new_dict_EClassViewerDeveloperType = PyModule_GetDict(new_module_EClassViewerDeveloperType);
	PyDict_SetItemString(new_dict_EClassViewerDeveloperType, "CVDT_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EClassViewerDeveloperType, "CVDT_CurrentUser", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EClassViewerDeveloperType, "CVDT_All", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EClassViewerDeveloperType, "CVDT_Max", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EClassViewerDeveloperType, "CVDT_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EBlueprintComponentDataCookingMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBlueprintComponentDataCookingMethod = PyImport_AddModule("EBlueprintComponentDataCookingMethod");
#else                                                                                     
	PyObject* new__module_EBlueprintComponentDataCookingMethod = Py_InitModule3("EBlueprintComponentDataCookingMethod", NULL, NULL);
#endif

	PyObject* new_dict_EBlueprintComponentDataCookingMethod = PyModule_GetDict(new_module_EBlueprintComponentDataCookingMethod);
	PyDict_SetItemString(new_dict_EBlueprintComponentDataCookingMethod, "Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBlueprintComponentDataCookingMethod, "AllBlueprints", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBlueprintComponentDataCookingMethod, "EnabledBlueprintsOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBlueprintComponentDataCookingMethod, "EBlueprintComponentDataCookingMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ECookProgressDisplayMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECookProgressDisplayMode = PyImport_AddModule("ECookProgressDisplayMode");
#else                                                                                     
	PyObject* new__module_ECookProgressDisplayMode = Py_InitModule3("ECookProgressDisplayMode", NULL, NULL);
#endif

	PyObject* new_dict_ECookProgressDisplayMode = PyModule_GetDict(new_module_ECookProgressDisplayMode);
	PyDict_SetItemString(new_dict_ECookProgressDisplayMode, "Nothing", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECookProgressDisplayMode, "RemainingPackages", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECookProgressDisplayMode, "PackageNames", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECookProgressDisplayMode, "NamesAndRemainingPackages", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECookProgressDisplayMode, "Max", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ECookProgressDisplayMode, "ECookProgressDisplayMode_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ECookTickFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECookTickFlags = PyImport_AddModule("ECookTickFlags");
#else                                                                                     
	PyObject* new__module_ECookTickFlags = Py_InitModule3("ECookTickFlags", NULL, NULL);
#endif

	PyObject* new_dict_ECookTickFlags = PyModule_GetDict(new_module_ECookTickFlags);
	PyDict_SetItemString(new_dict_ECookTickFlags, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECookTickFlags, "MarkupInUsePackages", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECookTickFlags, "HideProgressDisplay", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECookTickFlags, "ECookTickFlags_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ECookMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECookMode = PyImport_AddModule("ECookMode");
#else                                                                                     
	PyObject* new__module_ECookMode = Py_InitModule3("ECookMode", NULL, NULL);
#endif

	PyObject* new_dict_ECookMode = PyModule_GetDict(new_module_ECookMode);
	PyDict_SetItemString(new_dict_ECookMode, "CookOnTheFly", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECookMode, "CookOnTheFlyFromTheEditor", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECookMode, "CookByTheBookFromTheEditor", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECookMode, "CookByTheBook", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECookMode, "ECookMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ECSVImportType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECSVImportType = PyImport_AddModule("ECSVImportType");
#else                                                                                     
	PyObject* new__module_ECSVImportType = Py_InitModule3("ECSVImportType", NULL, NULL);
#endif

	PyObject* new_dict_ECSVImportType = PyModule_GetDict(new_module_ECSVImportType);
	PyDict_SetItemString(new_dict_ECSVImportType, "ECSV_DataTable", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECSVImportType, "ECSV_CurveTable", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECSVImportType, "ECSV_CurveFloat", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECSVImportType, "ECSV_CurveVector", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECSVImportType, "ECSV_CurveLinearColor", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ECSVImportType, "ECSV_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ECommentBoxMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECommentBoxMode = PyImport_AddModule("ECommentBoxMode");
#else                                                                                     
	PyObject* new__module_ECommentBoxMode = Py_InitModule3("ECommentBoxMode", NULL, NULL);
#endif

	PyObject* new_dict_ECommentBoxMode = PyModule_GetDict(new_module_ECommentBoxMode);
	PyDict_SetItemString(new_dict_ECommentBoxMode, "GroupMovement", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECommentBoxMode, "NoGroupMovement", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECommentBoxMode, "ECommentBoxMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EPasteTo()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPasteTo = PyImport_AddModule("EPasteTo");
#else                                                                                     
	PyObject* new__module_EPasteTo = Py_InitModule3("EPasteTo", NULL, NULL);
#endif

	PyObject* new_dict_EPasteTo = PyModule_GetDict(new_module_EPasteTo);
	PyDict_SetItemString(new_dict_EPasteTo, "PT_OriginalLocation", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPasteTo, "PT_Here", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPasteTo, "PT_WorldOrigin", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPasteTo, "PT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMapSetBrushFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMapSetBrushFlags = PyImport_AddModule("EMapSetBrushFlags");
#else                                                                                     
	PyObject* new__module_EMapSetBrushFlags = Py_InitModule3("EMapSetBrushFlags", NULL, NULL);
#endif

	PyObject* new_dict_EMapSetBrushFlags = PyModule_GetDict(new_module_EMapSetBrushFlags);
	PyDict_SetItemString(new_dict_EMapSetBrushFlags, "MSB_BrushColor", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMapSetBrushFlags, "MSB_Group", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMapSetBrushFlags, "MSB_PolyFlags", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMapSetBrushFlags, "MSB_BrushType", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMapSetBrushFlags, "MSB_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_ELevelVisibilityDirtyMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELevelVisibilityDirtyMode = PyImport_AddModule("ELevelVisibilityDirtyMode");
#else                                                                                     
	PyObject* new__module_ELevelVisibilityDirtyMode = Py_InitModule3("ELevelVisibilityDirtyMode", NULL, NULL);
#endif

	PyObject* new_dict_ELevelVisibilityDirtyMode = PyModule_GetDict(new_module_ELevelVisibilityDirtyMode);
	PyDict_SetItemString(new_dict_ELevelVisibilityDirtyMode, "ModifyOnChange", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELevelVisibilityDirtyMode, "DontModify", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELevelVisibilityDirtyMode, "ELevelVisibilityDirtyMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELoadLevelAtStartup()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELoadLevelAtStartup = PyImport_AddModule("ELoadLevelAtStartup");
#else                                                                                     
	PyObject* new__module_ELoadLevelAtStartup = Py_InitModule3("ELoadLevelAtStartup", NULL, NULL);
#endif

	PyObject* new_dict_ELoadLevelAtStartup = PyModule_GetDict(new_module_ELoadLevelAtStartup);
	PyDict_SetItemString(new_dict_ELoadLevelAtStartup, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELoadLevelAtStartup, "ProjectDefault", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELoadLevelAtStartup, "LastOpened", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELoadLevelAtStartup, "ELoadLevelAtStartup_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELevelEditor2DAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELevelEditor2DAxis = PyImport_AddModule("ELevelEditor2DAxis");
#else                                                                                     
	PyObject* new__module_ELevelEditor2DAxis = Py_InitModule3("ELevelEditor2DAxis", NULL, NULL);
#endif

	PyObject* new_dict_ELevelEditor2DAxis = PyModule_GetDict(new_module_ELevelEditor2DAxis);
	PyDict_SetItemString(new_dict_ELevelEditor2DAxis, "X", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELevelEditor2DAxis, "Y", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELevelEditor2DAxis, "Z", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELevelEditor2DAxis, "ELevelEditor2DAxis_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDefaultLocationUnit()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDefaultLocationUnit = PyImport_AddModule("EDefaultLocationUnit");
#else                                                                                     
	PyObject* new__module_EDefaultLocationUnit = Py_InitModule3("EDefaultLocationUnit", NULL, NULL);
#endif

	PyObject* new_dict_EDefaultLocationUnit = PyModule_GetDict(new_module_EDefaultLocationUnit);
	PyDict_SetItemString(new_dict_EDefaultLocationUnit, "Micrometers", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDefaultLocationUnit, "Millimeters", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDefaultLocationUnit, "Centimeters", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDefaultLocationUnit, "Meters", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDefaultLocationUnit, "Kilometers", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EDefaultLocationUnit, "Inches", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EDefaultLocationUnit, "Feet", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EDefaultLocationUnit, "Yards", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EDefaultLocationUnit, "Miles", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EDefaultLocationUnit, "Invalid", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EDefaultLocationUnit, "EDefaultLocationUnit_MAX", Py_BuildValue("i", 10));

}
void unreal_export_uenum_EUnitDisplay()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUnitDisplay = PyImport_AddModule("EUnitDisplay");
#else                                                                                     
	PyObject* new__module_EUnitDisplay = Py_InitModule3("EUnitDisplay", NULL, NULL);
#endif

	PyObject* new_dict_EUnitDisplay = PyModule_GetDict(new_module_EUnitDisplay);
	PyDict_SetItemString(new_dict_EUnitDisplay, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUnitDisplay, "Metric", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUnitDisplay, "Imperial", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUnitDisplay, "Invalid", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EUnitDisplay, "EUnitDisplay_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EFBXAnimationLengthImportType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFBXAnimationLengthImportType = PyImport_AddModule("EFBXAnimationLengthImportType");
#else                                                                                     
	PyObject* new__module_EFBXAnimationLengthImportType = Py_InitModule3("EFBXAnimationLengthImportType", NULL, NULL);
#endif

	PyObject* new_dict_EFBXAnimationLengthImportType = PyModule_GetDict(new_module_EFBXAnimationLengthImportType);
	PyDict_SetItemString(new_dict_EFBXAnimationLengthImportType, "FBXALIT_ExportedTime", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFBXAnimationLengthImportType, "FBXALIT_AnimatedKey", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFBXAnimationLengthImportType, "FBXALIT_SetRange", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFBXAnimationLengthImportType, "FBXALIT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFBXTestPlanActionType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFBXTestPlanActionType = PyImport_AddModule("EFBXTestPlanActionType");
#else                                                                                     
	PyObject* new__module_EFBXTestPlanActionType = Py_InitModule3("EFBXTestPlanActionType", NULL, NULL);
#endif

	PyObject* new_dict_EFBXTestPlanActionType = PyModule_GetDict(new_module_EFBXTestPlanActionType);
	PyDict_SetItemString(new_dict_EFBXTestPlanActionType, "Import", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFBXTestPlanActionType, "Reimport", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFBXTestPlanActionType, "AddLOD", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFBXTestPlanActionType, "ReimportLOD", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFBXTestPlanActionType, "ImportReload", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFBXTestPlanActionType, "EFBXTestPlanActionType_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EFBXExpectedResultPreset()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFBXExpectedResultPreset = PyImport_AddModule("EFBXExpectedResultPreset");
#else                                                                                     
	PyObject* new__module_EFBXExpectedResultPreset = Py_InitModule3("EFBXExpectedResultPreset", NULL, NULL);
#endif

	PyObject* new_dict_EFBXExpectedResultPreset = PyModule_GetDict(new_module_EFBXExpectedResultPreset);
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Error_Number", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Warning_Number", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Created_Staticmesh_Number", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Created_Skeletalmesh_Number", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Materials_Created_Number", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Material_Slot_Imported_Name", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Vertex_Number", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Lod_Number", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Vertex_Number_Lod", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Mesh_Materials_Number", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Mesh_LOD_Section_Number", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Mesh_LOD_Section_Vertex_Number", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Mesh_LOD_Section_Triangle_Number", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Mesh_LOD_Section_Material_Name", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Mesh_LOD_Section_Material_Index", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Mesh_LOD_Section_Material_Imported_Name", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Mesh_LOD_Vertex_Position", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Mesh_LOD_Vertex_Normal", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "LOD_UV_Channel_Number", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Bone_Number", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Bone_Position", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Animation_Frame_Number", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "Animation_Length", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_EFBXExpectedResultPreset, "EFBXExpectedResultPreset_MAX", Py_BuildValue("i", 23));

}
void unreal_export_uenum_EFbxExportCompatibility()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFbxExportCompatibility = PyImport_AddModule("EFbxExportCompatibility");
#else                                                                                     
	PyObject* new__module_EFbxExportCompatibility = Py_InitModule3("EFbxExportCompatibility", NULL, NULL);
#endif

	PyObject* new_dict_EFbxExportCompatibility = PyModule_GetDict(new_module_EFbxExportCompatibility);
	PyDict_SetItemString(new_dict_EFbxExportCompatibility, "FBX_2011", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFbxExportCompatibility, "FBX_2012", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFbxExportCompatibility, "FBX_2013", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFbxExportCompatibility, "FBX_2014", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFbxExportCompatibility, "FBX_2016", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFbxExportCompatibility, "FBX_2018", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EFbxExportCompatibility, "FBX_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EFBXImportType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFBXImportType = PyImport_AddModule("EFBXImportType");
#else                                                                                     
	PyObject* new__module_EFBXImportType = Py_InitModule3("EFBXImportType", NULL, NULL);
#endif

	PyObject* new_dict_EFBXImportType = PyModule_GetDict(new_module_EFBXImportType);
	PyDict_SetItemString(new_dict_EFBXImportType, "FBXIT_StaticMesh", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFBXImportType, "FBXIT_SkeletalMesh", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFBXImportType, "FBXIT_Animation", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFBXImportType, "FBXIT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EVertexColorImportOption()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVertexColorImportOption = PyImport_AddModule("EVertexColorImportOption");
#else                                                                                     
	PyObject* new__module_EVertexColorImportOption = Py_InitModule3("EVertexColorImportOption", NULL, NULL);
#endif

	PyObject* new_dict_EVertexColorImportOption = PyModule_GetDict(new_module_EVertexColorImportOption);
	PyDict_SetItemString(new_dict_EVertexColorImportOption, "Replace", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVertexColorImportOption, "Ignore", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVertexColorImportOption, "Override", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVertexColorImportOption, "EVertexColorImportOption_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFBXNormalGenerationMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFBXNormalGenerationMethod = PyImport_AddModule("EFBXNormalGenerationMethod");
#else                                                                                     
	PyObject* new__module_EFBXNormalGenerationMethod = Py_InitModule3("EFBXNormalGenerationMethod", NULL, NULL);
#endif

	PyObject* new_dict_EFBXNormalGenerationMethod = PyModule_GetDict(new_module_EFBXNormalGenerationMethod);
	PyDict_SetItemString(new_dict_EFBXNormalGenerationMethod, "BuiltIn", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFBXNormalGenerationMethod, "MikkTSpace", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFBXNormalGenerationMethod, "EFBXNormalGenerationMethod_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EFBXNormalImportMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFBXNormalImportMethod = PyImport_AddModule("EFBXNormalImportMethod");
#else                                                                                     
	PyObject* new__module_EFBXNormalImportMethod = Py_InitModule3("EFBXNormalImportMethod", NULL, NULL);
#endif

	PyObject* new_dict_EFBXNormalImportMethod = PyModule_GetDict(new_module_EFBXNormalImportMethod);
	PyDict_SetItemString(new_dict_EFBXNormalImportMethod, "FBXNIM_ComputeNormals", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFBXNormalImportMethod, "FBXNIM_ImportNormals", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFBXNormalImportMethod, "FBXNIM_ImportNormalsAndTangents", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFBXNormalImportMethod, "FBXNIM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFbxSceneReimportStatusFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFbxSceneReimportStatusFlags = PyImport_AddModule("EFbxSceneReimportStatusFlags");
#else                                                                                     
	PyObject* new__module_EFbxSceneReimportStatusFlags = Py_InitModule3("EFbxSceneReimportStatusFlags", NULL, NULL);
#endif

	PyObject* new_dict_EFbxSceneReimportStatusFlags = PyModule_GetDict(new_module_EFbxSceneReimportStatusFlags);
	PyDict_SetItemString(new_dict_EFbxSceneReimportStatusFlags, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFbxSceneReimportStatusFlags, "Added", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFbxSceneReimportStatusFlags, "Removed", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFbxSceneReimportStatusFlags, "Same", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFbxSceneReimportStatusFlags, "FoundContentBrowserAsset", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EFbxSceneReimportStatusFlags, "ReimportAsset", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EFbxSceneReimportStatusFlags, "EFbxSceneReimportStatusFlags_MAX", Py_BuildValue("i", 17));

}
void unreal_export_uenum_EFBXSceneOptionsCreateHierarchyType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFBXSceneOptionsCreateHierarchyType = PyImport_AddModule("EFBXSceneOptionsCreateHierarchyType");
#else                                                                                     
	PyObject* new__module_EFBXSceneOptionsCreateHierarchyType = Py_InitModule3("EFBXSceneOptionsCreateHierarchyType", NULL, NULL);
#endif

	PyObject* new_dict_EFBXSceneOptionsCreateHierarchyType = PyModule_GetDict(new_module_EFBXSceneOptionsCreateHierarchyType);
	PyDict_SetItemString(new_dict_EFBXSceneOptionsCreateHierarchyType, "FBXSOCHT_CreateLevelActors", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFBXSceneOptionsCreateHierarchyType, "FBXSOCHT_CreateActorComponents", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFBXSceneOptionsCreateHierarchyType, "FBXSOCHT_CreateBlueprint", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFBXSceneOptionsCreateHierarchyType, "FBXSOCHT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFBXSceneNormalGenerationMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFBXSceneNormalGenerationMethod = PyImport_AddModule("EFBXSceneNormalGenerationMethod");
#else                                                                                     
	PyObject* new__module_EFBXSceneNormalGenerationMethod = Py_InitModule3("EFBXSceneNormalGenerationMethod", NULL, NULL);
#endif

	PyObject* new_dict_EFBXSceneNormalGenerationMethod = PyModule_GetDict(new_module_EFBXSceneNormalGenerationMethod);
	PyDict_SetItemString(new_dict_EFBXSceneNormalGenerationMethod, "BuiltIn", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFBXSceneNormalGenerationMethod, "MikkTSpace", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFBXSceneNormalGenerationMethod, "EFBXSceneNormalGenerationMethod_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EFBXSceneNormalImportMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFBXSceneNormalImportMethod = PyImport_AddModule("EFBXSceneNormalImportMethod");
#else                                                                                     
	PyObject* new__module_EFBXSceneNormalImportMethod = Py_InitModule3("EFBXSceneNormalImportMethod", NULL, NULL);
#endif

	PyObject* new_dict_EFBXSceneNormalImportMethod = PyModule_GetDict(new_module_EFBXSceneNormalImportMethod);
	PyDict_SetItemString(new_dict_EFBXSceneNormalImportMethod, "FBXSceneNIM_ComputeNormals", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFBXSceneNormalImportMethod, "FBXSceneNIM_ImportNormals", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFBXSceneNormalImportMethod, "FBXSceneNIM_ImportNormalsAndTangents", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFBXSceneNormalImportMethod, "FBXSceneNIM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFbxSceneVertexColorImportOption()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFbxSceneVertexColorImportOption = PyImport_AddModule("EFbxSceneVertexColorImportOption");
#else                                                                                     
	PyObject* new__module_EFbxSceneVertexColorImportOption = Py_InitModule3("EFbxSceneVertexColorImportOption", NULL, NULL);
#endif

	PyObject* new_dict_EFbxSceneVertexColorImportOption = PyModule_GetDict(new_module_EFbxSceneVertexColorImportOption);
	PyDict_SetItemString(new_dict_EFbxSceneVertexColorImportOption, "Replace", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFbxSceneVertexColorImportOption, "Ignore", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFbxSceneVertexColorImportOption, "Override", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFbxSceneVertexColorImportOption, "EFbxSceneVertexColorImportOption_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFBXImportContentType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFBXImportContentType = PyImport_AddModule("EFBXImportContentType");
#else                                                                                     
	PyObject* new__module_EFBXImportContentType = Py_InitModule3("EFBXImportContentType", NULL, NULL);
#endif

	PyObject* new_dict_EFBXImportContentType = PyModule_GetDict(new_module_EFBXImportContentType);
	PyDict_SetItemString(new_dict_EFBXImportContentType, "FBXICT_All", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFBXImportContentType, "FBXICT_Geometry", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFBXImportContentType, "FBXICT_SkinningWeights", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFBXImportContentType, "FBXICT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPlayOnLaunchConfiguration()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPlayOnLaunchConfiguration = PyImport_AddModule("EPlayOnLaunchConfiguration");
#else                                                                                     
	PyObject* new__module_EPlayOnLaunchConfiguration = Py_InitModule3("EPlayOnLaunchConfiguration", NULL, NULL);
#endif

	PyObject* new_dict_EPlayOnLaunchConfiguration = PyModule_GetDict(new_module_EPlayOnLaunchConfiguration);
	PyDict_SetItemString(new_dict_EPlayOnLaunchConfiguration, "LaunchConfig_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPlayOnLaunchConfiguration, "LaunchConfig_Debug", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPlayOnLaunchConfiguration, "LaunchConfig_Development", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPlayOnLaunchConfiguration, "LaunchConfig_Test", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPlayOnLaunchConfiguration, "LaunchConfig_Shipping", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPlayOnLaunchConfiguration, "LaunchConfig_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EPlayOnBuildMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPlayOnBuildMode = PyImport_AddModule("EPlayOnBuildMode");
#else                                                                                     
	PyObject* new__module_EPlayOnBuildMode = Py_InitModule3("EPlayOnBuildMode", NULL, NULL);
#endif

	PyObject* new_dict_EPlayOnBuildMode = PyModule_GetDict(new_module_EPlayOnBuildMode);
	PyDict_SetItemString(new_dict_EPlayOnBuildMode, "PlayOnBuild_Always", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPlayOnBuildMode, "PlayOnBuild_Never", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPlayOnBuildMode, "PlayOnBuild_Default", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPlayOnBuildMode, "PlayOnBuild_IfEditorBuiltLocally", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPlayOnBuildMode, "PlayOnBuild_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EPlayNetMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPlayNetMode = PyImport_AddModule("EPlayNetMode");
#else                                                                                     
	PyObject* new__module_EPlayNetMode = Py_InitModule3("EPlayNetMode", NULL, NULL);
#endif

	PyObject* new_dict_EPlayNetMode = PyModule_GetDict(new_module_EPlayNetMode);
	PyDict_SetItemString(new_dict_EPlayNetMode, "PIE_Standalone", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPlayNetMode, "PIE_ListenServer", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPlayNetMode, "PIE_Client", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPlayNetMode, "PIE_StandaloneWithServer", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPlayNetMode, "PIE_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EPlayModeType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPlayModeType = PyImport_AddModule("EPlayModeType");
#else                                                                                     
	PyObject* new__module_EPlayModeType = Py_InitModule3("EPlayModeType", NULL, NULL);
#endif

	PyObject* new_dict_EPlayModeType = PyModule_GetDict(new_module_EPlayModeType);
	PyDict_SetItemString(new_dict_EPlayModeType, "PlayMode_InViewPort", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPlayModeType, "PlayMode_InEditorFloating", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPlayModeType, "PlayMode_InMobilePreview", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPlayModeType, "PlayMode_InTargetedMobilePreview", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPlayModeType, "PlayMode_InVulkanPreview", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPlayModeType, "PlayMode_InNewProcess", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EPlayModeType, "PlayMode_InVR", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EPlayModeType, "PlayMode_Simulate", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EPlayModeType, "PlayMode_Count", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EPlayModeType, "PlayMode_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_EPlayModeLocations()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPlayModeLocations = PyImport_AddModule("EPlayModeLocations");
#else                                                                                     
	PyObject* new__module_EPlayModeLocations = Py_InitModule3("EPlayModeLocations", NULL, NULL);
#endif

	PyObject* new_dict_EPlayModeLocations = PyModule_GetDict(new_module_EPlayModeLocations);
	PyDict_SetItemString(new_dict_EPlayModeLocations, "PlayLocation_CurrentCameraLocation", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPlayModeLocations, "PlayLocation_DefaultPlayerStart", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPlayModeLocations, "PlayLocation_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELaunchModeType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELaunchModeType = PyImport_AddModule("ELaunchModeType");
#else                                                                                     
	PyObject* new__module_ELaunchModeType = Py_InitModule3("ELaunchModeType", NULL, NULL);
#endif

	PyObject* new_dict_ELaunchModeType = PyModule_GetDict(new_module_ELaunchModeType);
	PyDict_SetItemString(new_dict_ELaunchModeType, "LaunchMode_OnDevice", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELaunchModeType, "LaunchMode_MAX", Py_BuildValue("i", 1));

}
void unreal_export_uenum_ELabelAnchorMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELabelAnchorMode = PyImport_AddModule("ELabelAnchorMode");
#else                                                                                     
	PyObject* new__module_ELabelAnchorMode = Py_InitModule3("ELabelAnchorMode", NULL, NULL);
#endif

	PyObject* new_dict_ELabelAnchorMode = PyModule_GetDict(new_module_ELabelAnchorMode);
	PyDict_SetItemString(new_dict_ELabelAnchorMode, "LabelAnchorMode_TopLeft", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELabelAnchorMode, "LabelAnchorMode_TopCenter", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELabelAnchorMode, "LabelAnchorMode_TopRight", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELabelAnchorMode, "LabelAnchorMode_CenterLeft", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELabelAnchorMode, "LabelAnchorMode_Centered", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELabelAnchorMode, "LabelAnchorMode_CenterRight", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ELabelAnchorMode, "LabelAnchorMode_BottomLeft", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ELabelAnchorMode, "LabelAnchorMode_BottomCenter", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ELabelAnchorMode, "LabelAnchorMode_BottomRight", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ELabelAnchorMode, "LabelAnchorMode_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_EScrollGestureDirection()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EScrollGestureDirection = PyImport_AddModule("EScrollGestureDirection");
#else                                                                                     
	PyObject* new__module_EScrollGestureDirection = Py_InitModule3("EScrollGestureDirection", NULL, NULL);
#endif

	PyObject* new_dict_EScrollGestureDirection = PyModule_GetDict(new_module_EScrollGestureDirection);
	PyDict_SetItemString(new_dict_EScrollGestureDirection, "UseSystemSetting", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EScrollGestureDirection, "Standard", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EScrollGestureDirection, "Natural", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EScrollGestureDirection, "EScrollGestureDirection_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMeasuringToolUnits()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeasuringToolUnits = PyImport_AddModule("EMeasuringToolUnits");
#else                                                                                     
	PyObject* new__module_EMeasuringToolUnits = Py_InitModule3("EMeasuringToolUnits", NULL, NULL);
#endif

	PyObject* new_dict_EMeasuringToolUnits = PyModule_GetDict(new_module_EMeasuringToolUnits);
	PyDict_SetItemString(new_dict_EMeasuringToolUnits, "MeasureUnits_Centimeters", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeasuringToolUnits, "MeasureUnits_Meters", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeasuringToolUnits, "MeasureUnits_Kilometers", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMeasuringToolUnits, "MeasureUnits_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELandscapeFoliageEditorControlType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeFoliageEditorControlType = PyImport_AddModule("ELandscapeFoliageEditorControlType");
#else                                                                                     
	PyObject* new__module_ELandscapeFoliageEditorControlType = Py_InitModule3("ELandscapeFoliageEditorControlType", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeFoliageEditorControlType = PyModule_GetDict(new_module_ELandscapeFoliageEditorControlType);
	PyDict_SetItemString(new_dict_ELandscapeFoliageEditorControlType, "IgnoreCtrl", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeFoliageEditorControlType, "RequireCtrl", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeFoliageEditorControlType, "RequireNoCtrl", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeFoliageEditorControlType, "ELandscapeFoliageEditorControlType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EWASDType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWASDType = PyImport_AddModule("EWASDType");
#else                                                                                     
	PyObject* new__module_EWASDType = Py_InitModule3("EWASDType", NULL, NULL);
#endif

	PyObject* new_dict_EWASDType = PyModule_GetDict(new_module_EWASDType);
	PyDict_SetItemString(new_dict_EWASDType, "WASD_Always", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWASDType, "WASD_RMBOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWASDType, "WASD_Never", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EWASDType, "WASD_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ERotationGridMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERotationGridMode = PyImport_AddModule("ERotationGridMode");
#else                                                                                     
	PyObject* new__module_ERotationGridMode = Py_InitModule3("ERotationGridMode", NULL, NULL);
#endif

	PyObject* new_dict_ERotationGridMode = PyModule_GetDict(new_module_ERotationGridMode);
	PyDict_SetItemString(new_dict_ERotationGridMode, "GridMode_DivisionsOf360", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERotationGridMode, "GridMode_Common", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERotationGridMode, "GridMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EMaterialSearchLocation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialSearchLocation = PyImport_AddModule("EMaterialSearchLocation");
#else                                                                                     
	PyObject* new__module_EMaterialSearchLocation = Py_InitModule3("EMaterialSearchLocation", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialSearchLocation = PyModule_GetDict(new_module_EMaterialSearchLocation);
	PyDict_SetItemString(new_dict_EMaterialSearchLocation, "Local", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialSearchLocation, "UnderParent", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialSearchLocation, "UnderRoot", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialSearchLocation, "AllAssets", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMaterialSearchLocation, "EMaterialSearchLocation_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EAnimationViewportCameraFollowMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAnimationViewportCameraFollowMode = PyImport_AddModule("EAnimationViewportCameraFollowMode");
#else                                                                                     
	PyObject* new__module_EAnimationViewportCameraFollowMode = Py_InitModule3("EAnimationViewportCameraFollowMode", NULL, NULL);
#endif

	PyObject* new_dict_EAnimationViewportCameraFollowMode = PyModule_GetDict(new_module_EAnimationViewportCameraFollowMode);
	PyDict_SetItemString(new_dict_EAnimationViewportCameraFollowMode, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAnimationViewportCameraFollowMode, "Bounds", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAnimationViewportCameraFollowMode, "Bone", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAnimationViewportCameraFollowMode, "EAnimationViewportCameraFollowMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPhysicsAssetEditorConstraintViewMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPhysicsAssetEditorConstraintViewMode = PyImport_AddModule("EPhysicsAssetEditorConstraintViewMode");
#else                                                                                     
	PyObject* new__module_EPhysicsAssetEditorConstraintViewMode = Py_InitModule3("EPhysicsAssetEditorConstraintViewMode", NULL, NULL);
#endif

	PyObject* new_dict_EPhysicsAssetEditorConstraintViewMode = PyModule_GetDict(new_module_EPhysicsAssetEditorConstraintViewMode);
	PyDict_SetItemString(new_dict_EPhysicsAssetEditorConstraintViewMode, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPhysicsAssetEditorConstraintViewMode, "AllPositions", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPhysicsAssetEditorConstraintViewMode, "AllLimits", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPhysicsAssetEditorConstraintViewMode, "EPhysicsAssetEditorConstraintViewMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPhysicsAssetEditorRenderMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPhysicsAssetEditorRenderMode = PyImport_AddModule("EPhysicsAssetEditorRenderMode");
#else                                                                                     
	PyObject* new__module_EPhysicsAssetEditorRenderMode = Py_InitModule3("EPhysicsAssetEditorRenderMode", NULL, NULL);
#endif

	PyObject* new_dict_EPhysicsAssetEditorRenderMode = PyModule_GetDict(new_module_EPhysicsAssetEditorRenderMode);
	PyDict_SetItemString(new_dict_EPhysicsAssetEditorRenderMode, "Solid", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPhysicsAssetEditorRenderMode, "Wireframe", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPhysicsAssetEditorRenderMode, "None", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPhysicsAssetEditorRenderMode, "EPhysicsAssetEditorRenderMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPhysAssetFitVertWeight()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPhysAssetFitVertWeight = PyImport_AddModule("EPhysAssetFitVertWeight");
#else                                                                                     
	PyObject* new__module_EPhysAssetFitVertWeight = Py_InitModule3("EPhysAssetFitVertWeight", NULL, NULL);
#endif

	PyObject* new_dict_EPhysAssetFitVertWeight = PyModule_GetDict(new_module_EPhysAssetFitVertWeight);
	PyDict_SetItemString(new_dict_EPhysAssetFitVertWeight, "EVW_AnyWeight", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPhysAssetFitVertWeight, "EVW_DominantWeight", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPhysAssetFitVertWeight, "EVW_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EPhysAssetFitGeomType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPhysAssetFitGeomType = PyImport_AddModule("EPhysAssetFitGeomType");
#else                                                                                     
	PyObject* new__module_EPhysAssetFitGeomType = Py_InitModule3("EPhysAssetFitGeomType", NULL, NULL);
#endif

	PyObject* new_dict_EPhysAssetFitGeomType = PyModule_GetDict(new_module_EPhysAssetFitGeomType);
	PyDict_SetItemString(new_dict_EPhysAssetFitGeomType, "EFG_Box", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPhysAssetFitGeomType, "EFG_Sphyl", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPhysAssetFitGeomType, "EFG_Sphere", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPhysAssetFitGeomType, "EFG_TaperedCapsule", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPhysAssetFitGeomType, "EFG_SingleConvexHull", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPhysAssetFitGeomType, "EFG_MultiConvexHull", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EPhysAssetFitGeomType, "EFG_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EProjectPackagingBlueprintNativizationMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EProjectPackagingBlueprintNativizationMethod = PyImport_AddModule("EProjectPackagingBlueprintNativizationMethod");
#else                                                                                     
	PyObject* new__module_EProjectPackagingBlueprintNativizationMethod = Py_InitModule3("EProjectPackagingBlueprintNativizationMethod", NULL, NULL);
#endif

	PyObject* new_dict_EProjectPackagingBlueprintNativizationMethod = PyModule_GetDict(new_module_EProjectPackagingBlueprintNativizationMethod);
	PyDict_SetItemString(new_dict_EProjectPackagingBlueprintNativizationMethod, "Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EProjectPackagingBlueprintNativizationMethod, "Inclusive", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EProjectPackagingBlueprintNativizationMethod, "Exclusive", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EProjectPackagingBlueprintNativizationMethod, "EProjectPackagingBlueprintNativizationMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EProjectPackagingBuild()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EProjectPackagingBuild = PyImport_AddModule("EProjectPackagingBuild");
#else                                                                                     
	PyObject* new__module_EProjectPackagingBuild = Py_InitModule3("EProjectPackagingBuild", NULL, NULL);
#endif

	PyObject* new_dict_EProjectPackagingBuild = PyModule_GetDict(new_module_EProjectPackagingBuild);
	PyDict_SetItemString(new_dict_EProjectPackagingBuild, "Always", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EProjectPackagingBuild, "Never", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EProjectPackagingBuild, "IfProjectHasCode", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EProjectPackagingBuild, "IfEditorWasBuiltLocally", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EProjectPackagingBuild, "EProjectPackagingBuild_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EProjectPackagingInternationalizationPresets()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EProjectPackagingInternationalizationPresets = PyImport_AddModule("EProjectPackagingInternationalizationPresets");
#else                                                                                     
	PyObject* new__module_EProjectPackagingInternationalizationPresets = Py_InitModule3("EProjectPackagingInternationalizationPresets", NULL, NULL);
#endif

	PyObject* new_dict_EProjectPackagingInternationalizationPresets = PyModule_GetDict(new_module_EProjectPackagingInternationalizationPresets);
	PyDict_SetItemString(new_dict_EProjectPackagingInternationalizationPresets, "English", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EProjectPackagingInternationalizationPresets, "EFIGS", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EProjectPackagingInternationalizationPresets, "EFIGSCJK", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EProjectPackagingInternationalizationPresets, "CJK", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EProjectPackagingInternationalizationPresets, "All", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EProjectPackagingInternationalizationPresets, "EProjectPackagingInternationalizationPresets_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EProjectPackagingBuildConfigurations()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EProjectPackagingBuildConfigurations = PyImport_AddModule("EProjectPackagingBuildConfigurations");
#else                                                                                     
	PyObject* new__module_EProjectPackagingBuildConfigurations = Py_InitModule3("EProjectPackagingBuildConfigurations", NULL, NULL);
#endif

	PyObject* new_dict_EProjectPackagingBuildConfigurations = PyModule_GetDict(new_module_EProjectPackagingBuildConfigurations);
	PyDict_SetItemString(new_dict_EProjectPackagingBuildConfigurations, "PPBC_DebugGame", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EProjectPackagingBuildConfigurations, "PPBC_DebugGameClient", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EProjectPackagingBuildConfigurations, "PPBC_Development", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EProjectPackagingBuildConfigurations, "PPBC_DevelopmentClient", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EProjectPackagingBuildConfigurations, "PPBC_Shipping", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EProjectPackagingBuildConfigurations, "PPBC_ShippingClient", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EProjectPackagingBuildConfigurations, "PPBC_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EditColor()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EditColor = PyImport_AddModule("EditColor");
#else                                                                                     
	PyObject* new__module_EditColor = Py_InitModule3("EditColor", NULL, NULL);
#endif

	PyObject* new_dict_EditColor = PyModule_GetDict(new_module_EditColor);
	PyDict_SetItemString(new_dict_EditColor, "Red", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EditColor, "Orange", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EditColor, "Yellow", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EditColor, "Green", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EditColor, "Blue", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EditColor, "Indigo", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EditColor, "Violet", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EditColor, "Pink", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EditColor, "Magenta", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EditColor, "Cyan", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EditColor, "EditColor_MAX", Py_BuildValue("i", 10));

}
void unreal_export_uenum_ArrayLabelEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ArrayLabelEnum = PyImport_AddModule("ArrayLabelEnum");
#else                                                                                     
	PyObject* new__module_ArrayLabelEnum = Py_InitModule3("ArrayLabelEnum", NULL, NULL);
#endif

	PyObject* new_dict_ArrayLabelEnum = PyModule_GetDict(new_module_ArrayLabelEnum);
	PyDict_SetItemString(new_dict_ArrayLabelEnum, "ArrayIndex0", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ArrayLabelEnum, "ArrayIndex1", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ArrayLabelEnum, "ArrayIndex2", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ArrayLabelEnum, "ArrayIndex3", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ArrayLabelEnum, "ArrayIndex4", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ArrayLabelEnum, "ArrayIndex5", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ArrayLabelEnum, "ArrayIndex_MAX", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ArrayLabelEnum, "ArrayLabelEnum_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_PropertyEditorTestEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_PropertyEditorTestEnum = PyImport_AddModule("PropertyEditorTestEnum");
#else                                                                                     
	PyObject* new__module_PropertyEditorTestEnum = Py_InitModule3("PropertyEditorTestEnum", NULL, NULL);
#endif

	PyObject* new_dict_PropertyEditorTestEnum = PyModule_GetDict(new_module_PropertyEditorTestEnum);
	PyDict_SetItemString(new_dict_PropertyEditorTestEnum, "PropertyEditorTest_Enum1", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_PropertyEditorTestEnum, "PropertyEditorTest_Enum2", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_PropertyEditorTestEnum, "PropertyEditorTest_Enum3", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_PropertyEditorTestEnum, "PropertyEditorTest_Enum4", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_PropertyEditorTestEnum, "PropertyEditorTest_Enum5", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_PropertyEditorTestEnum, "PropertyEditorTest_Enum6", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_PropertyEditorTestEnum, "PropertyEditorTest_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ESheetAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESheetAxis = PyImport_AddModule("ESheetAxis");
#else                                                                                     
	PyObject* new__module_ESheetAxis = Py_InitModule3("ESheetAxis", NULL, NULL);
#endif

	PyObject* new_dict_ESheetAxis = PyModule_GetDict(new_module_ESheetAxis);
	PyDict_SetItemString(new_dict_ESheetAxis, "AX_Horizontal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESheetAxis, "AX_XAxis", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESheetAxis, "AX_YAxis", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESheetAxis, "AX_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EStructViewerDeveloperType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EStructViewerDeveloperType = PyImport_AddModule("EStructViewerDeveloperType");
#else                                                                                     
	PyObject* new__module_EStructViewerDeveloperType = Py_InitModule3("EStructViewerDeveloperType", NULL, NULL);
#endif

	PyObject* new_dict_EStructViewerDeveloperType = PyModule_GetDict(new_module_EStructViewerDeveloperType);
	PyDict_SetItemString(new_dict_EStructViewerDeveloperType, "SVDT_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EStructViewerDeveloperType, "SVDT_CurrentUser", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EStructViewerDeveloperType, "SVDT_All", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EStructViewerDeveloperType, "SVDT_Max", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EStructViewerDeveloperType, "SVDT_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ETexAlign()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETexAlign = PyImport_AddModule("ETexAlign");
#else                                                                                     
	PyObject* new__module_ETexAlign = Py_InitModule3("ETexAlign", NULL, NULL);
#endif

	PyObject* new_dict_ETexAlign = PyModule_GetDict(new_module_ETexAlign);
	PyDict_SetItemString(new_dict_ETexAlign, "TEXALIGN_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETexAlign, "TEXALIGN_Default", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETexAlign, "TEXALIGN_Box", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETexAlign, "TEXALIGN_Planar", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETexAlign, "TEXALIGN_Fit", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETexAlign, "TEXALIGN_PlanarAuto", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETexAlign, "TEXALIGN_PlanarWall", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ETexAlign, "TEXALIGN_PlanarFloor", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ETexAlign, "TEXALIGN_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_EThumbnailPrimType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EThumbnailPrimType = PyImport_AddModule("EThumbnailPrimType");
#else                                                                                     
	PyObject* new__module_EThumbnailPrimType = Py_InitModule3("EThumbnailPrimType", NULL, NULL);
#endif

	PyObject* new_dict_EThumbnailPrimType = PyModule_GetDict(new_module_EThumbnailPrimType);
	PyDict_SetItemString(new_dict_EThumbnailPrimType, "TPT_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EThumbnailPrimType, "TPT_Sphere", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EThumbnailPrimType, "TPT_Cube", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EThumbnailPrimType, "TPT_Plane", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EThumbnailPrimType, "TPT_Cylinder", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EThumbnailPrimType, "TPT_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EWriteDisallowedWarningState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWriteDisallowedWarningState = PyImport_AddModule("EWriteDisallowedWarningState");
#else                                                                                     
	PyObject* new__module_EWriteDisallowedWarningState = Py_InitModule3("EWriteDisallowedWarningState", NULL, NULL);
#endif

	PyObject* new_dict_EWriteDisallowedWarningState = PyModule_GetDict(new_module_EWriteDisallowedWarningState);
	PyDict_SetItemString(new_dict_EWriteDisallowedWarningState, "WDWS_PendingWarn", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWriteDisallowedWarningState, "WDWS_Warned", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWriteDisallowedWarningState, "WDWS_WarningUnnecessary", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EWriteDisallowedWarningState, "WDWS_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPackageNotifyState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPackageNotifyState = PyImport_AddModule("EPackageNotifyState");
#else                                                                                     
	PyObject* new__module_EPackageNotifyState = Py_InitModule3("EPackageNotifyState", NULL, NULL);
#endif

	PyObject* new_dict_EPackageNotifyState = PyModule_GetDict(new_module_EPackageNotifyState);
	PyDict_SetItemString(new_dict_EPackageNotifyState, "NS_Updating", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPackageNotifyState, "NS_BalloonPrompted", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPackageNotifyState, "NS_DialogPrompted", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPackageNotifyState, "NS_PendingPrompt", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPackageNotifyState, "NS_PendingWarning", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPackageNotifyState, "NS_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ELevelViewportType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELevelViewportType = PyImport_AddModule("ELevelViewportType");
#else                                                                                     
	PyObject* new__module_ELevelViewportType = Py_InitModule3("ELevelViewportType", NULL, NULL);
#endif

	PyObject* new_dict_ELevelViewportType = PyModule_GetDict(new_module_ELevelViewportType);
	PyDict_SetItemString(new_dict_ELevelViewportType, "LVT_OrthoXY", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELevelViewportType, "LVT_OrthoXZ", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELevelViewportType, "LVT_OrthoYZ", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELevelViewportType, "LVT_Perspective", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELevelViewportType, "LVT_OrthoFreelook", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELevelViewportType, "LVT_OrthoNegativeXY", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ELevelViewportType, "LVT_OrthoNegativeXZ", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ELevelViewportType, "LVT_OrthoNegativeYZ", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ELevelViewportType, "LVT_MAX", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ELevelViewportType, "LVT_None", Py_BuildValue("i", 255));

}
void unreal_export_uenum_EOrthoThumbnailDirection()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOrthoThumbnailDirection = PyImport_AddModule("EOrthoThumbnailDirection");
#else                                                                                     
	PyObject* new__module_EOrthoThumbnailDirection = Py_InitModule3("EOrthoThumbnailDirection", NULL, NULL);
#endif

	PyObject* new_dict_EOrthoThumbnailDirection = PyModule_GetDict(new_module_EOrthoThumbnailDirection);
	PyDict_SetItemString(new_dict_EOrthoThumbnailDirection, "Top", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOrthoThumbnailDirection, "Bottom", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOrthoThumbnailDirection, "Left", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EOrthoThumbnailDirection, "Right", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EOrthoThumbnailDirection, "Front", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EOrthoThumbnailDirection, "Back", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EOrthoThumbnailDirection, "EOrthoThumbnailDirection_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EFoliageScaling()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFoliageScaling = PyImport_AddModule("EFoliageScaling");
#else                                                                                     
	PyObject* new__module_EFoliageScaling = Py_InitModule3("EFoliageScaling", NULL, NULL);
#endif

	PyObject* new_dict_EFoliageScaling = PyModule_GetDict(new_module_EFoliageScaling);
	PyDict_SetItemString(new_dict_EFoliageScaling, "Uniform", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFoliageScaling, "Free", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFoliageScaling, "LockXY", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFoliageScaling, "LockXZ", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFoliageScaling, "LockYZ", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFoliageScaling, "EFoliageScaling_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EVertexColorMaskChannel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVertexColorMaskChannel = PyImport_AddModule("EVertexColorMaskChannel");
#else                                                                                     
	PyObject* new__module_EVertexColorMaskChannel = Py_InitModule3("EVertexColorMaskChannel", NULL, NULL);
#endif

	PyObject* new_dict_EVertexColorMaskChannel = PyModule_GetDict(new_module_EVertexColorMaskChannel);
	PyDict_SetItemString(new_dict_EVertexColorMaskChannel, "Red", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVertexColorMaskChannel, "Green", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVertexColorMaskChannel, "Blue", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVertexColorMaskChannel, "Alpha", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EVertexColorMaskChannel, "MAX_None", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EVertexColorMaskChannel, "EVertexColorMaskChannel_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_FoliageVertexColorMask()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_FoliageVertexColorMask = PyImport_AddModule("FoliageVertexColorMask");
#else                                                                                     
	PyObject* new__module_FoliageVertexColorMask = Py_InitModule3("FoliageVertexColorMask", NULL, NULL);
#endif

	PyObject* new_dict_FoliageVertexColorMask = PyModule_GetDict(new_module_FoliageVertexColorMask);
	PyDict_SetItemString(new_dict_FoliageVertexColorMask, "FOLIAGEVERTEXCOLORMASK_Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_FoliageVertexColorMask, "FOLIAGEVERTEXCOLORMASK_Red", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_FoliageVertexColorMask, "FOLIAGEVERTEXCOLORMASK_Green", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_FoliageVertexColorMask, "FOLIAGEVERTEXCOLORMASK_Blue", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_FoliageVertexColorMask, "FOLIAGEVERTEXCOLORMASK_Alpha", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_FoliageVertexColorMask, "FOLIAGEVERTEXCOLORMASK_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ESimulationQuery()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESimulationQuery = PyImport_AddModule("ESimulationQuery");
#else                                                                                     
	PyObject* new__module_ESimulationQuery = Py_InitModule3("ESimulationQuery", NULL, NULL);
#endif

	PyObject* new_dict_ESimulationQuery = PyModule_GetDict(new_module_ESimulationQuery);
	PyDict_SetItemString(new_dict_ESimulationQuery, "CollisionOverlap", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESimulationQuery, "ShadeOverlap", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESimulationQuery, "AnyOverlap", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESimulationQuery, "ESimulationQuery_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESimulationOverlap()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESimulationOverlap = PyImport_AddModule("ESimulationOverlap");
#else                                                                                     
	PyObject* new__module_ESimulationOverlap = Py_InitModule3("ESimulationOverlap", NULL, NULL);
#endif

	PyObject* new_dict_ESimulationOverlap = PyModule_GetDict(new_module_ESimulationOverlap);
	PyDict_SetItemString(new_dict_ESimulationOverlap, "CollisionOverlap", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESimulationOverlap, "ShadeOverlap", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESimulationOverlap, "None", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESimulationOverlap, "ESimulationOverlap_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDesiredImageFormat()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDesiredImageFormat = PyImport_AddModule("EDesiredImageFormat");
#else                                                                                     
	PyObject* new__module_EDesiredImageFormat = Py_InitModule3("EDesiredImageFormat", NULL, NULL);
#endif

	PyObject* new_dict_EDesiredImageFormat = PyModule_GetDict(new_module_EDesiredImageFormat);
	PyDict_SetItemString(new_dict_EDesiredImageFormat, "PNG", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDesiredImageFormat, "JPG", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDesiredImageFormat, "BMP", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDesiredImageFormat, "EXR", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDesiredImageFormat, "EDesiredImageFormat_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ELandscapeBlendMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeBlendMode = PyImport_AddModule("ELandscapeBlendMode");
#else                                                                                     
	PyObject* new__module_ELandscapeBlendMode = Py_InitModule3("ELandscapeBlendMode", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeBlendMode = PyModule_GetDict(new_module_ELandscapeBlendMode);
	PyDict_SetItemString(new_dict_ELandscapeBlendMode, "LSBM_AdditiveBlend", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeBlendMode, "LSBM_AlphaBlend", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeBlendMode, "LSBM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELandscapeSetupErrors()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeSetupErrors = PyImport_AddModule("ELandscapeSetupErrors");
#else                                                                                     
	PyObject* new__module_ELandscapeSetupErrors = Py_InitModule3("ELandscapeSetupErrors", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeSetupErrors = PyModule_GetDict(new_module_ELandscapeSetupErrors);
	PyDict_SetItemString(new_dict_ELandscapeSetupErrors, "LSE_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeSetupErrors, "LSE_NoLandscapeInfo", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeSetupErrors, "LSE_CollsionXY", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeSetupErrors, "LSE_NoLayerInfo", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELandscapeSetupErrors, "LSE_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ELandscapeClearMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeClearMode = PyImport_AddModule("ELandscapeClearMode");
#else                                                                                     
	PyObject* new__module_ELandscapeClearMode = Py_InitModule3("ELandscapeClearMode", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeClearMode = PyModule_GetDict(new_module_ELandscapeClearMode);
	PyDict_SetItemString(new_dict_ELandscapeClearMode, "Clear_Weightmap", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeClearMode, "Clear_Heightmap", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeClearMode, "Clear_All", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELandscapeClearMode, "Clear_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ELandscapeGizmoType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeGizmoType = PyImport_AddModule("ELandscapeGizmoType");
#else                                                                                     
	PyObject* new__module_ELandscapeGizmoType = Py_InitModule3("ELandscapeGizmoType", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeGizmoType = PyModule_GetDict(new_module_ELandscapeGizmoType);
	PyDict_SetItemString(new_dict_ELandscapeGizmoType, "LGT_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeGizmoType, "LGT_Height", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeGizmoType, "LGT_Weight", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeGizmoType, "LGT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EGrassScaling()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGrassScaling = PyImport_AddModule("EGrassScaling");
#else                                                                                     
	PyObject* new__module_EGrassScaling = Py_InitModule3("EGrassScaling", NULL, NULL);
#endif

	PyObject* new_dict_EGrassScaling = PyModule_GetDict(new_module_EGrassScaling);
	PyDict_SetItemString(new_dict_EGrassScaling, "Uniform", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGrassScaling, "Free", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGrassScaling, "LockXY", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGrassScaling, "EGrassScaling_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELandscapeLODFalloff()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeLODFalloff = PyImport_AddModule("ELandscapeLODFalloff");
#else                                                                                     
	PyObject* new__module_ELandscapeLODFalloff = Py_InitModule3("ELandscapeLODFalloff", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeLODFalloff = PyModule_GetDict(new_module_ELandscapeLODFalloff);
	PyDict_SetItemString(new_dict_ELandscapeLODFalloff, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeLODFalloff, "SquareRoot", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeLODFalloff, "ELandscapeLODFalloff_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELandscapeLayerDisplayMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeLayerDisplayMode = PyImport_AddModule("ELandscapeLayerDisplayMode");
#else                                                                                     
	PyObject* new__module_ELandscapeLayerDisplayMode = Py_InitModule3("ELandscapeLayerDisplayMode", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeLayerDisplayMode = PyModule_GetDict(new_module_ELandscapeLayerDisplayMode);
	PyDict_SetItemString(new_dict_ELandscapeLayerDisplayMode, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeLayerDisplayMode, "Alphabetical", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeLayerDisplayMode, "UserSpecific", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeLayerDisplayMode, "ELandscapeLayerDisplayMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELandscapeLayerPaintingRestriction()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeLayerPaintingRestriction = PyImport_AddModule("ELandscapeLayerPaintingRestriction");
#else                                                                                     
	PyObject* new__module_ELandscapeLayerPaintingRestriction = Py_InitModule3("ELandscapeLayerPaintingRestriction", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeLayerPaintingRestriction = PyModule_GetDict(new_module_ELandscapeLayerPaintingRestriction);
	PyDict_SetItemString(new_dict_ELandscapeLayerPaintingRestriction, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeLayerPaintingRestriction, "UseMaxLayers", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeLayerPaintingRestriction, "ExistingOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeLayerPaintingRestriction, "UseComponentWhitelist", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELandscapeLayerPaintingRestriction, "ELandscapeLayerPaintingRestriction_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ELandscapeImportAlphamapType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeImportAlphamapType = PyImport_AddModule("ELandscapeImportAlphamapType");
#else                                                                                     
	PyObject* new__module_ELandscapeImportAlphamapType = Py_InitModule3("ELandscapeImportAlphamapType", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeImportAlphamapType = PyModule_GetDict(new_module_ELandscapeImportAlphamapType);
	PyDict_SetItemString(new_dict_ELandscapeImportAlphamapType, "Additive", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeImportAlphamapType, "Layered", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeImportAlphamapType, "ELandscapeImportAlphamapType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_LandscapeSplineMeshOrientation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_LandscapeSplineMeshOrientation = PyImport_AddModule("LandscapeSplineMeshOrientation");
#else                                                                                     
	PyObject* new__module_LandscapeSplineMeshOrientation = Py_InitModule3("LandscapeSplineMeshOrientation", NULL, NULL);
#endif

	PyObject* new_dict_LandscapeSplineMeshOrientation = PyModule_GetDict(new_module_LandscapeSplineMeshOrientation);
	PyDict_SetItemString(new_dict_LandscapeSplineMeshOrientation, "LSMO_XUp", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_LandscapeSplineMeshOrientation, "LSMO_YUp", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_LandscapeSplineMeshOrientation, "LSMO_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELandscapeLayerBlendType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeLayerBlendType = PyImport_AddModule("ELandscapeLayerBlendType");
#else                                                                                     
	PyObject* new__module_ELandscapeLayerBlendType = Py_InitModule3("ELandscapeLayerBlendType", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeLayerBlendType = PyModule_GetDict(new_module_ELandscapeLayerBlendType);
	PyDict_SetItemString(new_dict_ELandscapeLayerBlendType, "LB_WeightBlend", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeLayerBlendType, "LB_AlphaBlend", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeLayerBlendType, "LB_HeightBlend", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeLayerBlendType, "LB_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELandscapeCustomizedCoordType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeCustomizedCoordType = PyImport_AddModule("ELandscapeCustomizedCoordType");
#else                                                                                     
	PyObject* new__module_ELandscapeCustomizedCoordType = Py_InitModule3("ELandscapeCustomizedCoordType", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeCustomizedCoordType = PyModule_GetDict(new_module_ELandscapeCustomizedCoordType);
	PyDict_SetItemString(new_dict_ELandscapeCustomizedCoordType, "LCCT_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeCustomizedCoordType, "LCCT_CustomUV0", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeCustomizedCoordType, "LCCT_CustomUV1", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeCustomizedCoordType, "LCCT_CustomUV2", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELandscapeCustomizedCoordType, "LCCT_WeightMapUV", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELandscapeCustomizedCoordType, "LCCT_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ETerrainCoordMappingType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETerrainCoordMappingType = PyImport_AddModule("ETerrainCoordMappingType");
#else                                                                                     
	PyObject* new__module_ETerrainCoordMappingType = Py_InitModule3("ETerrainCoordMappingType", NULL, NULL);
#endif

	PyObject* new_dict_ETerrainCoordMappingType = PyModule_GetDict(new_module_ETerrainCoordMappingType);
	PyDict_SetItemString(new_dict_ETerrainCoordMappingType, "TCMT_Auto", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETerrainCoordMappingType, "TCMT_XY", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETerrainCoordMappingType, "TCMT_XZ", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETerrainCoordMappingType, "TCMT_YZ", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETerrainCoordMappingType, "TCMT_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EAlphaBlendOption()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAlphaBlendOption = PyImport_AddModule("EAlphaBlendOption");
#else                                                                                     
	PyObject* new__module_EAlphaBlendOption = Py_InitModule3("EAlphaBlendOption", NULL, NULL);
#endif

	PyObject* new_dict_EAlphaBlendOption = PyModule_GetDict(new_module_EAlphaBlendOption);
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "Cubic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "HermiteCubic", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "Sinusoidal", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "QuadraticInOut", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "CubicInOut", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "QuarticInOut", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "QuinticInOut", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "CircularIn", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "CircularOut", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "CircularInOut", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "ExpIn", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "ExpOut", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "ExpInOut", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "Custom", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EAlphaBlendOption, "EAlphaBlendOption_MAX", Py_BuildValue("i", 15));

}
void unreal_export_uenum_EAnimGroupRole()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAnimGroupRole = PyImport_AddModule("EAnimGroupRole");
#else                                                                                     
	PyObject* new__module_EAnimGroupRole = Py_InitModule3("EAnimGroupRole", NULL, NULL);
#endif

	PyObject* new_dict_EAnimGroupRole = PyModule_GetDict(new_module_EAnimGroupRole);
	PyDict_SetItemString(new_dict_EAnimGroupRole, "CanBeLeader", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAnimGroupRole, "AlwaysFollower", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAnimGroupRole, "AlwaysLeader", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAnimGroupRole, "TransitionLeader", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAnimGroupRole, "TransitionFollower", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EAnimGroupRole, "EAnimGroupRole_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_AnimationKeyFormat()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_AnimationKeyFormat = PyImport_AddModule("AnimationKeyFormat");
#else                                                                                     
	PyObject* new__module_AnimationKeyFormat = Py_InitModule3("AnimationKeyFormat", NULL, NULL);
#endif

	PyObject* new_dict_AnimationKeyFormat = PyModule_GetDict(new_module_AnimationKeyFormat);
	PyDict_SetItemString(new_dict_AnimationKeyFormat, "AKF_ConstantKeyLerp", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_AnimationKeyFormat, "AKF_VariableKeyLerp", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_AnimationKeyFormat, "AKF_PerTrackCompression", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_AnimationKeyFormat, "AKF_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ERawCurveTrackTypes()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERawCurveTrackTypes = PyImport_AddModule("ERawCurveTrackTypes");
#else                                                                                     
	PyObject* new__module_ERawCurveTrackTypes = Py_InitModule3("ERawCurveTrackTypes", NULL, NULL);
#endif

	PyObject* new_dict_ERawCurveTrackTypes = PyModule_GetDict(new_module_ERawCurveTrackTypes);
	PyDict_SetItemString(new_dict_ERawCurveTrackTypes, "RCT_Float", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERawCurveTrackTypes, "RCT_Vector", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERawCurveTrackTypes, "RCT_Transform", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERawCurveTrackTypes, "RCT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAnimAssetCurveFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAnimAssetCurveFlags = PyImport_AddModule("EAnimAssetCurveFlags");
#else                                                                                     
	PyObject* new__module_EAnimAssetCurveFlags = Py_InitModule3("EAnimAssetCurveFlags", NULL, NULL);
#endif

	PyObject* new_dict_EAnimAssetCurveFlags = PyModule_GetDict(new_module_EAnimAssetCurveFlags);
	PyDict_SetItemString(new_dict_EAnimAssetCurveFlags, "AACF_DriveMorphTarget_DEPRECATED", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAnimAssetCurveFlags, "AACF_DriveAttribute_DEPRECATED", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAnimAssetCurveFlags, "AACF_Editable", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EAnimAssetCurveFlags, "AACF_DriveMaterial_DEPRECATED", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EAnimAssetCurveFlags, "AACF_Metadata", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EAnimAssetCurveFlags, "AACF_DriveTrack", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_EAnimAssetCurveFlags, "AACF_Disabled", Py_BuildValue("i", 64));
	PyDict_SetItemString(new_dict_EAnimAssetCurveFlags, "AACF_MAX", Py_BuildValue("i", 65));

}
void unreal_export_uenum_AnimationCompressionFormat()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_AnimationCompressionFormat = PyImport_AddModule("AnimationCompressionFormat");
#else                                                                                     
	PyObject* new__module_AnimationCompressionFormat = Py_InitModule3("AnimationCompressionFormat", NULL, NULL);
#endif

	PyObject* new_dict_AnimationCompressionFormat = PyModule_GetDict(new_module_AnimationCompressionFormat);
	PyDict_SetItemString(new_dict_AnimationCompressionFormat, "ACF_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_AnimationCompressionFormat, "ACF_Float96NoW", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_AnimationCompressionFormat, "ACF_Fixed48NoW", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_AnimationCompressionFormat, "ACF_IntervalFixed32NoW", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_AnimationCompressionFormat, "ACF_Fixed32NoW", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_AnimationCompressionFormat, "ACF_Float32NoW", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_AnimationCompressionFormat, "ACF_Identity", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_AnimationCompressionFormat, "ACF_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EAdditiveBasePoseType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAdditiveBasePoseType = PyImport_AddModule("EAdditiveBasePoseType");
#else                                                                                     
	PyObject* new__module_EAdditiveBasePoseType = Py_InitModule3("EAdditiveBasePoseType", NULL, NULL);
#endif

	PyObject* new_dict_EAdditiveBasePoseType = PyModule_GetDict(new_module_EAdditiveBasePoseType);
	PyDict_SetItemString(new_dict_EAdditiveBasePoseType, "ABPT_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAdditiveBasePoseType, "ABPT_RefPose", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAdditiveBasePoseType, "ABPT_AnimScaled", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAdditiveBasePoseType, "ABPT_AnimFrame", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAdditiveBasePoseType, "ABPT_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ERootMotionMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERootMotionMode = PyImport_AddModule("ERootMotionMode");
#else                                                                                     
	PyObject* new__module_ERootMotionMode = Py_InitModule3("ERootMotionMode", NULL, NULL);
#endif

	PyObject* new_dict_ERootMotionMode = PyModule_GetDict(new_module_ERootMotionMode);
	PyDict_SetItemString(new_dict_ERootMotionMode, "NoRootMotionExtraction", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERootMotionMode, "IgnoreRootMotion", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERootMotionMode, "RootMotionFromEverything", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERootMotionMode, "RootMotionFromMontagesOnly", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERootMotionMode, "ERootMotionMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ERootMotionRootLock()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERootMotionRootLock = PyImport_AddModule("ERootMotionRootLock");
#else                                                                                     
	PyObject* new__module_ERootMotionRootLock = Py_InitModule3("ERootMotionRootLock", NULL, NULL);
#endif

	PyObject* new_dict_ERootMotionRootLock = PyModule_GetDict(new_module_ERootMotionRootLock);
	PyDict_SetItemString(new_dict_ERootMotionRootLock, "RefPose", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERootMotionRootLock, "AnimFirstFrame", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERootMotionRootLock, "Zero", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERootMotionRootLock, "ERootMotionRootLock_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMontagePlayReturnType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMontagePlayReturnType = PyImport_AddModule("EMontagePlayReturnType");
#else                                                                                     
	PyObject* new__module_EMontagePlayReturnType = Py_InitModule3("EMontagePlayReturnType", NULL, NULL);
#endif

	PyObject* new_dict_EMontagePlayReturnType = PyModule_GetDict(new_module_EMontagePlayReturnType);
	PyDict_SetItemString(new_dict_EMontagePlayReturnType, "MontageLength", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMontagePlayReturnType, "Duration", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMontagePlayReturnType, "EMontagePlayReturnType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EDrawDebugItemType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDrawDebugItemType = PyImport_AddModule("EDrawDebugItemType");
#else                                                                                     
	PyObject* new__module_EDrawDebugItemType = Py_InitModule3("EDrawDebugItemType", NULL, NULL);
#endif

	PyObject* new_dict_EDrawDebugItemType = PyModule_GetDict(new_module_EDrawDebugItemType);
	PyDict_SetItemString(new_dict_EDrawDebugItemType, "DirectionalArrow", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDrawDebugItemType, "Sphere", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDrawDebugItemType, "Line", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDrawDebugItemType, "OnScreenMessage", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDrawDebugItemType, "CoordinateSystem", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EDrawDebugItemType, "EDrawDebugItemType_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EAnimLinkMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAnimLinkMethod = PyImport_AddModule("EAnimLinkMethod");
#else                                                                                     
	PyObject* new__module_EAnimLinkMethod = Py_InitModule3("EAnimLinkMethod", NULL, NULL);
#endif

	PyObject* new_dict_EAnimLinkMethod = PyModule_GetDict(new_module_EAnimLinkMethod);
	PyDict_SetItemString(new_dict_EAnimLinkMethod, "Absolute", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAnimLinkMethod, "Relative", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAnimLinkMethod, "Proportional", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAnimLinkMethod, "EAnimLinkMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMontageSubStepResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMontageSubStepResult = PyImport_AddModule("EMontageSubStepResult");
#else                                                                                     
	PyObject* new__module_EMontageSubStepResult = Py_InitModule3("EMontageSubStepResult", NULL, NULL);
#endif

	PyObject* new_dict_EMontageSubStepResult = PyModule_GetDict(new_module_EMontageSubStepResult);
	PyDict_SetItemString(new_dict_EMontageSubStepResult, "Moved", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMontageSubStepResult, "NotMoved", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMontageSubStepResult, "InvalidSection", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMontageSubStepResult, "InvalidMontage", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMontageSubStepResult, "EMontageSubStepResult_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EAnimNotifyEventType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAnimNotifyEventType = PyImport_AddModule("EAnimNotifyEventType");
#else                                                                                     
	PyObject* new__module_EAnimNotifyEventType = Py_InitModule3("EAnimNotifyEventType", NULL, NULL);
#endif

	PyObject* new_dict_EAnimNotifyEventType = PyModule_GetDict(new_module_EAnimNotifyEventType);
	PyDict_SetItemString(new_dict_EAnimNotifyEventType, "Begin", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAnimNotifyEventType, "End", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAnimNotifyEventType, "EAnimNotifyEventType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EEvaluatorMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEvaluatorMode = PyImport_AddModule("EEvaluatorMode");
#else                                                                                     
	PyObject* new__module_EEvaluatorMode = Py_InitModule3("EEvaluatorMode", NULL, NULL);
#endif

	PyObject* new_dict_EEvaluatorMode = PyModule_GetDict(new_module_EEvaluatorMode);
	PyDict_SetItemString(new_dict_EEvaluatorMode, "EM_Standard", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEvaluatorMode, "EM_Freeze", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEvaluatorMode, "EM_DelayedFreeze", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEvaluatorMode, "EM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEvaluatorDataSource()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEvaluatorDataSource = PyImport_AddModule("EEvaluatorDataSource");
#else                                                                                     
	PyObject* new__module_EEvaluatorDataSource = Py_InitModule3("EEvaluatorDataSource", NULL, NULL);
#endif

	PyObject* new_dict_EEvaluatorDataSource = PyModule_GetDict(new_module_EEvaluatorDataSource);
	PyDict_SetItemString(new_dict_EEvaluatorDataSource, "EDS_SourcePose", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEvaluatorDataSource, "EDS_DestinationPose", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEvaluatorDataSource, "EDS_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ECopyType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECopyType = PyImport_AddModule("ECopyType");
#else                                                                                     
	PyObject* new__module_ECopyType = Py_InitModule3("ECopyType", NULL, NULL);
#endif

	PyObject* new_dict_ECopyType = PyModule_GetDict(new_module_ECopyType);
	PyDict_SetItemString(new_dict_ECopyType, "MemCopy", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECopyType, "BoolProperty", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECopyType, "StructProperty", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECopyType, "ObjectProperty", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECopyType, "ECopyType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EPostCopyOperation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPostCopyOperation = PyImport_AddModule("EPostCopyOperation");
#else                                                                                     
	PyObject* new__module_EPostCopyOperation = Py_InitModule3("EPostCopyOperation", NULL, NULL);
#endif

	PyObject* new_dict_EPostCopyOperation = PyModule_GetDict(new_module_EPostCopyOperation);
	PyDict_SetItemString(new_dict_EPostCopyOperation, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPostCopyOperation, "LogicalNegateBool", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPostCopyOperation, "EPostCopyOperation_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EPinHidingMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPinHidingMode = PyImport_AddModule("EPinHidingMode");
#else                                                                                     
	PyObject* new__module_EPinHidingMode = Py_InitModule3("EPinHidingMode", NULL, NULL);
#endif

	PyObject* new_dict_EPinHidingMode = PyModule_GetDict(new_module_EPinHidingMode);
	PyDict_SetItemString(new_dict_EPinHidingMode, "NeverAsPin", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPinHidingMode, "PinHiddenByDefault", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPinHidingMode, "PinShownByDefault", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPinHidingMode, "AlwaysAsPin", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPinHidingMode, "EPinHidingMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_AnimPhysCollisionType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_AnimPhysCollisionType = PyImport_AddModule("AnimPhysCollisionType");
#else                                                                                     
	PyObject* new__module_AnimPhysCollisionType = Py_InitModule3("AnimPhysCollisionType", NULL, NULL);
#endif

	PyObject* new_dict_AnimPhysCollisionType = PyModule_GetDict(new_module_AnimPhysCollisionType);
	PyDict_SetItemString(new_dict_AnimPhysCollisionType, "CoM", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_AnimPhysCollisionType, "CustomSphere", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_AnimPhysCollisionType, "InnerSphere", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_AnimPhysCollisionType, "OuterSphere", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_AnimPhysCollisionType, "AnimPhysCollisionType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_AnimPhysTwistAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_AnimPhysTwistAxis = PyImport_AddModule("AnimPhysTwistAxis");
#else                                                                                     
	PyObject* new__module_AnimPhysTwistAxis = Py_InitModule3("AnimPhysTwistAxis", NULL, NULL);
#endif

	PyObject* new_dict_AnimPhysTwistAxis = PyModule_GetDict(new_module_AnimPhysTwistAxis);
	PyDict_SetItemString(new_dict_AnimPhysTwistAxis, "AxisX", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_AnimPhysTwistAxis, "AxisY", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_AnimPhysTwistAxis, "AxisZ", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_AnimPhysTwistAxis, "AnimPhysTwistAxis_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETypeAdvanceAnim()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETypeAdvanceAnim = PyImport_AddModule("ETypeAdvanceAnim");
#else                                                                                     
	PyObject* new__module_ETypeAdvanceAnim = Py_InitModule3("ETypeAdvanceAnim", NULL, NULL);
#endif

	PyObject* new_dict_ETypeAdvanceAnim = PyModule_GetDict(new_module_ETypeAdvanceAnim);
	PyDict_SetItemString(new_dict_ETypeAdvanceAnim, "ETAA_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETypeAdvanceAnim, "ETAA_Finished", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETypeAdvanceAnim, "ETAA_Looped", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETypeAdvanceAnim, "ETAA_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETransitionLogicType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETransitionLogicType = PyImport_AddModule("ETransitionLogicType");
#else                                                                                     
	PyObject* new__module_ETransitionLogicType = Py_InitModule3("ETransitionLogicType", NULL, NULL);
#endif

	PyObject* new_dict_ETransitionLogicType = PyModule_GetDict(new_module_ETransitionLogicType);
	PyDict_SetItemString(new_dict_ETransitionLogicType, "TLT_StandardBlend", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETransitionLogicType, "TLT_Custom", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETransitionLogicType, "TLT_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETransitionBlendMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETransitionBlendMode = PyImport_AddModule("ETransitionBlendMode");
#else                                                                                     
	PyObject* new__module_ETransitionBlendMode = Py_InitModule3("ETransitionBlendMode", NULL, NULL);
#endif

	PyObject* new_dict_ETransitionBlendMode = PyModule_GetDict(new_module_ETransitionBlendMode);
	PyDict_SetItemString(new_dict_ETransitionBlendMode, "TBM_Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETransitionBlendMode, "TBM_Cubic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETransitionBlendMode, "TBM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EComponentType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EComponentType = PyImport_AddModule("EComponentType");
#else                                                                                     
	PyObject* new__module_EComponentType = Py_InitModule3("EComponentType", NULL, NULL);
#endif

	PyObject* new_dict_EComponentType = PyModule_GetDict(new_module_EComponentType);
	PyDict_SetItemString(new_dict_EComponentType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EComponentType, "TranslationX", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EComponentType, "TranslationY", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EComponentType, "TranslationZ", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EComponentType, "RotationX", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EComponentType, "RotationY", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EComponentType, "RotationZ", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EComponentType, "Scale", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EComponentType, "ScaleX", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EComponentType, "ScaleY", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EComponentType, "ScaleZ", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EComponentType, "EComponentType_MAX", Py_BuildValue("i", 11));

}
void unreal_export_uenum_EAxisOption()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAxisOption = PyImport_AddModule("EAxisOption");
#else                                                                                     
	PyObject* new__module_EAxisOption = Py_InitModule3("EAxisOption", NULL, NULL);
#endif

	PyObject* new_dict_EAxisOption = PyModule_GetDict(new_module_EAxisOption);
	PyDict_SetItemString(new_dict_EAxisOption, "X", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAxisOption, "Y", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAxisOption, "Z", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAxisOption, "X_Neg", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAxisOption, "Y_Neg", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EAxisOption, "Z_Neg", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EAxisOption, "Custom", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EAxisOption, "EAxisOption_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EAnimInterpolationType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAnimInterpolationType = PyImport_AddModule("EAnimInterpolationType");
#else                                                                                     
	PyObject* new__module_EAnimInterpolationType = Py_InitModule3("EAnimInterpolationType", NULL, NULL);
#endif

	PyObject* new_dict_EAnimInterpolationType = PyModule_GetDict(new_module_EAnimInterpolationType);
	PyDict_SetItemString(new_dict_EAnimInterpolationType, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAnimInterpolationType, "Step", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAnimInterpolationType, "EAnimInterpolationType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ECurveBlendOption()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECurveBlendOption = PyImport_AddModule("ECurveBlendOption");
#else                                                                                     
	PyObject* new__module_ECurveBlendOption = Py_InitModule3("ECurveBlendOption", NULL, NULL);
#endif

	PyObject* new_dict_ECurveBlendOption = PyModule_GetDict(new_module_ECurveBlendOption);
	PyDict_SetItemString(new_dict_ECurveBlendOption, "MaxWeight", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECurveBlendOption, "NormalizeByWeight", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECurveBlendOption, "BlendByWeight", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECurveBlendOption, "ECurveBlendOption_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAdditiveAnimationType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAdditiveAnimationType = PyImport_AddModule("EAdditiveAnimationType");
#else                                                                                     
	PyObject* new__module_EAdditiveAnimationType = Py_InitModule3("EAdditiveAnimationType", NULL, NULL);
#endif

	PyObject* new_dict_EAdditiveAnimationType = PyModule_GetDict(new_module_EAdditiveAnimationType);
	PyDict_SetItemString(new_dict_EAdditiveAnimationType, "AAT_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAdditiveAnimationType, "AAT_LocalSpaceBase", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAdditiveAnimationType, "AAT_RotationOffsetMeshSpace", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAdditiveAnimationType, "AAT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ENotifyFilterType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENotifyFilterType = PyImport_AddModule("ENotifyFilterType");
#else                                                                                     
	PyObject* new__module_ENotifyFilterType = Py_InitModule3("ENotifyFilterType", NULL, NULL);
#endif

	PyObject* new_dict_ENotifyFilterType = PyModule_GetDict(new_module_ENotifyFilterType);
	PyDict_SetItemString(new_dict_ENotifyFilterType, "NoFiltering", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENotifyFilterType, "LOD", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENotifyFilterType, "ENotifyFilterType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EMontageNotifyTickType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMontageNotifyTickType = PyImport_AddModule("EMontageNotifyTickType");
#else                                                                                     
	PyObject* new__module_EMontageNotifyTickType = Py_InitModule3("EMontageNotifyTickType", NULL, NULL);
#endif

	PyObject* new_dict_EMontageNotifyTickType = PyModule_GetDict(new_module_EMontageNotifyTickType);
	PyDict_SetItemString(new_dict_EMontageNotifyTickType, "Queued", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMontageNotifyTickType, "BranchingPoint", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMontageNotifyTickType, "EMontageNotifyTickType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EBoneRotationSource()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBoneRotationSource = PyImport_AddModule("EBoneRotationSource");
#else                                                                                     
	PyObject* new__module_EBoneRotationSource = Py_InitModule3("EBoneRotationSource", NULL, NULL);
#endif

	PyObject* new_dict_EBoneRotationSource = PyModule_GetDict(new_module_EBoneRotationSource);
	PyDict_SetItemString(new_dict_EBoneRotationSource, "BRS_KeepComponentSpaceRotation", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBoneRotationSource, "BRS_KeepLocalSpaceRotation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBoneRotationSource, "BRS_CopyFromTarget", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBoneRotationSource, "BRS_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EBoneControlSpace()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBoneControlSpace = PyImport_AddModule("EBoneControlSpace");
#else                                                                                     
	PyObject* new__module_EBoneControlSpace = Py_InitModule3("EBoneControlSpace", NULL, NULL);
#endif

	PyObject* new_dict_EBoneControlSpace = PyModule_GetDict(new_module_EBoneControlSpace);
	PyDict_SetItemString(new_dict_EBoneControlSpace, "BCS_WorldSpace", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBoneControlSpace, "BCS_ComponentSpace", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBoneControlSpace, "BCS_ParentBoneSpace", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBoneControlSpace, "BCS_BoneSpace", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EBoneControlSpace, "BCS_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EBoneAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBoneAxis = PyImport_AddModule("EBoneAxis");
#else                                                                                     
	PyObject* new__module_EBoneAxis = Py_InitModule3("EBoneAxis", NULL, NULL);
#endif

	PyObject* new_dict_EBoneAxis = PyModule_GetDict(new_module_EBoneAxis);
	PyDict_SetItemString(new_dict_EBoneAxis, "BA_X", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBoneAxis, "BA_Y", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBoneAxis, "BA_Z", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBoneAxis, "BA_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPrimaryAssetCookRule()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPrimaryAssetCookRule = PyImport_AddModule("EPrimaryAssetCookRule");
#else                                                                                     
	PyObject* new__module_EPrimaryAssetCookRule = Py_InitModule3("EPrimaryAssetCookRule", NULL, NULL);
#endif

	PyObject* new_dict_EPrimaryAssetCookRule = PyModule_GetDict(new_module_EPrimaryAssetCookRule);
	PyDict_SetItemString(new_dict_EPrimaryAssetCookRule, "Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPrimaryAssetCookRule, "NeverCook", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPrimaryAssetCookRule, "DevelopmentCook", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPrimaryAssetCookRule, "DevelopmentAlwaysCook", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPrimaryAssetCookRule, "AlwaysCook", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPrimaryAssetCookRule, "EPrimaryAssetCookRule_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EAttenuationShape()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAttenuationShape = PyImport_AddModule("EAttenuationShape");
#else                                                                                     
	PyObject* new__module_EAttenuationShape = Py_InitModule3("EAttenuationShape", NULL, NULL);
#endif

	PyObject* new_dict_EAttenuationShape = PyModule_GetDict(new_module_EAttenuationShape);
	PyDict_SetItemString(new_dict_EAttenuationShape, "Sphere", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAttenuationShape, "Capsule", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAttenuationShape, "Box", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAttenuationShape, "Cone", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAttenuationShape, "EAttenuationShape_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EAttenuationDistanceModel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAttenuationDistanceModel = PyImport_AddModule("EAttenuationDistanceModel");
#else                                                                                     
	PyObject* new__module_EAttenuationDistanceModel = Py_InitModule3("EAttenuationDistanceModel", NULL, NULL);
#endif

	PyObject* new_dict_EAttenuationDistanceModel = PyModule_GetDict(new_module_EAttenuationDistanceModel);
	PyDict_SetItemString(new_dict_EAttenuationDistanceModel, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAttenuationDistanceModel, "Logarithmic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAttenuationDistanceModel, "Inverse", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAttenuationDistanceModel, "LogReverse", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAttenuationDistanceModel, "NaturalSound", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EAttenuationDistanceModel, "Custom", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EAttenuationDistanceModel, "EAttenuationDistanceModel_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EMonoChannelUpmixMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMonoChannelUpmixMethod = PyImport_AddModule("EMonoChannelUpmixMethod");
#else                                                                                     
	PyObject* new__module_EMonoChannelUpmixMethod = Py_InitModule3("EMonoChannelUpmixMethod", NULL, NULL);
#endif

	PyObject* new_dict_EMonoChannelUpmixMethod = PyModule_GetDict(new_module_EMonoChannelUpmixMethod);
	PyDict_SetItemString(new_dict_EMonoChannelUpmixMethod, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMonoChannelUpmixMethod, "EqualPower", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMonoChannelUpmixMethod, "FullVolume", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMonoChannelUpmixMethod, "EMonoChannelUpmixMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPanningMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPanningMethod = PyImport_AddModule("EPanningMethod");
#else                                                                                     
	PyObject* new__module_EPanningMethod = Py_InitModule3("EPanningMethod", NULL, NULL);
#endif

	PyObject* new_dict_EPanningMethod = PyModule_GetDict(new_module_EPanningMethod);
	PyDict_SetItemString(new_dict_EPanningMethod, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPanningMethod, "EqualPower", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPanningMethod, "EPanningMethod_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EVoiceSampleRate()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVoiceSampleRate = PyImport_AddModule("EVoiceSampleRate");
#else                                                                                     
	PyObject* new__module_EVoiceSampleRate = Py_InitModule3("EVoiceSampleRate", NULL, NULL);
#endif

	PyObject* new_dict_EVoiceSampleRate = PyModule_GetDict(new_module_EVoiceSampleRate);
	PyDict_SetItemString(new_dict_EVoiceSampleRate, "Low16000Hz", Py_BuildValue("i", 16000));
	PyDict_SetItemString(new_dict_EVoiceSampleRate, "Normal24000Hz", Py_BuildValue("i", 24000));
	PyDict_SetItemString(new_dict_EVoiceSampleRate, "EVoiceSampleRate_MAX", Py_BuildValue("i", 24001));

}
void unreal_export_uenum_ReverbPreset()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ReverbPreset = PyImport_AddModule("ReverbPreset");
#else                                                                                     
	PyObject* new__module_ReverbPreset = Py_InitModule3("ReverbPreset", NULL, NULL);
#endif

	PyObject* new_dict_ReverbPreset = PyModule_GetDict(new_module_ReverbPreset);
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_Bathroom", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_StoneRoom", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_Auditorium", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_ConcertHall", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_Cave", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_Hallway", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_StoneCorridor", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_Alley", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_Forest", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_City", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_Mountains", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_Quarry", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_Plain", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_ParkingLot", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_SewerPipe", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_Underwater", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_SmallRoom", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_MediumRoom", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_LargeRoom", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_MediumHall", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_LargeHall", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_Plate", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_ReverbPreset, "REVERB_MAX", Py_BuildValue("i", 23));

}
void unreal_export_uenum_EBlendableLocation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBlendableLocation = PyImport_AddModule("EBlendableLocation");
#else                                                                                     
	PyObject* new__module_EBlendableLocation = Py_InitModule3("EBlendableLocation", NULL, NULL);
#endif

	PyObject* new_dict_EBlendableLocation = PyModule_GetDict(new_module_EBlendableLocation);
	PyDict_SetItemString(new_dict_EBlendableLocation, "BL_AfterTonemapping", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBlendableLocation, "BL_BeforeTonemapping", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBlendableLocation, "BL_BeforeTranslucency", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBlendableLocation, "BL_ReplacingTonemapper", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EBlendableLocation, "BL_SSRInput", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EBlendableLocation, "BL_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ENotifyTriggerMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENotifyTriggerMode = PyImport_AddModule("ENotifyTriggerMode");
#else                                                                                     
	PyObject* new__module_ENotifyTriggerMode = Py_InitModule3("ENotifyTriggerMode", NULL, NULL);
#endif

	PyObject* new_dict_ENotifyTriggerMode = PyModule_GetDict(new_module_ENotifyTriggerMode);
	PyDict_SetItemString(new_dict_ENotifyTriggerMode, "AllAnimations", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENotifyTriggerMode, "HighestWeightedAnimation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENotifyTriggerMode, "None", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENotifyTriggerMode, "ENotifyTriggerMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EBlendSpaceAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBlendSpaceAxis = PyImport_AddModule("EBlendSpaceAxis");
#else                                                                                     
	PyObject* new__module_EBlendSpaceAxis = Py_InitModule3("EBlendSpaceAxis", NULL, NULL);
#endif

	PyObject* new_dict_EBlendSpaceAxis = PyModule_GetDict(new_module_EBlendSpaceAxis);
	PyDict_SetItemString(new_dict_EBlendSpaceAxis, "BSA_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBlendSpaceAxis, "BSA_X", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBlendSpaceAxis, "BSA_Y", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBlendSpaceAxis, "BSA_Max", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EBlendSpaceAxis, "BSA_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EBlueprintNativizationFlag()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBlueprintNativizationFlag = PyImport_AddModule("EBlueprintNativizationFlag");
#else                                                                                     
	PyObject* new__module_EBlueprintNativizationFlag = Py_InitModule3("EBlueprintNativizationFlag", NULL, NULL);
#endif

	PyObject* new_dict_EBlueprintNativizationFlag = PyModule_GetDict(new_module_EBlueprintNativizationFlag);
	PyDict_SetItemString(new_dict_EBlueprintNativizationFlag, "Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBlueprintNativizationFlag, "Dependency", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBlueprintNativizationFlag, "ExplicitlyEnabled", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBlueprintNativizationFlag, "EBlueprintNativizationFlag_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EBlueprintCompileMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBlueprintCompileMode = PyImport_AddModule("EBlueprintCompileMode");
#else                                                                                     
	PyObject* new__module_EBlueprintCompileMode = Py_InitModule3("EBlueprintCompileMode", NULL, NULL);
#endif

	PyObject* new_dict_EBlueprintCompileMode = PyModule_GetDict(new_module_EBlueprintCompileMode);
	PyDict_SetItemString(new_dict_EBlueprintCompileMode, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBlueprintCompileMode, "Development", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBlueprintCompileMode, "FinalRelease", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBlueprintCompileMode, "EBlueprintCompileMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EBlueprintType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBlueprintType = PyImport_AddModule("EBlueprintType");
#else                                                                                     
	PyObject* new__module_EBlueprintType = Py_InitModule3("EBlueprintType", NULL, NULL);
#endif

	PyObject* new_dict_EBlueprintType = PyModule_GetDict(new_module_EBlueprintType);
	PyDict_SetItemString(new_dict_EBlueprintType, "BPTYPE_Normal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBlueprintType, "BPTYPE_Const", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBlueprintType, "BPTYPE_MacroLibrary", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBlueprintType, "BPTYPE_Interface", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EBlueprintType, "BPTYPE_LevelScript", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EBlueprintType, "BPTYPE_FunctionLibrary", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EBlueprintType, "BPTYPE_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EBlueprintStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBlueprintStatus = PyImport_AddModule("EBlueprintStatus");
#else                                                                                     
	PyObject* new__module_EBlueprintStatus = Py_InitModule3("EBlueprintStatus", NULL, NULL);
#endif

	PyObject* new_dict_EBlueprintStatus = PyModule_GetDict(new_module_EBlueprintStatus);
	PyDict_SetItemString(new_dict_EBlueprintStatus, "BS_Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBlueprintStatus, "BS_Dirty", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBlueprintStatus, "BS_Error", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBlueprintStatus, "BS_UpToDate", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EBlueprintStatus, "BS_BeingCreated", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EBlueprintStatus, "BS_UpToDateWithWarnings", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EBlueprintStatus, "BS_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EDOFMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDOFMode = PyImport_AddModule("EDOFMode");
#else                                                                                     
	PyObject* new__module_EDOFMode = Py_InitModule3("EDOFMode", NULL, NULL);
#endif

	PyObject* new_dict_EDOFMode = PyModule_GetDict(new_module_EDOFMode);
	PyDict_SetItemString(new_dict_EDOFMode, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDOFMode, "SixDOF", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDOFMode, "YZPlane", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDOFMode, "XZPlane", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDOFMode, "XYPlane", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EDOFMode, "CustomPlane", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EDOFMode, "None", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EDOFMode, "EDOFMode_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EBodyCollisionResponse()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBodyCollisionResponse = PyImport_AddModule("EBodyCollisionResponse");
#else                                                                                     
	PyObject* new__module_EBodyCollisionResponse = Py_InitModule3("EBodyCollisionResponse", NULL, NULL);
#endif

	PyObject* new_dict_EBodyCollisionResponse = PyModule_GetDict(new_module_EBodyCollisionResponse);
	PyDict_SetItemString(new_dict_EBodyCollisionResponse, "BodyCollision_Enabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBodyCollisionResponse, "BodyCollision_Disabled", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBodyCollisionResponse, "BodyCollision_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EPhysicsType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPhysicsType = PyImport_AddModule("EPhysicsType");
#else                                                                                     
	PyObject* new__module_EPhysicsType = Py_InitModule3("EPhysicsType", NULL, NULL);
#endif

	PyObject* new_dict_EPhysicsType = PyModule_GetDict(new_module_EPhysicsType);
	PyDict_SetItemString(new_dict_EPhysicsType, "PhysType_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPhysicsType, "PhysType_Kinematic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPhysicsType, "PhysType_Simulated", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPhysicsType, "PhysType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ECollisionTraceFlag()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECollisionTraceFlag = PyImport_AddModule("ECollisionTraceFlag");
#else                                                                                     
	PyObject* new__module_ECollisionTraceFlag = Py_InitModule3("ECollisionTraceFlag", NULL, NULL);
#endif

	PyObject* new_dict_ECollisionTraceFlag = PyModule_GetDict(new_module_ECollisionTraceFlag);
	PyDict_SetItemString(new_dict_ECollisionTraceFlag, "CTF_UseDefault", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECollisionTraceFlag, "CTF_UseSimpleAndComplex", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECollisionTraceFlag, "CTF_UseSimpleAsComplex", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECollisionTraceFlag, "CTF_UseComplexAsSimple", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECollisionTraceFlag, "CTF_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EBrushType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBrushType = PyImport_AddModule("EBrushType");
#else                                                                                     
	PyObject* new__module_EBrushType = Py_InitModule3("EBrushType", NULL, NULL);
#endif

	PyObject* new_dict_EBrushType = PyModule_GetDict(new_module_EBrushType);
	PyDict_SetItemString(new_dict_EBrushType, "Brush_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBrushType, "Brush_Add", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBrushType, "Brush_Subtract", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBrushType, "Brush_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ECsgOper()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECsgOper = PyImport_AddModule("ECsgOper");
#else                                                                                     
	PyObject* new__module_ECsgOper = Py_InitModule3("ECsgOper", NULL, NULL);
#endif

	PyObject* new_dict_ECsgOper = PyModule_GetDict(new_module_ECsgOper);
	PyDict_SetItemString(new_dict_ECsgOper, "CSG_Active", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECsgOper, "CSG_Add", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECsgOper, "CSG_Subtract", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECsgOper, "CSG_Intersect", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECsgOper, "CSG_Deintersect", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ECsgOper, "CSG_None", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ECsgOper, "CSG_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EInitialOscillatorOffset()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EInitialOscillatorOffset = PyImport_AddModule("EInitialOscillatorOffset");
#else                                                                                     
	PyObject* new__module_EInitialOscillatorOffset = Py_InitModule3("EInitialOscillatorOffset", NULL, NULL);
#endif

	PyObject* new_dict_EInitialOscillatorOffset = PyModule_GetDict(new_module_EInitialOscillatorOffset);
	PyDict_SetItemString(new_dict_EInitialOscillatorOffset, "EOO_OffsetRandom", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EInitialOscillatorOffset, "EOO_OffsetZero", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EInitialOscillatorOffset, "EOO_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EOscillatorWaveform()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOscillatorWaveform = PyImport_AddModule("EOscillatorWaveform");
#else                                                                                     
	PyObject* new__module_EOscillatorWaveform = Py_InitModule3("EOscillatorWaveform", NULL, NULL);
#endif

	PyObject* new_dict_EOscillatorWaveform = PyModule_GetDict(new_module_EOscillatorWaveform);
	PyDict_SetItemString(new_dict_EOscillatorWaveform, "SineWave", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOscillatorWaveform, "PerlinNoise", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOscillatorWaveform, "EOscillatorWaveform_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ECameraAlphaBlendMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECameraAlphaBlendMode = PyImport_AddModule("ECameraAlphaBlendMode");
#else                                                                                     
	PyObject* new__module_ECameraAlphaBlendMode = Py_InitModule3("ECameraAlphaBlendMode", NULL, NULL);
#endif

	PyObject* new_dict_ECameraAlphaBlendMode = PyModule_GetDict(new_module_ECameraAlphaBlendMode);
	PyDict_SetItemString(new_dict_ECameraAlphaBlendMode, "CABM_Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECameraAlphaBlendMode, "CABM_Cubic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECameraAlphaBlendMode, "CABM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ECameraAnimPlaySpace()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECameraAnimPlaySpace = PyImport_AddModule("ECameraAnimPlaySpace");
#else                                                                                     
	PyObject* new__module_ECameraAnimPlaySpace = Py_InitModule3("ECameraAnimPlaySpace", NULL, NULL);
#endif

	PyObject* new_dict_ECameraAnimPlaySpace = PyModule_GetDict(new_module_ECameraAnimPlaySpace);
	PyDict_SetItemString(new_dict_ECameraAnimPlaySpace, "CameraLocal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECameraAnimPlaySpace, "World", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECameraAnimPlaySpace, "UserDefined", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECameraAnimPlaySpace, "ECameraAnimPlaySpace_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ECameraProjectionMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECameraProjectionMode = PyImport_AddModule("ECameraProjectionMode");
#else                                                                                     
	PyObject* new__module_ECameraProjectionMode = Py_InitModule3("ECameraProjectionMode", NULL, NULL);
#endif

	PyObject* new_dict_ECameraProjectionMode = PyModule_GetDict(new_module_ECameraProjectionMode);
	PyDict_SetItemString(new_dict_ECameraProjectionMode, "Perspective", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECameraProjectionMode, "Orthographic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECameraProjectionMode, "ECameraProjectionMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ECloudStorageDelegate()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECloudStorageDelegate = PyImport_AddModule("ECloudStorageDelegate");
#else                                                                                     
	PyObject* new__module_ECloudStorageDelegate = Py_InitModule3("ECloudStorageDelegate", NULL, NULL);
#endif

	PyObject* new_dict_ECloudStorageDelegate = PyModule_GetDict(new_module_ECloudStorageDelegate);
	PyDict_SetItemString(new_dict_ECloudStorageDelegate, "CSD_KeyValueReadComplete", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECloudStorageDelegate, "CSD_KeyValueWriteComplete", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECloudStorageDelegate, "CSD_ValueChanged", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECloudStorageDelegate, "CSD_DocumentQueryComplete", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECloudStorageDelegate, "CSD_DocumentReadComplete", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ECloudStorageDelegate, "CSD_DocumentWriteComplete", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ECloudStorageDelegate, "CSD_DocumentConflictDetected", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ECloudStorageDelegate, "CSD_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EAngularDriveMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAngularDriveMode = PyImport_AddModule("EAngularDriveMode");
#else                                                                                     
	PyObject* new__module_EAngularDriveMode = Py_InitModule3("EAngularDriveMode", NULL, NULL);
#endif

	PyObject* new_dict_EAngularDriveMode = PyModule_GetDict(new_module_EAngularDriveMode);
	PyDict_SetItemString(new_dict_EAngularDriveMode, "SLERP", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAngularDriveMode, "TwistAndSwing", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAngularDriveMode, "EAngularDriveMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELinearConstraintMotion()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELinearConstraintMotion = PyImport_AddModule("ELinearConstraintMotion");
#else                                                                                     
	PyObject* new__module_ELinearConstraintMotion = Py_InitModule3("ELinearConstraintMotion", NULL, NULL);
#endif

	PyObject* new_dict_ELinearConstraintMotion = PyModule_GetDict(new_module_ELinearConstraintMotion);
	PyDict_SetItemString(new_dict_ELinearConstraintMotion, "LCM_Free", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELinearConstraintMotion, "LCM_Limited", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELinearConstraintMotion, "LCM_Locked", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELinearConstraintMotion, "LCM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ECurveTableMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECurveTableMode = PyImport_AddModule("ECurveTableMode");
#else                                                                                     
	PyObject* new__module_ECurveTableMode = Py_InitModule3("ECurveTableMode", NULL, NULL);
#endif

	PyObject* new_dict_ECurveTableMode = PyModule_GetDict(new_module_ECurveTableMode);
	PyDict_SetItemString(new_dict_ECurveTableMode, "Empty", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECurveTableMode, "SimpleCurves", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECurveTableMode, "RichCurves", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECurveTableMode, "ECurveTableMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEvaluateCurveTableResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEvaluateCurveTableResult = PyImport_AddModule("EEvaluateCurveTableResult");
#else                                                                                     
	PyObject* new__module_EEvaluateCurveTableResult = Py_InitModule3("EEvaluateCurveTableResult", NULL, NULL);
#endif

	PyObject* new_dict_EEvaluateCurveTableResult = PyModule_GetDict(new_module_EEvaluateCurveTableResult);
	PyDict_SetItemString(new_dict_EEvaluateCurveTableResult, "RowFound", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEvaluateCurveTableResult, "RowNotFound", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEvaluateCurveTableResult, "EEvaluateCurveTableResult_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EGrammaticalNumber()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGrammaticalNumber = PyImport_AddModule("EGrammaticalNumber");
#else                                                                                     
	PyObject* new__module_EGrammaticalNumber = Py_InitModule3("EGrammaticalNumber", NULL, NULL);
#endif

	PyObject* new_dict_EGrammaticalNumber = PyModule_GetDict(new_module_EGrammaticalNumber);
	PyDict_SetItemString(new_dict_EGrammaticalNumber, "Singular", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGrammaticalNumber, "Plural", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGrammaticalNumber, "EGrammaticalNumber_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EGrammaticalGender()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGrammaticalGender = PyImport_AddModule("EGrammaticalGender");
#else                                                                                     
	PyObject* new__module_EGrammaticalGender = Py_InitModule3("EGrammaticalGender", NULL, NULL);
#endif

	PyObject* new_dict_EGrammaticalGender = PyModule_GetDict(new_module_EGrammaticalGender);
	PyDict_SetItemString(new_dict_EGrammaticalGender, "Neuter", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGrammaticalGender, "Masculine", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGrammaticalGender, "Feminine", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGrammaticalGender, "Mixed", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGrammaticalGender, "EGrammaticalGender_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_DistributionParamMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_DistributionParamMode = PyImport_AddModule("DistributionParamMode");
#else                                                                                     
	PyObject* new__module_DistributionParamMode = Py_InitModule3("DistributionParamMode", NULL, NULL);
#endif

	PyObject* new_dict_DistributionParamMode = PyModule_GetDict(new_module_DistributionParamMode);
	PyDict_SetItemString(new_dict_DistributionParamMode, "DPM_Normal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_DistributionParamMode, "DPM_Abs", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_DistributionParamMode, "DPM_Direct", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_DistributionParamMode, "DPM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDistributionVectorMirrorFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDistributionVectorMirrorFlags = PyImport_AddModule("EDistributionVectorMirrorFlags");
#else                                                                                     
	PyObject* new__module_EDistributionVectorMirrorFlags = Py_InitModule3("EDistributionVectorMirrorFlags", NULL, NULL);
#endif

	PyObject* new_dict_EDistributionVectorMirrorFlags = PyModule_GetDict(new_module_EDistributionVectorMirrorFlags);
	PyDict_SetItemString(new_dict_EDistributionVectorMirrorFlags, "EDVMF_Same", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDistributionVectorMirrorFlags, "EDVMF_Different", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDistributionVectorMirrorFlags, "EDVMF_Mirror", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDistributionVectorMirrorFlags, "EDVMF_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDistributionVectorLockFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDistributionVectorLockFlags = PyImport_AddModule("EDistributionVectorLockFlags");
#else                                                                                     
	PyObject* new__module_EDistributionVectorLockFlags = Py_InitModule3("EDistributionVectorLockFlags", NULL, NULL);
#endif

	PyObject* new_dict_EDistributionVectorLockFlags = PyModule_GetDict(new_module_EDistributionVectorLockFlags);
	PyDict_SetItemString(new_dict_EDistributionVectorLockFlags, "EDVLF_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDistributionVectorLockFlags, "EDVLF_XY", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDistributionVectorLockFlags, "EDVLF_XZ", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDistributionVectorLockFlags, "EDVLF_YZ", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDistributionVectorLockFlags, "EDVLF_XYZ", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EDistributionVectorLockFlags, "EDVLF_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ENodeEnabledState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENodeEnabledState = PyImport_AddModule("ENodeEnabledState");
#else                                                                                     
	PyObject* new__module_ENodeEnabledState = Py_InitModule3("ENodeEnabledState", NULL, NULL);
#endif

	PyObject* new_dict_ENodeEnabledState = PyModule_GetDict(new_module_ENodeEnabledState);
	PyDict_SetItemString(new_dict_ENodeEnabledState, "Enabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENodeEnabledState, "Disabled", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENodeEnabledState, "DevelopmentOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENodeEnabledState, "ENodeEnabledState_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ENodeAdvancedPins()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENodeAdvancedPins = PyImport_AddModule("ENodeAdvancedPins");
#else                                                                                     
	PyObject* new__module_ENodeAdvancedPins = Py_InitModule3("ENodeAdvancedPins", NULL, NULL);
#endif

	PyObject* new_dict_ENodeAdvancedPins = PyModule_GetDict(new_module_ENodeAdvancedPins);
	PyDict_SetItemString(new_dict_ENodeAdvancedPins, "NoPins", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENodeAdvancedPins, "Shown", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENodeAdvancedPins, "Hidden", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENodeAdvancedPins, "ENodeAdvancedPins_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ENodeTitleType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENodeTitleType = PyImport_AddModule("ENodeTitleType");
#else                                                                                     
	PyObject* new__module_ENodeTitleType = Py_InitModule3("ENodeTitleType", NULL, NULL);
#endif

	PyObject* new_dict_ENodeTitleType = PyModule_GetDict(new_module_ENodeTitleType);
	PyDict_SetItemString(new_dict_ENodeTitleType, "FullTitle", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENodeTitleType, "ListView", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENodeTitleType, "EditableTitle", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENodeTitleType, "MenuTitle", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ENodeTitleType, "MAX_TitleTypes", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ENodeTitleType, "ENodeTitleType_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EPinContainerType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPinContainerType = PyImport_AddModule("EPinContainerType");
#else                                                                                     
	PyObject* new__module_EPinContainerType = Py_InitModule3("EPinContainerType", NULL, NULL);
#endif

	PyObject* new_dict_EPinContainerType = PyModule_GetDict(new_module_EPinContainerType);
	PyDict_SetItemString(new_dict_EPinContainerType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPinContainerType, "Array", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPinContainerType, "Set", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPinContainerType, "Map", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPinContainerType, "EPinContainerType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EEdGraphPinDirection()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEdGraphPinDirection = PyImport_AddModule("EEdGraphPinDirection");
#else                                                                                     
	PyObject* new__module_EEdGraphPinDirection = Py_InitModule3("EEdGraphPinDirection", NULL, NULL);
#endif

	PyObject* new_dict_EEdGraphPinDirection = PyModule_GetDict(new_module_EEdGraphPinDirection);
	PyDict_SetItemString(new_dict_EEdGraphPinDirection, "EGPD_Input", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEdGraphPinDirection, "EGPD_Output", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEdGraphPinDirection, "EGPD_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EBlueprintPinStyleType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBlueprintPinStyleType = PyImport_AddModule("EBlueprintPinStyleType");
#else                                                                                     
	PyObject* new__module_EBlueprintPinStyleType = Py_InitModule3("EBlueprintPinStyleType", NULL, NULL);
#endif

	PyObject* new_dict_EBlueprintPinStyleType = PyModule_GetDict(new_module_EBlueprintPinStyleType);
	PyDict_SetItemString(new_dict_EBlueprintPinStyleType, "BPST_Original", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBlueprintPinStyleType, "BPST_VariantA", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBlueprintPinStyleType, "BPST_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ECanCreateConnectionResponse()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECanCreateConnectionResponse = PyImport_AddModule("ECanCreateConnectionResponse");
#else                                                                                     
	PyObject* new__module_ECanCreateConnectionResponse = Py_InitModule3("ECanCreateConnectionResponse", NULL, NULL);
#endif

	PyObject* new_dict_ECanCreateConnectionResponse = PyModule_GetDict(new_module_ECanCreateConnectionResponse);
	PyDict_SetItemString(new_dict_ECanCreateConnectionResponse, "CONNECT_RESPONSE_MAKE", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECanCreateConnectionResponse, "CONNECT_RESPONSE_DISALLOW", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECanCreateConnectionResponse, "CONNECT_RESPONSE_BREAK_OTHERS_A", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECanCreateConnectionResponse, "CONNECT_RESPONSE_BREAK_OTHERS_B", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECanCreateConnectionResponse, "CONNECT_RESPONSE_BREAK_OTHERS_AB", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ECanCreateConnectionResponse, "CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ECanCreateConnectionResponse, "CONNECT_RESPONSE_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EGraphType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGraphType = PyImport_AddModule("EGraphType");
#else                                                                                     
	PyObject* new__module_EGraphType = Py_InitModule3("EGraphType", NULL, NULL);
#endif

	PyObject* new_dict_EGraphType = PyModule_GetDict(new_module_EGraphType);
	PyDict_SetItemString(new_dict_EGraphType, "GT_Function", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGraphType, "GT_Ubergraph", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGraphType, "GT_Macro", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGraphType, "GT_Animation", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGraphType, "GT_StateMachine", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EGraphType, "GT_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EConsoleType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EConsoleType = PyImport_AddModule("EConsoleType");
#else                                                                                     
	PyObject* new__module_EConsoleType = Py_InitModule3("EConsoleType", NULL, NULL);
#endif

	PyObject* new_dict_EConsoleType = PyModule_GetDict(new_module_EConsoleType);
	PyDict_SetItemString(new_dict_EConsoleType, "Any", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EConsoleType, "Mobile", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EConsoleType, "MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETransitionType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETransitionType = PyImport_AddModule("ETransitionType");
#else                                                                                     
	PyObject* new__module_ETransitionType = Py_InitModule3("ETransitionType", NULL, NULL);
#endif

	PyObject* new_dict_ETransitionType = PyModule_GetDict(new_module_ETransitionType);
	PyDict_SetItemString(new_dict_ETransitionType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETransitionType, "Paused", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETransitionType, "Loading", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETransitionType, "Saving", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETransitionType, "Connecting", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETransitionType, "Precaching", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETransitionType, "WaitingToConnect", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ETransitionType, "MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EFullyLoadPackageType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFullyLoadPackageType = PyImport_AddModule("EFullyLoadPackageType");
#else                                                                                     
	PyObject* new__module_EFullyLoadPackageType = Py_InitModule3("EFullyLoadPackageType", NULL, NULL);
#endif

	PyObject* new_dict_EFullyLoadPackageType = PyModule_GetDict(new_module_EFullyLoadPackageType);
	PyDict_SetItemString(new_dict_EFullyLoadPackageType, "FULLYLOAD_Map", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFullyLoadPackageType, "FULLYLOAD_Game_PreLoadClass", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFullyLoadPackageType, "FULLYLOAD_Game_PostLoadClass", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFullyLoadPackageType, "FULLYLOAD_Always", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFullyLoadPackageType, "FULLYLOAD_Mutator", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFullyLoadPackageType, "FULLYLOAD_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EViewModeIndex()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EViewModeIndex = PyImport_AddModule("EViewModeIndex");
#else                                                                                     
	PyObject* new__module_EViewModeIndex = Py_InitModule3("EViewModeIndex", NULL, NULL);
#endif

	PyObject* new_dict_EViewModeIndex = PyModule_GetDict(new_module_EViewModeIndex);
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_BrushWireframe", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_Wireframe", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_Unlit", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_Lit", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_Lit_DetailLighting", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_LightingOnly", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_LightComplexity", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_ShaderComplexity", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_LightmapDensity", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_LitLightmapDensity", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_ReflectionOverride", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_VisualizeBuffer", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_StationaryLightOverlap", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_CollisionPawn", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_CollisionVisibility", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_LODColoration", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_QuadOverdraw", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_PrimitiveDistanceAccuracy", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_MeshUVDensityAccuracy", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_ShaderComplexityWithQuadOverdraw", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_HLODColoration", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_GroupLODColoration", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_MaterialTextureScaleAccuracy", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_RequiredTextureResolution", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_PathTracing", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_RayTracingDebug", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_Max", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_Unknown", Py_BuildValue("i", 255));
	PyDict_SetItemString(new_dict_EViewModeIndex, "VMI_MAX", Py_BuildValue("i", 256));

}
void unreal_export_uenum_EDemoPlayFailure()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDemoPlayFailure = PyImport_AddModule("EDemoPlayFailure");
#else                                                                                     
	PyObject* new__module_EDemoPlayFailure = Py_InitModule3("EDemoPlayFailure", NULL, NULL);
#endif

	PyObject* new_dict_EDemoPlayFailure = PyModule_GetDict(new_module_EDemoPlayFailure);
	PyDict_SetItemString(new_dict_EDemoPlayFailure, "Generic", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDemoPlayFailure, "DemoNotFound", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDemoPlayFailure, "Corrupt", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDemoPlayFailure, "InvalidVersion", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDemoPlayFailure, "InitBase", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EDemoPlayFailure, "GameSpecificHeader", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EDemoPlayFailure, "ReplayStreamerInternal", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EDemoPlayFailure, "LoadMap", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EDemoPlayFailure, "Serialization", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EDemoPlayFailure, "EDemoPlayFailure_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_ETravelType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETravelType = PyImport_AddModule("ETravelType");
#else                                                                                     
	PyObject* new__module_ETravelType = Py_InitModule3("ETravelType", NULL, NULL);
#endif

	PyObject* new_dict_ETravelType = PyModule_GetDict(new_module_ETravelType);
	PyDict_SetItemString(new_dict_ETravelType, "TRAVEL_Absolute", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETravelType, "TRAVEL_Partial", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETravelType, "TRAVEL_Relative", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETravelType, "TRAVEL_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ENetworkLagState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENetworkLagState = PyImport_AddModule("ENetworkLagState");
#else                                                                                     
	PyObject* new__module_ENetworkLagState = Py_InitModule3("ENetworkLagState", NULL, NULL);
#endif

	PyObject* new_dict_ENetworkLagState = PyModule_GetDict(new_module_ENetworkLagState);
	PyDict_SetItemString(new_dict_ENetworkLagState, "NotLagging", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENetworkLagState, "Lagging", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENetworkLagState, "ENetworkLagState_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EMouseCaptureMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMouseCaptureMode = PyImport_AddModule("EMouseCaptureMode");
#else                                                                                     
	PyObject* new__module_EMouseCaptureMode = Py_InitModule3("EMouseCaptureMode", NULL, NULL);
#endif

	PyObject* new_dict_EMouseCaptureMode = PyModule_GetDict(new_module_EMouseCaptureMode);
	PyDict_SetItemString(new_dict_EMouseCaptureMode, "NoCapture", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMouseCaptureMode, "CapturePermanently", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMouseCaptureMode, "CapturePermanently_IncludingInitialMouseDown", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMouseCaptureMode, "CaptureDuringMouseDown", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMouseCaptureMode, "CaptureDuringRightMouseDown", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMouseCaptureMode, "EMouseCaptureMode_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EInputEvent()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EInputEvent = PyImport_AddModule("EInputEvent");
#else                                                                                     
	PyObject* new__module_EInputEvent = Py_InitModule3("EInputEvent", NULL, NULL);
#endif

	PyObject* new_dict_EInputEvent = PyModule_GetDict(new_module_EInputEvent);
	PyDict_SetItemString(new_dict_EInputEvent, "IE_Pressed", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EInputEvent, "IE_Released", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EInputEvent, "IE_Repeat", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EInputEvent, "IE_DoubleClick", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EInputEvent, "IE_Axis", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EInputEvent, "IE_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ECustomTimeStepSynchronizationState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECustomTimeStepSynchronizationState = PyImport_AddModule("ECustomTimeStepSynchronizationState");
#else                                                                                     
	PyObject* new__module_ECustomTimeStepSynchronizationState = Py_InitModule3("ECustomTimeStepSynchronizationState", NULL, NULL);
#endif

	PyObject* new_dict_ECustomTimeStepSynchronizationState = PyModule_GetDict(new_module_ECustomTimeStepSynchronizationState);
	PyDict_SetItemString(new_dict_ECustomTimeStepSynchronizationState, "Closed", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECustomTimeStepSynchronizationState, "Error", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECustomTimeStepSynchronizationState, "Synchronized", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECustomTimeStepSynchronizationState, "Synchronizing", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECustomTimeStepSynchronizationState, "ECustomTimeStepSynchronizationState_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMeshBufferAccess()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshBufferAccess = PyImport_AddModule("EMeshBufferAccess");
#else                                                                                     
	PyObject* new__module_EMeshBufferAccess = Py_InitModule3("EMeshBufferAccess", NULL, NULL);
#endif

	PyObject* new_dict_EMeshBufferAccess = PyModule_GetDict(new_module_EMeshBufferAccess);
	PyDict_SetItemString(new_dict_EMeshBufferAccess, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshBufferAccess, "ForceCPUAndGPU", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshBufferAccess, "EMeshBufferAccess_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESpawnActorCollisionHandlingMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESpawnActorCollisionHandlingMethod = PyImport_AddModule("ESpawnActorCollisionHandlingMethod");
#else                                                                                     
	PyObject* new__module_ESpawnActorCollisionHandlingMethod = Py_InitModule3("ESpawnActorCollisionHandlingMethod", NULL, NULL);
#endif

	PyObject* new_dict_ESpawnActorCollisionHandlingMethod = PyModule_GetDict(new_module_ESpawnActorCollisionHandlingMethod);
	PyDict_SetItemString(new_dict_ESpawnActorCollisionHandlingMethod, "Undefined", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESpawnActorCollisionHandlingMethod, "AlwaysSpawn", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESpawnActorCollisionHandlingMethod, "AdjustIfPossibleButAlwaysSpawn", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESpawnActorCollisionHandlingMethod, "AdjustIfPossibleButDontSpawnIfColliding", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESpawnActorCollisionHandlingMethod, "DontSpawnIfColliding", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESpawnActorCollisionHandlingMethod, "ESpawnActorCollisionHandlingMethod_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EConstraintFrame()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EConstraintFrame = PyImport_AddModule("EConstraintFrame");
#else                                                                                     
	PyObject* new__module_EConstraintFrame = Py_InitModule3("EConstraintFrame", NULL, NULL);
#endif

	PyObject* new_dict_EConstraintFrame = PyModule_GetDict(new_module_EConstraintFrame);
	PyDict_SetItemString(new_dict_EConstraintFrame, "Frame1", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EConstraintFrame, "Frame2", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EConstraintFrame, "EConstraintFrame_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EAngularConstraintMotion()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAngularConstraintMotion = PyImport_AddModule("EAngularConstraintMotion");
#else                                                                                     
	PyObject* new__module_EAngularConstraintMotion = Py_InitModule3("EAngularConstraintMotion", NULL, NULL);
#endif

	PyObject* new_dict_EAngularConstraintMotion = PyModule_GetDict(new_module_EAngularConstraintMotion);
	PyDict_SetItemString(new_dict_EAngularConstraintMotion, "ACM_Free", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAngularConstraintMotion, "ACM_Limited", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAngularConstraintMotion, "ACM_Locked", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAngularConstraintMotion, "ACM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EComponentSocketType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EComponentSocketType = PyImport_AddModule("EComponentSocketType");
#else                                                                                     
	PyObject* new__module_EComponentSocketType = Py_InitModule3("EComponentSocketType", NULL, NULL);
#endif

	PyObject* new_dict_EComponentSocketType = PyModule_GetDict(new_module_EComponentSocketType);
	PyDict_SetItemString(new_dict_EComponentSocketType, "Invalid", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EComponentSocketType, "Bone", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EComponentSocketType, "Socket", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EComponentSocketType, "EComponentSocketType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPhysicalSurface()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPhysicalSurface = PyImport_AddModule("EPhysicalSurface");
#else                                                                                     
	PyObject* new__module_EPhysicalSurface = Py_InitModule3("EPhysicalSurface", NULL, NULL);
#endif

	PyObject* new_dict_EPhysicalSurface = PyModule_GetDict(new_module_EPhysicalSurface);
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType1", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType2", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType3", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType4", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType5", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType6", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType7", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType8", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType9", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType10", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType11", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType12", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType13", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType14", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType15", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType16", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType17", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType18", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType19", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType20", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType21", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType22", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType23", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType24", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType25", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType26", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType27", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType28", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType29", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType30", Py_BuildValue("i", 30));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType31", Py_BuildValue("i", 31));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType32", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType33", Py_BuildValue("i", 33));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType34", Py_BuildValue("i", 34));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType35", Py_BuildValue("i", 35));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType36", Py_BuildValue("i", 36));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType37", Py_BuildValue("i", 37));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType38", Py_BuildValue("i", 38));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType39", Py_BuildValue("i", 39));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType40", Py_BuildValue("i", 40));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType41", Py_BuildValue("i", 41));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType42", Py_BuildValue("i", 42));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType43", Py_BuildValue("i", 43));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType44", Py_BuildValue("i", 44));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType45", Py_BuildValue("i", 45));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType46", Py_BuildValue("i", 46));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType47", Py_BuildValue("i", 47));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType48", Py_BuildValue("i", 48));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType49", Py_BuildValue("i", 49));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType50", Py_BuildValue("i", 50));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType51", Py_BuildValue("i", 51));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType52", Py_BuildValue("i", 52));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType53", Py_BuildValue("i", 53));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType54", Py_BuildValue("i", 54));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType55", Py_BuildValue("i", 55));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType56", Py_BuildValue("i", 56));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType57", Py_BuildValue("i", 57));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType58", Py_BuildValue("i", 58));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType59", Py_BuildValue("i", 59));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType60", Py_BuildValue("i", 60));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType61", Py_BuildValue("i", 61));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType62", Py_BuildValue("i", 62));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "SurfaceType_Max", Py_BuildValue("i", 63));
	PyDict_SetItemString(new_dict_EPhysicalSurface, "EPhysicalSurface_MAX", Py_BuildValue("i", 64));

}
void unreal_export_uenum_EWalkableSlopeBehavior()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWalkableSlopeBehavior = PyImport_AddModule("EWalkableSlopeBehavior");
#else                                                                                     
	PyObject* new__module_EWalkableSlopeBehavior = Py_InitModule3("EWalkableSlopeBehavior", NULL, NULL);
#endif

	PyObject* new_dict_EWalkableSlopeBehavior = PyModule_GetDict(new_module_EWalkableSlopeBehavior);
	PyDict_SetItemString(new_dict_EWalkableSlopeBehavior, "WalkableSlope_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWalkableSlopeBehavior, "WalkableSlope_Increase", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWalkableSlopeBehavior, "WalkableSlope_Decrease", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EWalkableSlopeBehavior, "WalkableSlope_Unwalkable", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EWalkableSlopeBehavior, "WalkableSlope_Max", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EWalkableSlopeBehavior, "WalkableSlope_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ERotatorQuantization()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERotatorQuantization = PyImport_AddModule("ERotatorQuantization");
#else                                                                                     
	PyObject* new__module_ERotatorQuantization = Py_InitModule3("ERotatorQuantization", NULL, NULL);
#endif

	PyObject* new_dict_ERotatorQuantization = PyModule_GetDict(new_module_ERotatorQuantization);
	PyDict_SetItemString(new_dict_ERotatorQuantization, "ByteComponents", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERotatorQuantization, "ShortComponents", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERotatorQuantization, "ERotatorQuantization_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EVectorQuantization()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVectorQuantization = PyImport_AddModule("EVectorQuantization");
#else                                                                                     
	PyObject* new__module_EVectorQuantization = Py_InitModule3("EVectorQuantization", NULL, NULL);
#endif

	PyObject* new_dict_EVectorQuantization = PyModule_GetDict(new_module_EVectorQuantization);
	PyDict_SetItemString(new_dict_EVectorQuantization, "RoundWholeNumber", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVectorQuantization, "RoundOneDecimal", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVectorQuantization, "RoundTwoDecimals", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVectorQuantization, "EVectorQuantization_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAutoPossessAI()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAutoPossessAI = PyImport_AddModule("EAutoPossessAI");
#else                                                                                     
	PyObject* new__module_EAutoPossessAI = Py_InitModule3("EAutoPossessAI", NULL, NULL);
#endif

	PyObject* new_dict_EAutoPossessAI = PyModule_GetDict(new_module_EAutoPossessAI);
	PyDict_SetItemString(new_dict_EAutoPossessAI, "Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAutoPossessAI, "PlacedInWorld", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAutoPossessAI, "Spawned", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAutoPossessAI, "PlacedInWorldOrSpawned", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAutoPossessAI, "EAutoPossessAI_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EAutoReceiveInput()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAutoReceiveInput = PyImport_AddModule("EAutoReceiveInput");
#else                                                                                     
	PyObject* new__module_EAutoReceiveInput = Py_InitModule3("EAutoReceiveInput", NULL, NULL);
#endif

	PyObject* new_dict_EAutoReceiveInput = PyModule_GetDict(new_module_EAutoReceiveInput);
	PyDict_SetItemString(new_dict_EAutoReceiveInput, "Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAutoReceiveInput, "Player0", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAutoReceiveInput, "Player1", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAutoReceiveInput, "Player2", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAutoReceiveInput, "Player3", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EAutoReceiveInput, "Player4", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EAutoReceiveInput, "Player5", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EAutoReceiveInput, "Player6", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EAutoReceiveInput, "Player7", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EAutoReceiveInput, "EAutoReceiveInput_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_ENetDormancy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENetDormancy = PyImport_AddModule("ENetDormancy");
#else                                                                                     
	PyObject* new__module_ENetDormancy = Py_InitModule3("ENetDormancy", NULL, NULL);
#endif

	PyObject* new_dict_ENetDormancy = PyModule_GetDict(new_module_ENetDormancy);
	PyDict_SetItemString(new_dict_ENetDormancy, "DORM_Never", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENetDormancy, "DORM_Awake", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENetDormancy, "DORM_DormantAll", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENetDormancy, "DORM_DormantPartial", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ENetDormancy, "DORM_Initial", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ENetDormancy, "DORM_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ENetRole()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENetRole = PyImport_AddModule("ENetRole");
#else                                                                                     
	PyObject* new__module_ENetRole = Py_InitModule3("ENetRole", NULL, NULL);
#endif

	PyObject* new_dict_ENetRole = PyModule_GetDict(new_module_ENetRole);
	PyDict_SetItemString(new_dict_ENetRole, "ROLE_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENetRole, "ROLE_SimulatedProxy", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENetRole, "ROLE_AutonomousProxy", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENetRole, "ROLE_Authority", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ENetRole, "ROLE_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EUpdateRateShiftBucket()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUpdateRateShiftBucket = PyImport_AddModule("EUpdateRateShiftBucket");
#else                                                                                     
	PyObject* new__module_EUpdateRateShiftBucket = Py_InitModule3("EUpdateRateShiftBucket", NULL, NULL);
#endif

	PyObject* new_dict_EUpdateRateShiftBucket = PyModule_GetDict(new_module_EUpdateRateShiftBucket);
	PyDict_SetItemString(new_dict_EUpdateRateShiftBucket, "ShiftBucket0", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUpdateRateShiftBucket, "ShiftBucket1", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUpdateRateShiftBucket, "ShiftBucket2", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUpdateRateShiftBucket, "ShiftBucket3", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EUpdateRateShiftBucket, "ShiftBucket4", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EUpdateRateShiftBucket, "ShiftBucket5", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EUpdateRateShiftBucket, "ShiftBucketMax", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EUpdateRateShiftBucket, "EUpdateRateShiftBucket_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EShadowMapFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EShadowMapFlags = PyImport_AddModule("EShadowMapFlags");
#else                                                                                     
	PyObject* new__module_EShadowMapFlags = Py_InitModule3("EShadowMapFlags", NULL, NULL);
#endif

	PyObject* new_dict_EShadowMapFlags = PyModule_GetDict(new_module_EShadowMapFlags);
	PyDict_SetItemString(new_dict_EShadowMapFlags, "SMF_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EShadowMapFlags, "SMF_Streamed", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EShadowMapFlags, "SMF_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELightMapPaddingType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELightMapPaddingType = PyImport_AddModule("ELightMapPaddingType");
#else                                                                                     
	PyObject* new__module_ELightMapPaddingType = Py_InitModule3("ELightMapPaddingType", NULL, NULL);
#endif

	PyObject* new_dict_ELightMapPaddingType = PyModule_GetDict(new_module_ELightMapPaddingType);
	PyDict_SetItemString(new_dict_ELightMapPaddingType, "LMPT_NormalPadding", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELightMapPaddingType, "LMPT_PrePadding", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELightMapPaddingType, "LMPT_NoPadding", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELightMapPaddingType, "LMPT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ECollisionEnabled()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECollisionEnabled = PyImport_AddModule("ECollisionEnabled");
#else                                                                                     
	PyObject* new__module_ECollisionEnabled = Py_InitModule3("ECollisionEnabled", NULL, NULL);
#endif

	PyObject* new_dict_ECollisionEnabled = PyModule_GetDict(new_module_ECollisionEnabled);
	PyDict_SetItemString(new_dict_ECollisionEnabled, "NoCollision", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECollisionEnabled, "QueryOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECollisionEnabled, "PhysicsOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECollisionEnabled, "QueryAndPhysics", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECollisionEnabled, "ECollisionEnabled_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ETimelineSigType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETimelineSigType = PyImport_AddModule("ETimelineSigType");
#else                                                                                     
	PyObject* new__module_ETimelineSigType = Py_InitModule3("ETimelineSigType", NULL, NULL);
#endif

	PyObject* new_dict_ETimelineSigType = PyModule_GetDict(new_module_ETimelineSigType);
	PyDict_SetItemString(new_dict_ETimelineSigType, "ETS_EventSignature", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETimelineSigType, "ETS_FloatSignature", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETimelineSigType, "ETS_VectorSignature", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETimelineSigType, "ETS_LinearColorSignature", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETimelineSigType, "ETS_InvalidSignature", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETimelineSigType, "ETS_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ESleepFamily()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESleepFamily = PyImport_AddModule("ESleepFamily");
#else                                                                                     
	PyObject* new__module_ESleepFamily = Py_InitModule3("ESleepFamily", NULL, NULL);
#endif

	PyObject* new_dict_ESleepFamily = PyModule_GetDict(new_module_ESleepFamily);
	PyDict_SetItemString(new_dict_ESleepFamily, "Normal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESleepFamily, "Sensitive", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESleepFamily, "Custom", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESleepFamily, "ESleepFamily_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ERadialImpulseFalloff()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERadialImpulseFalloff = PyImport_AddModule("ERadialImpulseFalloff");
#else                                                                                     
	PyObject* new__module_ERadialImpulseFalloff = Py_InitModule3("ERadialImpulseFalloff", NULL, NULL);
#endif

	PyObject* new_dict_ERadialImpulseFalloff = PyModule_GetDict(new_module_ERadialImpulseFalloff);
	PyDict_SetItemString(new_dict_ERadialImpulseFalloff, "RIF_Constant", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERadialImpulseFalloff, "RIF_Linear", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERadialImpulseFalloff, "RIF_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EFilterInterpolationType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFilterInterpolationType = PyImport_AddModule("EFilterInterpolationType");
#else                                                                                     
	PyObject* new__module_EFilterInterpolationType = Py_InitModule3("EFilterInterpolationType", NULL, NULL);
#endif

	PyObject* new_dict_EFilterInterpolationType = PyModule_GetDict(new_module_EFilterInterpolationType);
	PyDict_SetItemString(new_dict_EFilterInterpolationType, "BSIT_Average", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFilterInterpolationType, "BSIT_Linear", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFilterInterpolationType, "BSIT_Cubic", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFilterInterpolationType, "BSIT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ECollisionResponse()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECollisionResponse = PyImport_AddModule("ECollisionResponse");
#else                                                                                     
	PyObject* new__module_ECollisionResponse = Py_InitModule3("ECollisionResponse", NULL, NULL);
#endif

	PyObject* new_dict_ECollisionResponse = PyModule_GetDict(new_module_ECollisionResponse);
	PyDict_SetItemString(new_dict_ECollisionResponse, "ECR_Ignore", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECollisionResponse, "ECR_Overlap", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECollisionResponse, "ECR_Block", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECollisionResponse, "ECR_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EOverlapFilterOption()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOverlapFilterOption = PyImport_AddModule("EOverlapFilterOption");
#else                                                                                     
	PyObject* new__module_EOverlapFilterOption = Py_InitModule3("EOverlapFilterOption", NULL, NULL);
#endif

	PyObject* new_dict_EOverlapFilterOption = PyModule_GetDict(new_module_EOverlapFilterOption);
	PyDict_SetItemString(new_dict_EOverlapFilterOption, "OverlapFilter_All", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOverlapFilterOption, "OverlapFilter_DynamicOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOverlapFilterOption, "OverlapFilter_StaticOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EOverlapFilterOption, "OverlapFilter_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ECollisionChannel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECollisionChannel = PyImport_AddModule("ECollisionChannel");
#else                                                                                     
	PyObject* new__module_ECollisionChannel = Py_InitModule3("ECollisionChannel", NULL, NULL);
#endif

	PyObject* new_dict_ECollisionChannel = PyModule_GetDict(new_module_ECollisionChannel);
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_WorldStatic", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_WorldDynamic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_Pawn", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_Visibility", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_Camera", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_PhysicsBody", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_Vehicle", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_Destructible", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_EngineTraceChannel1", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_EngineTraceChannel2", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_EngineTraceChannel3", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_EngineTraceChannel4", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_EngineTraceChannel5", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_EngineTraceChannel6", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel1", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel2", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel3", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel4", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel5", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel6", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel7", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel8", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel9", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel10", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel11", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel12", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel13", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel14", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel15", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel16", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel17", Py_BuildValue("i", 30));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_GameTraceChannel18", Py_BuildValue("i", 31));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_OverlapAll_Deprecated", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_ECollisionChannel, "ECC_MAX", Py_BuildValue("i", 33));

}
void unreal_export_uenum_ENetworkSmoothingMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENetworkSmoothingMode = PyImport_AddModule("ENetworkSmoothingMode");
#else                                                                                     
	PyObject* new__module_ENetworkSmoothingMode = Py_InitModule3("ENetworkSmoothingMode", NULL, NULL);
#endif

	PyObject* new_dict_ENetworkSmoothingMode = PyModule_GetDict(new_module_ENetworkSmoothingMode);
	PyDict_SetItemString(new_dict_ENetworkSmoothingMode, "Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENetworkSmoothingMode, "Linear", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENetworkSmoothingMode, "Exponential", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENetworkSmoothingMode, "Replay", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ENetworkSmoothingMode, "ENetworkSmoothingMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ELightingBuildQuality()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELightingBuildQuality = PyImport_AddModule("ELightingBuildQuality");
#else                                                                                     
	PyObject* new__module_ELightingBuildQuality = Py_InitModule3("ELightingBuildQuality", NULL, NULL);
#endif

	PyObject* new_dict_ELightingBuildQuality = PyModule_GetDict(new_module_ELightingBuildQuality);
	PyDict_SetItemString(new_dict_ELightingBuildQuality, "Quality_Preview", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELightingBuildQuality, "Quality_Medium", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELightingBuildQuality, "Quality_High", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELightingBuildQuality, "Quality_Production", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELightingBuildQuality, "Quality_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMaterialStencilCompare()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialStencilCompare = PyImport_AddModule("EMaterialStencilCompare");
#else                                                                                     
	PyObject* new__module_EMaterialStencilCompare = Py_InitModule3("EMaterialStencilCompare", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialStencilCompare = PyModule_GetDict(new_module_EMaterialStencilCompare);
	PyDict_SetItemString(new_dict_EMaterialStencilCompare, "MSC_Less", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialStencilCompare, "MSC_LessEqual", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialStencilCompare, "MSC_Greater", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialStencilCompare, "MSC_GreaterEqual", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMaterialStencilCompare, "MSC_Equal", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMaterialStencilCompare, "MSC_NotEqual", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMaterialStencilCompare, "MSC_Never", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMaterialStencilCompare, "MSC_Always", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMaterialStencilCompare, "MSC_Count", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMaterialStencilCompare, "MSC_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_EMaterialSamplerType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialSamplerType = PyImport_AddModule("EMaterialSamplerType");
#else                                                                                     
	PyObject* new__module_EMaterialSamplerType = Py_InitModule3("EMaterialSamplerType", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialSamplerType = PyModule_GetDict(new_module_EMaterialSamplerType);
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_Color", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_Grayscale", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_Alpha", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_Normal", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_Masks", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_DistanceFieldFont", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_LinearColor", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_LinearGrayscale", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_Data", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_External", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_VirtualColor", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_VirtualGrayscale", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_VirtualAlpha", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_VirtualNormal", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_VirtualMasks", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_VirtualLinearColor", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_VirtualLinearGrayscale", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EMaterialSamplerType, "SAMPLERTYPE_MAX", Py_BuildValue("i", 17));

}
void unreal_export_uenum_EMaterialTessellationMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialTessellationMode = PyImport_AddModule("EMaterialTessellationMode");
#else                                                                                     
	PyObject* new__module_EMaterialTessellationMode = Py_InitModule3("EMaterialTessellationMode", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialTessellationMode = PyModule_GetDict(new_module_EMaterialTessellationMode);
	PyDict_SetItemString(new_dict_EMaterialTessellationMode, "MTM_NoTessellation", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialTessellationMode, "MTM_FlatTessellation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialTessellationMode, "MTM_PNTriangles", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialTessellationMode, "MTM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMaterialShadingModel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialShadingModel = PyImport_AddModule("EMaterialShadingModel");
#else                                                                                     
	PyObject* new__module_EMaterialShadingModel = Py_InitModule3("EMaterialShadingModel", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialShadingModel = PyModule_GetDict(new_module_EMaterialShadingModel);
	PyDict_SetItemString(new_dict_EMaterialShadingModel, "MSM_Unlit", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialShadingModel, "MSM_DefaultLit", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialShadingModel, "MSM_Subsurface", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialShadingModel, "MSM_PreintegratedSkin", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMaterialShadingModel, "MSM_ClearCoat", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMaterialShadingModel, "MSM_SubsurfaceProfile", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMaterialShadingModel, "MSM_TwoSidedFoliage", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMaterialShadingModel, "MSM_Hair", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMaterialShadingModel, "MSM_Cloth", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMaterialShadingModel, "MSM_Eye", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMaterialShadingModel, "MSM_NUM", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMaterialShadingModel, "MSM_FromMaterialExpression", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EMaterialShadingModel, "MSM_MAX", Py_BuildValue("i", 12));

}
void unreal_export_uenum_EParticleCollisionMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleCollisionMode = PyImport_AddModule("EParticleCollisionMode");
#else                                                                                     
	PyObject* new__module_EParticleCollisionMode = Py_InitModule3("EParticleCollisionMode", NULL, NULL);
#endif

	PyObject* new_dict_EParticleCollisionMode = PyModule_GetDict(new_module_EParticleCollisionMode);
	PyDict_SetItemString(new_dict_EParticleCollisionMode, "SceneDepth", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleCollisionMode, "DistanceField", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleCollisionMode, "EParticleCollisionMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETrailWidthMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETrailWidthMode = PyImport_AddModule("ETrailWidthMode");
#else                                                                                     
	PyObject* new__module_ETrailWidthMode = Py_InitModule3("ETrailWidthMode", NULL, NULL);
#endif

	PyObject* new_dict_ETrailWidthMode = PyModule_GetDict(new_module_ETrailWidthMode);
	PyDict_SetItemString(new_dict_ETrailWidthMode, "ETrailWidthMode_FromCentre", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETrailWidthMode, "ETrailWidthMode_FromFirst", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETrailWidthMode, "ETrailWidthMode_FromSecond", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETrailWidthMode, "ETrailWidthMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EGBufferFormat()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGBufferFormat = PyImport_AddModule("EGBufferFormat");
#else                                                                                     
	PyObject* new__module_EGBufferFormat = Py_InitModule3("EGBufferFormat", NULL, NULL);
#endif

	PyObject* new_dict_EGBufferFormat = PyModule_GetDict(new_module_EGBufferFormat);
	PyDict_SetItemString(new_dict_EGBufferFormat, "Force8BitsPerChannel", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGBufferFormat, "Default", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGBufferFormat, "HighPrecisionNormals", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGBufferFormat, "Force16BitsPerChannel", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EGBufferFormat, "EGBufferFormat_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ESceneCaptureCompositeMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESceneCaptureCompositeMode = PyImport_AddModule("ESceneCaptureCompositeMode");
#else                                                                                     
	PyObject* new__module_ESceneCaptureCompositeMode = Py_InitModule3("ESceneCaptureCompositeMode", NULL, NULL);
#endif

	PyObject* new_dict_ESceneCaptureCompositeMode = PyModule_GetDict(new_module_ESceneCaptureCompositeMode);
	PyDict_SetItemString(new_dict_ESceneCaptureCompositeMode, "SCCM_Overwrite", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESceneCaptureCompositeMode, "SCCM_Additive", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESceneCaptureCompositeMode, "SCCM_Composite", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESceneCaptureCompositeMode, "SCCM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESceneCaptureSource()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESceneCaptureSource = PyImport_AddModule("ESceneCaptureSource");
#else                                                                                     
	PyObject* new__module_ESceneCaptureSource = Py_InitModule3("ESceneCaptureSource", NULL, NULL);
#endif

	PyObject* new_dict_ESceneCaptureSource = PyModule_GetDict(new_module_ESceneCaptureSource);
	PyDict_SetItemString(new_dict_ESceneCaptureSource, "SCS_SceneColorHDR", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESceneCaptureSource, "SCS_SceneColorHDRNoAlpha", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESceneCaptureSource, "SCS_FinalColorLDR", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESceneCaptureSource, "SCS_SceneColorSceneDepth", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESceneCaptureSource, "SCS_SceneDepth", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESceneCaptureSource, "SCS_DeviceDepth", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ESceneCaptureSource, "SCS_Normal", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ESceneCaptureSource, "SCS_BaseColor", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ESceneCaptureSource, "SCS_FinalColorHDR", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ESceneCaptureSource, "SCS_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_ETranslucentSortPolicy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETranslucentSortPolicy = PyImport_AddModule("ETranslucentSortPolicy");
#else                                                                                     
	PyObject* new__module_ETranslucentSortPolicy = Py_InitModule3("ETranslucentSortPolicy", NULL, NULL);
#endif

	PyObject* new_dict_ETranslucentSortPolicy = PyModule_GetDict(new_module_ETranslucentSortPolicy);
	PyDict_SetItemString(new_dict_ETranslucentSortPolicy, "SortByDistance", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETranslucentSortPolicy, "SortByProjectedZ", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETranslucentSortPolicy, "SortAlongAxis", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETranslucentSortPolicy, "ETranslucentSortPolicy_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ERefractionMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERefractionMode = PyImport_AddModule("ERefractionMode");
#else                                                                                     
	PyObject* new__module_ERefractionMode = Py_InitModule3("ERefractionMode", NULL, NULL);
#endif

	PyObject* new_dict_ERefractionMode = PyModule_GetDict(new_module_ERefractionMode);
	PyDict_SetItemString(new_dict_ERefractionMode, "RM_IndexOfRefraction", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERefractionMode, "RM_PixelNormalOffset", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERefractionMode, "RM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETranslucencyLightingMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETranslucencyLightingMode = PyImport_AddModule("ETranslucencyLightingMode");
#else                                                                                     
	PyObject* new__module_ETranslucencyLightingMode = Py_InitModule3("ETranslucencyLightingMode", NULL, NULL);
#endif

	PyObject* new_dict_ETranslucencyLightingMode = PyModule_GetDict(new_module_ETranslucencyLightingMode);
	PyDict_SetItemString(new_dict_ETranslucencyLightingMode, "TLM_VolumetricNonDirectional", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETranslucencyLightingMode, "TLM_VolumetricDirectional", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETranslucencyLightingMode, "TLM_VolumetricPerVertexNonDirectional", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETranslucencyLightingMode, "TLM_VolumetricPerVertexDirectional", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETranslucencyLightingMode, "TLM_Surface", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETranslucencyLightingMode, "TLM_SurfacePerPixelLighting", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETranslucencyLightingMode, "TLM_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ESamplerSourceMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESamplerSourceMode = PyImport_AddModule("ESamplerSourceMode");
#else                                                                                     
	PyObject* new__module_ESamplerSourceMode = Py_InitModule3("ESamplerSourceMode", NULL, NULL);
#endif

	PyObject* new_dict_ESamplerSourceMode = PyModule_GetDict(new_module_ESamplerSourceMode);
	PyDict_SetItemString(new_dict_ESamplerSourceMode, "SSM_FromTextureAsset", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESamplerSourceMode, "SSM_Wrap_WorldGroupSettings", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESamplerSourceMode, "SSM_Clamp_WorldGroupSettings", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESamplerSourceMode, "SSM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EBlendMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBlendMode = PyImport_AddModule("EBlendMode");
#else                                                                                     
	PyObject* new__module_EBlendMode = Py_InitModule3("EBlendMode", NULL, NULL);
#endif

	PyObject* new_dict_EBlendMode = PyModule_GetDict(new_module_EBlendMode);
	PyDict_SetItemString(new_dict_EBlendMode, "BLEND_Opaque", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBlendMode, "BLEND_Masked", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBlendMode, "BLEND_Translucent", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBlendMode, "BLEND_Additive", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EBlendMode, "BLEND_Modulate", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EBlendMode, "BLEND_AlphaComposite", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EBlendMode, "BLEND_AlphaHoldout", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EBlendMode, "BLEND_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EOcclusionCombineMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOcclusionCombineMode = PyImport_AddModule("EOcclusionCombineMode");
#else                                                                                     
	PyObject* new__module_EOcclusionCombineMode = Py_InitModule3("EOcclusionCombineMode", NULL, NULL);
#endif

	PyObject* new_dict_EOcclusionCombineMode = PyModule_GetDict(new_module_EOcclusionCombineMode);
	PyDict_SetItemString(new_dict_EOcclusionCombineMode, "OCM_Minimum", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOcclusionCombineMode, "OCM_Multiply", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOcclusionCombineMode, "OCM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELightmapType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELightmapType = PyImport_AddModule("ELightmapType");
#else                                                                                     
	PyObject* new__module_ELightmapType = Py_InitModule3("ELightmapType", NULL, NULL);
#endif

	PyObject* new_dict_ELightmapType = PyModule_GetDict(new_module_ELightmapType);
	PyDict_SetItemString(new_dict_ELightmapType, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELightmapType, "ForceSurface", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELightmapType, "ForceVolumetric", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELightmapType, "ELightmapType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EIndirectLightingCacheQuality()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EIndirectLightingCacheQuality = PyImport_AddModule("EIndirectLightingCacheQuality");
#else                                                                                     
	PyObject* new__module_EIndirectLightingCacheQuality = Py_InitModule3("EIndirectLightingCacheQuality", NULL, NULL);
#endif

	PyObject* new_dict_EIndirectLightingCacheQuality = PyModule_GetDict(new_module_EIndirectLightingCacheQuality);
	PyDict_SetItemString(new_dict_EIndirectLightingCacheQuality, "ILCQ_Off", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EIndirectLightingCacheQuality, "ILCQ_Point", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EIndirectLightingCacheQuality, "ILCQ_Volume", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EIndirectLightingCacheQuality, "ILCQ_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESceneDepthPriorityGroup()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESceneDepthPriorityGroup = PyImport_AddModule("ESceneDepthPriorityGroup");
#else                                                                                     
	PyObject* new__module_ESceneDepthPriorityGroup = Py_InitModule3("ESceneDepthPriorityGroup", NULL, NULL);
#endif

	PyObject* new_dict_ESceneDepthPriorityGroup = PyModule_GetDict(new_module_ESceneDepthPriorityGroup);
	PyDict_SetItemString(new_dict_ESceneDepthPriorityGroup, "SDPG_World", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESceneDepthPriorityGroup, "SDPG_Foreground", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESceneDepthPriorityGroup, "SDPG_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EAspectRatioAxisConstraint()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAspectRatioAxisConstraint = PyImport_AddModule("EAspectRatioAxisConstraint");
#else                                                                                     
	PyObject* new__module_EAspectRatioAxisConstraint = Py_InitModule3("EAspectRatioAxisConstraint", NULL, NULL);
#endif

	PyObject* new_dict_EAspectRatioAxisConstraint = PyModule_GetDict(new_module_EAspectRatioAxisConstraint);
	PyDict_SetItemString(new_dict_EAspectRatioAxisConstraint, "AspectRatio_MaintainYFOV", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAspectRatioAxisConstraint, "AspectRatio_MaintainXFOV", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAspectRatioAxisConstraint, "AspectRatio_MajorAxisFOV", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAspectRatioAxisConstraint, "AspectRatio_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFontCacheType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFontCacheType = PyImport_AddModule("EFontCacheType");
#else                                                                                     
	PyObject* new__module_EFontCacheType = Py_InitModule3("EFontCacheType", NULL, NULL);
#endif

	PyObject* new_dict_EFontCacheType = PyModule_GetDict(new_module_EFontCacheType);
	PyDict_SetItemString(new_dict_EFontCacheType, "Offline", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFontCacheType, "Runtime", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFontCacheType, "EFontCacheType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EFontImportCharacterSet()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFontImportCharacterSet = PyImport_AddModule("EFontImportCharacterSet");
#else                                                                                     
	PyObject* new__module_EFontImportCharacterSet = Py_InitModule3("EFontImportCharacterSet", NULL, NULL);
#endif

	PyObject* new_dict_EFontImportCharacterSet = PyModule_GetDict(new_module_EFontImportCharacterSet);
	PyDict_SetItemString(new_dict_EFontImportCharacterSet, "FontICS_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFontImportCharacterSet, "FontICS_Ansi", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFontImportCharacterSet, "FontICS_Symbol", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFontImportCharacterSet, "FontICS_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EStandbyType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EStandbyType = PyImport_AddModule("EStandbyType");
#else                                                                                     
	PyObject* new__module_EStandbyType = Py_InitModule3("EStandbyType", NULL, NULL);
#endif

	PyObject* new_dict_EStandbyType = PyModule_GetDict(new_module_EStandbyType);
	PyDict_SetItemString(new_dict_EStandbyType, "STDBY_Rx", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EStandbyType, "STDBY_Tx", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EStandbyType, "STDBY_BadPing", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EStandbyType, "STDBY_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESuggestProjVelocityTraceOption()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESuggestProjVelocityTraceOption = PyImport_AddModule("ESuggestProjVelocityTraceOption");
#else                                                                                     
	PyObject* new__module_ESuggestProjVelocityTraceOption = Py_InitModule3("ESuggestProjVelocityTraceOption", NULL, NULL);
#endif

	PyObject* new_dict_ESuggestProjVelocityTraceOption = PyModule_GetDict(new_module_ESuggestProjVelocityTraceOption);
	PyDict_SetItemString(new_dict_ESuggestProjVelocityTraceOption, "DoNotTrace", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESuggestProjVelocityTraceOption, "TraceFullPath", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESuggestProjVelocityTraceOption, "OnlyTraceWhileAscending", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESuggestProjVelocityTraceOption, "ESuggestProjVelocityTraceOption_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EWindowMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWindowMode = PyImport_AddModule("EWindowMode");
#else                                                                                     
	PyObject* new__module_EWindowMode = Py_InitModule3("EWindowMode", NULL, NULL);
#endif

	PyObject* new_dict_EWindowMode = PyModule_GetDict(new_module_EWindowMode);
	PyDict_SetItemString(new_dict_EWindowMode, "Fullscreen", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWindowMode, "WindowedFullscreen", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWindowMode, "Windowed", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EWindowMode, "EWindowMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EImportanceWeight()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EImportanceWeight = PyImport_AddModule("EImportanceWeight");
#else                                                                                     
	PyObject* new__module_EImportanceWeight = Py_InitModule3("EImportanceWeight", NULL, NULL);
#endif

	PyObject* new_dict_EImportanceWeight = PyModule_GetDict(new_module_EImportanceWeight);
	PyDict_SetItemString(new_dict_EImportanceWeight, "Luminance", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EImportanceWeight, "Red", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EImportanceWeight, "Green", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EImportanceWeight, "Blue", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EImportanceWeight, "Alpha", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EImportanceWeight, "EImportanceWeight_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EAdManagerDelegate()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAdManagerDelegate = PyImport_AddModule("EAdManagerDelegate");
#else                                                                                     
	PyObject* new__module_EAdManagerDelegate = Py_InitModule3("EAdManagerDelegate", NULL, NULL);
#endif

	PyObject* new_dict_EAdManagerDelegate = PyModule_GetDict(new_module_EAdManagerDelegate);
	PyDict_SetItemString(new_dict_EAdManagerDelegate, "AMD_ClickedBanner", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAdManagerDelegate, "AMD_UserClosedAd", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAdManagerDelegate, "AMD_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EControllerAnalogStick()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EControllerAnalogStick = PyImport_AddModule("EControllerAnalogStick");
#else                                                                                     
	PyObject* new__module_EControllerAnalogStick = Py_InitModule3("EControllerAnalogStick", NULL, NULL);
#endif

	PyObject* new_dict_EControllerAnalogStick = PyModule_GetDict(new_module_EControllerAnalogStick);
	PyDict_SetItemString(new_dict_EControllerAnalogStick, "CAS_LeftStick", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EControllerAnalogStick, "CAS_RightStick", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EControllerAnalogStick, "CAS_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EAnimAlphaInputType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAnimAlphaInputType = PyImport_AddModule("EAnimAlphaInputType");
#else                                                                                     
	PyObject* new__module_EAnimAlphaInputType = Py_InitModule3("EAnimAlphaInputType", NULL, NULL);
#endif

	PyObject* new_dict_EAnimAlphaInputType = PyModule_GetDict(new_module_EAnimAlphaInputType);
	PyDict_SetItemString(new_dict_EAnimAlphaInputType, "Float", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAnimAlphaInputType, "Bool", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAnimAlphaInputType, "Curve", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAnimAlphaInputType, "EAnimAlphaInputType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETrackActiveCondition()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETrackActiveCondition = PyImport_AddModule("ETrackActiveCondition");
#else                                                                                     
	PyObject* new__module_ETrackActiveCondition = Py_InitModule3("ETrackActiveCondition", NULL, NULL);
#endif

	PyObject* new_dict_ETrackActiveCondition = PyModule_GetDict(new_module_ETrackActiveCondition);
	PyDict_SetItemString(new_dict_ETrackActiveCondition, "ETAC_Always", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETrackActiveCondition, "ETAC_GoreEnabled", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETrackActiveCondition, "ETAC_GoreDisabled", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETrackActiveCondition, "ETAC_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EInterpTrackMoveRotMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EInterpTrackMoveRotMode = PyImport_AddModule("EInterpTrackMoveRotMode");
#else                                                                                     
	PyObject* new__module_EInterpTrackMoveRotMode = Py_InitModule3("EInterpTrackMoveRotMode", NULL, NULL);
#endif

	PyObject* new_dict_EInterpTrackMoveRotMode = PyModule_GetDict(new_module_EInterpTrackMoveRotMode);
	PyDict_SetItemString(new_dict_EInterpTrackMoveRotMode, "IMR_Keyframed", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EInterpTrackMoveRotMode, "IMR_LookAtGroup", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EInterpTrackMoveRotMode, "IMR_Ignore", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EInterpTrackMoveRotMode, "IMR_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EInterpMoveAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EInterpMoveAxis = PyImport_AddModule("EInterpMoveAxis");
#else                                                                                     
	PyObject* new__module_EInterpMoveAxis = Py_InitModule3("EInterpMoveAxis", NULL, NULL);
#endif

	PyObject* new_dict_EInterpMoveAxis = PyModule_GetDict(new_module_EInterpMoveAxis);
	PyDict_SetItemString(new_dict_EInterpMoveAxis, "AXIS_TranslationX", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EInterpMoveAxis, "AXIS_TranslationY", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EInterpMoveAxis, "AXIS_TranslationZ", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EInterpMoveAxis, "AXIS_RotationX", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EInterpMoveAxis, "AXIS_RotationY", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EInterpMoveAxis, "AXIS_RotationZ", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EInterpMoveAxis, "AXIS_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ETrackToggleAction()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETrackToggleAction = PyImport_AddModule("ETrackToggleAction");
#else                                                                                     
	PyObject* new__module_ETrackToggleAction = Py_InitModule3("ETrackToggleAction", NULL, NULL);
#endif

	PyObject* new_dict_ETrackToggleAction = PyModule_GetDict(new_module_ETrackToggleAction);
	PyDict_SetItemString(new_dict_ETrackToggleAction, "ETTA_Off", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETrackToggleAction, "ETTA_On", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETrackToggleAction, "ETTA_Toggle", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETrackToggleAction, "ETTA_Trigger", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETrackToggleAction, "ETTA_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EVisibilityTrackCondition()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVisibilityTrackCondition = PyImport_AddModule("EVisibilityTrackCondition");
#else                                                                                     
	PyObject* new__module_EVisibilityTrackCondition = Py_InitModule3("EVisibilityTrackCondition", NULL, NULL);
#endif

	PyObject* new_dict_EVisibilityTrackCondition = PyModule_GetDict(new_module_EVisibilityTrackCondition);
	PyDict_SetItemString(new_dict_EVisibilityTrackCondition, "EVTC_Always", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVisibilityTrackCondition, "EVTC_GoreEnabled", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVisibilityTrackCondition, "EVTC_GoreDisabled", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVisibilityTrackCondition, "EVTC_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EVisibilityTrackAction()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVisibilityTrackAction = PyImport_AddModule("EVisibilityTrackAction");
#else                                                                                     
	PyObject* new__module_EVisibilityTrackAction = Py_InitModule3("EVisibilityTrackAction", NULL, NULL);
#endif

	PyObject* new_dict_EVisibilityTrackAction = PyModule_GetDict(new_module_EVisibilityTrackAction);
	PyDict_SetItemString(new_dict_EVisibilityTrackAction, "EVTA_Hide", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVisibilityTrackAction, "EVTA_Show", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVisibilityTrackAction, "EVTA_Toggle", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVisibilityTrackAction, "EVTA_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESlateGesture()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESlateGesture = PyImport_AddModule("ESlateGesture");
#else                                                                                     
	PyObject* new__module_ESlateGesture = Py_InitModule3("ESlateGesture", NULL, NULL);
#endif

	PyObject* new_dict_ESlateGesture = PyModule_GetDict(new_module_ESlateGesture);
	PyDict_SetItemString(new_dict_ESlateGesture, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESlateGesture, "Scroll", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESlateGesture, "Magnify", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESlateGesture, "Swipe", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESlateGesture, "Rotate", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESlateGesture, "LongPress", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ESlateGesture, "ESlateGesture_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ELerpInterpolationMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELerpInterpolationMode = PyImport_AddModule("ELerpInterpolationMode");
#else                                                                                     
	PyObject* new__module_ELerpInterpolationMode = Py_InitModule3("ELerpInterpolationMode", NULL, NULL);
#endif

	PyObject* new_dict_ELerpInterpolationMode = PyModule_GetDict(new_module_ELerpInterpolationMode);
	PyDict_SetItemString(new_dict_ELerpInterpolationMode, "QuatInterp", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELerpInterpolationMode, "EulerInterp", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELerpInterpolationMode, "DualQuatInterp", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELerpInterpolationMode, "ELerpInterpolationMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEasingFunc()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEasingFunc = PyImport_AddModule("EEasingFunc");
#else                                                                                     
	PyObject* new__module_EEasingFunc = Py_InitModule3("EEasingFunc", NULL, NULL);
#endif

	PyObject* new_dict_EEasingFunc = PyModule_GetDict(new_module_EEasingFunc);
	PyDict_SetItemString(new_dict_EEasingFunc, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEasingFunc, "Step", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEasingFunc, "SinusoidalIn", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEasingFunc, "SinusoidalOut", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEasingFunc, "SinusoidalInOut", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EEasingFunc, "EaseIn", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EEasingFunc, "EaseOut", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EEasingFunc, "EaseInOut", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EEasingFunc, "ExpoIn", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EEasingFunc, "ExpoOut", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EEasingFunc, "ExpoInOut", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EEasingFunc, "CircularIn", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EEasingFunc, "CircularOut", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EEasingFunc, "CircularInOut", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EEasingFunc, "EEasingFunc_MAX", Py_BuildValue("i", 14));

}
void unreal_export_uenum_ERoundingMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERoundingMode = PyImport_AddModule("ERoundingMode");
#else                                                                                     
	PyObject* new__module_ERoundingMode = Py_InitModule3("ERoundingMode", NULL, NULL);
#endif

	PyObject* new_dict_ERoundingMode = PyModule_GetDict(new_module_ERoundingMode);
	PyDict_SetItemString(new_dict_ERoundingMode, "HalfToEven", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERoundingMode, "HalfFromZero", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERoundingMode, "HalfToZero", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERoundingMode, "FromZero", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERoundingMode, "ToZero", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ERoundingMode, "ToNegativeInfinity", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ERoundingMode, "ToPositiveInfinity", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ERoundingMode, "ERoundingMode_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EStreamingVolumeUsage()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EStreamingVolumeUsage = PyImport_AddModule("EStreamingVolumeUsage");
#else                                                                                     
	PyObject* new__module_EStreamingVolumeUsage = Py_InitModule3("EStreamingVolumeUsage", NULL, NULL);
#endif

	PyObject* new_dict_EStreamingVolumeUsage = PyModule_GetDict(new_module_EStreamingVolumeUsage);
	PyDict_SetItemString(new_dict_EStreamingVolumeUsage, "SVB_Loading", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EStreamingVolumeUsage, "SVB_LoadingAndVisibility", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EStreamingVolumeUsage, "SVB_VisibilityBlockingOnLoad", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EStreamingVolumeUsage, "SVB_BlockingOnLoad", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EStreamingVolumeUsage, "SVB_LoadingNotVisible", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EStreamingVolumeUsage, "SVB_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EMaterialDecalResponse()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialDecalResponse = PyImport_AddModule("EMaterialDecalResponse");
#else                                                                                     
	PyObject* new__module_EMaterialDecalResponse = Py_InitModule3("EMaterialDecalResponse", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialDecalResponse = PyModule_GetDict(new_module_EMaterialDecalResponse);
	PyDict_SetItemString(new_dict_EMaterialDecalResponse, "MDR_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialDecalResponse, "MDR_ColorNormalRoughness", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialDecalResponse, "MDR_Color", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialDecalResponse, "MDR_ColorNormal", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMaterialDecalResponse, "MDR_ColorRoughness", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMaterialDecalResponse, "MDR_Normal", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMaterialDecalResponse, "MDR_NormalRoughness", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMaterialDecalResponse, "MDR_Roughness", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMaterialDecalResponse, "MDR_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_EDecalBlendMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDecalBlendMode = PyImport_AddModule("EDecalBlendMode");
#else                                                                                     
	PyObject* new__module_EDecalBlendMode = Py_InitModule3("EDecalBlendMode", NULL, NULL);
#endif

	PyObject* new_dict_EDecalBlendMode = PyModule_GetDict(new_module_EDecalBlendMode);
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_Translucent", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_Stain", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_Normal", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_Emissive", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_DBuffer_ColorNormalRoughness", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_DBuffer_Color", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_DBuffer_ColorNormal", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_DBuffer_ColorRoughness", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_DBuffer_Normal", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_DBuffer_NormalRoughness", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_DBuffer_Roughness", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_DBuffer_Emissive", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_DBuffer_AlphaComposite", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_DBuffer_EmissiveAlphaComposite", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_Volumetric_DistanceFunction", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_AlphaComposite", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_AmbientOcclusion", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EDecalBlendMode, "DBM_MAX", Py_BuildValue("i", 17));

}
void unreal_export_uenum_ETextureColorChannel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureColorChannel = PyImport_AddModule("ETextureColorChannel");
#else                                                                                     
	PyObject* new__module_ETextureColorChannel = Py_InitModule3("ETextureColorChannel", NULL, NULL);
#endif

	PyObject* new_dict_ETextureColorChannel = PyModule_GetDict(new_module_ETextureColorChannel);
	PyDict_SetItemString(new_dict_ETextureColorChannel, "TCC_Red", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextureColorChannel, "TCC_Green", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextureColorChannel, "TCC_Blue", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureColorChannel, "TCC_Alpha", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETextureColorChannel, "TCC_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMaterialAttributeBlend()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialAttributeBlend = PyImport_AddModule("EMaterialAttributeBlend");
#else                                                                                     
	PyObject* new__module_EMaterialAttributeBlend = Py_InitModule3("EMaterialAttributeBlend", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialAttributeBlend = PyModule_GetDict(new_module_EMaterialAttributeBlend);
	PyDict_SetItemString(new_dict_EMaterialAttributeBlend, "Blend", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialAttributeBlend, "UseA", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialAttributeBlend, "UseB", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialAttributeBlend, "EMaterialAttributeBlend_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EChannelMaskParameterColor()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EChannelMaskParameterColor = PyImport_AddModule("EChannelMaskParameterColor");
#else                                                                                     
	PyObject* new__module_EChannelMaskParameterColor = Py_InitModule3("EChannelMaskParameterColor", NULL, NULL);
#endif

	PyObject* new_dict_EChannelMaskParameterColor = PyModule_GetDict(new_module_EChannelMaskParameterColor);
	PyDict_SetItemString(new_dict_EChannelMaskParameterColor, "Red", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EChannelMaskParameterColor, "Green", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EChannelMaskParameterColor, "Blue", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EChannelMaskParameterColor, "Alpha", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EChannelMaskParameterColor, "EChannelMaskParameterColor_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EClampMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EClampMode = PyImport_AddModule("EClampMode");
#else                                                                                     
	PyObject* new__module_EClampMode = Py_InitModule3("EClampMode", NULL, NULL);
#endif

	PyObject* new_dict_EClampMode = PyModule_GetDict(new_module_EClampMode);
	PyDict_SetItemString(new_dict_EClampMode, "CMODE_Clamp", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EClampMode, "CMODE_ClampMin", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EClampMode, "CMODE_ClampMax", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EClampMode, "CMODE_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ECustomMaterialOutputType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECustomMaterialOutputType = PyImport_AddModule("ECustomMaterialOutputType");
#else                                                                                     
	PyObject* new__module_ECustomMaterialOutputType = Py_InitModule3("ECustomMaterialOutputType", NULL, NULL);
#endif

	PyObject* new_dict_ECustomMaterialOutputType = PyModule_GetDict(new_module_ECustomMaterialOutputType);
	PyDict_SetItemString(new_dict_ECustomMaterialOutputType, "CMOT_Float1", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECustomMaterialOutputType, "CMOT_Float2", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECustomMaterialOutputType, "CMOT_Float3", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECustomMaterialOutputType, "CMOT_Float4", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECustomMaterialOutputType, "CMOT_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EDepthOfFieldFunctionValue()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDepthOfFieldFunctionValue = PyImport_AddModule("EDepthOfFieldFunctionValue");
#else                                                                                     
	PyObject* new__module_EDepthOfFieldFunctionValue = Py_InitModule3("EDepthOfFieldFunctionValue", NULL, NULL);
#endif

	PyObject* new_dict_EDepthOfFieldFunctionValue = PyModule_GetDict(new_module_EDepthOfFieldFunctionValue);
	PyDict_SetItemString(new_dict_EDepthOfFieldFunctionValue, "TDOF_NearAndFarMask", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDepthOfFieldFunctionValue, "TDOF_NearMask", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDepthOfFieldFunctionValue, "TDOF_FarMask", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDepthOfFieldFunctionValue, "TDOF_CircleOfConfusionRadius", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDepthOfFieldFunctionValue, "TDOF_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EFunctionInputType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFunctionInputType = PyImport_AddModule("EFunctionInputType");
#else                                                                                     
	PyObject* new__module_EFunctionInputType = Py_InitModule3("EFunctionInputType", NULL, NULL);
#endif

	PyObject* new_dict_EFunctionInputType = PyModule_GetDict(new_module_EFunctionInputType);
	PyDict_SetItemString(new_dict_EFunctionInputType, "FunctionInput_Scalar", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFunctionInputType, "FunctionInput_Vector2", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFunctionInputType, "FunctionInput_Vector3", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFunctionInputType, "FunctionInput_Vector4", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFunctionInputType, "FunctionInput_Texture2D", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFunctionInputType, "FunctionInput_TextureCube", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EFunctionInputType, "FunctionInput_VolumeTexture", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EFunctionInputType, "FunctionInput_StaticBool", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EFunctionInputType, "FunctionInput_MaterialAttributes", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EFunctionInputType, "FunctionInput_TextureExternal", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EFunctionInputType, "FunctionInput_MAX", Py_BuildValue("i", 10));

}
void unreal_export_uenum_ENoiseFunction()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENoiseFunction = PyImport_AddModule("ENoiseFunction");
#else                                                                                     
	PyObject* new__module_ENoiseFunction = Py_InitModule3("ENoiseFunction", NULL, NULL);
#endif

	PyObject* new_dict_ENoiseFunction = PyModule_GetDict(new_module_ENoiseFunction);
	PyDict_SetItemString(new_dict_ENoiseFunction, "NOISEFUNCTION_SimplexTex", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENoiseFunction, "NOISEFUNCTION_GradientTex", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENoiseFunction, "NOISEFUNCTION_GradientTex3D", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENoiseFunction, "NOISEFUNCTION_GradientALU", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ENoiseFunction, "NOISEFUNCTION_ValueALU", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ENoiseFunction, "NOISEFUNCTION_VoronoiALU", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ENoiseFunction, "NOISEFUNCTION_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EMaterialSceneAttributeInputMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialSceneAttributeInputMode = PyImport_AddModule("EMaterialSceneAttributeInputMode");
#else                                                                                     
	PyObject* new__module_EMaterialSceneAttributeInputMode = Py_InitModule3("EMaterialSceneAttributeInputMode", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialSceneAttributeInputMode = PyModule_GetDict(new_module_EMaterialSceneAttributeInputMode);
	PyDict_SetItemString(new_dict_EMaterialSceneAttributeInputMode, "Coordinates", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialSceneAttributeInputMode, "OffsetFraction", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialSceneAttributeInputMode, "EMaterialSceneAttributeInputMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESpeedTreeLODType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESpeedTreeLODType = PyImport_AddModule("ESpeedTreeLODType");
#else                                                                                     
	PyObject* new__module_ESpeedTreeLODType = Py_InitModule3("ESpeedTreeLODType", NULL, NULL);
#endif

	PyObject* new_dict_ESpeedTreeLODType = PyModule_GetDict(new_module_ESpeedTreeLODType);
	PyDict_SetItemString(new_dict_ESpeedTreeLODType, "STLOD_Pop", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESpeedTreeLODType, "STLOD_Smooth", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESpeedTreeLODType, "STLOD_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESpeedTreeWindType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESpeedTreeWindType = PyImport_AddModule("ESpeedTreeWindType");
#else                                                                                     
	PyObject* new__module_ESpeedTreeWindType = Py_InitModule3("ESpeedTreeWindType", NULL, NULL);
#endif

	PyObject* new_dict_ESpeedTreeWindType = PyModule_GetDict(new_module_ESpeedTreeWindType);
	PyDict_SetItemString(new_dict_ESpeedTreeWindType, "STW_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESpeedTreeWindType, "STW_Fastest", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESpeedTreeWindType, "STW_Fast", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESpeedTreeWindType, "STW_Better", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESpeedTreeWindType, "STW_Best", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESpeedTreeWindType, "STW_Palm", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ESpeedTreeWindType, "STW_BestPlus", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ESpeedTreeWindType, "STW_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_ESpeedTreeGeometryType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESpeedTreeGeometryType = PyImport_AddModule("ESpeedTreeGeometryType");
#else                                                                                     
	PyObject* new__module_ESpeedTreeGeometryType = Py_InitModule3("ESpeedTreeGeometryType", NULL, NULL);
#endif

	PyObject* new_dict_ESpeedTreeGeometryType = PyModule_GetDict(new_module_ESpeedTreeGeometryType);
	PyDict_SetItemString(new_dict_ESpeedTreeGeometryType, "STG_Branch", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESpeedTreeGeometryType, "STG_Frond", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESpeedTreeGeometryType, "STG_Leaf", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESpeedTreeGeometryType, "STG_FacingLeaf", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESpeedTreeGeometryType, "STG_Billboard", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESpeedTreeGeometryType, "STG_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EMaterialExposedTextureProperty()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialExposedTextureProperty = PyImport_AddModule("EMaterialExposedTextureProperty");
#else                                                                                     
	PyObject* new__module_EMaterialExposedTextureProperty = Py_InitModule3("EMaterialExposedTextureProperty", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialExposedTextureProperty = PyModule_GetDict(new_module_EMaterialExposedTextureProperty);
	PyDict_SetItemString(new_dict_EMaterialExposedTextureProperty, "TMTM_TextureSize", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialExposedTextureProperty, "TMTM_TexelSize", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialExposedTextureProperty, "TMTM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETextureMipValueMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureMipValueMode = PyImport_AddModule("ETextureMipValueMode");
#else                                                                                     
	PyObject* new__module_ETextureMipValueMode = Py_InitModule3("ETextureMipValueMode", NULL, NULL);
#endif

	PyObject* new_dict_ETextureMipValueMode = PyModule_GetDict(new_module_ETextureMipValueMode);
	PyDict_SetItemString(new_dict_ETextureMipValueMode, "TMVM_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextureMipValueMode, "TMVM_MipLevel", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextureMipValueMode, "TMVM_MipBias", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureMipValueMode, "TMVM_Derivative", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETextureMipValueMode, "TMVM_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMaterialVectorCoordTransform()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialVectorCoordTransform = PyImport_AddModule("EMaterialVectorCoordTransform");
#else                                                                                     
	PyObject* new__module_EMaterialVectorCoordTransform = Py_InitModule3("EMaterialVectorCoordTransform", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialVectorCoordTransform = PyModule_GetDict(new_module_EMaterialVectorCoordTransform);
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransform, "TRANSFORM_Tangent", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransform, "TRANSFORM_Local", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransform, "TRANSFORM_World", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransform, "TRANSFORM_View", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransform, "TRANSFORM_Camera", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransform, "TRANSFORM_ParticleWorld", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransform, "TRANSFORM_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EMaterialVectorCoordTransformSource()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialVectorCoordTransformSource = PyImport_AddModule("EMaterialVectorCoordTransformSource");
#else                                                                                     
	PyObject* new__module_EMaterialVectorCoordTransformSource = Py_InitModule3("EMaterialVectorCoordTransformSource", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialVectorCoordTransformSource = PyModule_GetDict(new_module_EMaterialVectorCoordTransformSource);
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransformSource, "TRANSFORMSOURCE_Tangent", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransformSource, "TRANSFORMSOURCE_Local", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransformSource, "TRANSFORMSOURCE_World", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransformSource, "TRANSFORMSOURCE_View", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransformSource, "TRANSFORMSOURCE_Camera", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransformSource, "TRANSFORMSOURCE_ParticleWorld", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMaterialVectorCoordTransformSource, "TRANSFORMSOURCE_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EMaterialPositionTransformSource()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialPositionTransformSource = PyImport_AddModule("EMaterialPositionTransformSource");
#else                                                                                     
	PyObject* new__module_EMaterialPositionTransformSource = Py_InitModule3("EMaterialPositionTransformSource", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialPositionTransformSource = PyModule_GetDict(new_module_EMaterialPositionTransformSource);
	PyDict_SetItemString(new_dict_EMaterialPositionTransformSource, "TRANSFORMPOSSOURCE_Local", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialPositionTransformSource, "TRANSFORMPOSSOURCE_World", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialPositionTransformSource, "TRANSFORMPOSSOURCE_TranslatedWorld", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialPositionTransformSource, "TRANSFORMPOSSOURCE_View", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMaterialPositionTransformSource, "TRANSFORMPOSSOURCE_Camera", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMaterialPositionTransformSource, "TRANSFORMPOSSOURCE_Particle", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMaterialPositionTransformSource, "TRANSFORMPOSSOURCE_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EVectorNoiseFunction()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVectorNoiseFunction = PyImport_AddModule("EVectorNoiseFunction");
#else                                                                                     
	PyObject* new__module_EVectorNoiseFunction = Py_InitModule3("EVectorNoiseFunction", NULL, NULL);
#endif

	PyObject* new_dict_EVectorNoiseFunction = PyModule_GetDict(new_module_EVectorNoiseFunction);
	PyDict_SetItemString(new_dict_EVectorNoiseFunction, "VNF_CellnoiseALU", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVectorNoiseFunction, "VNF_VectorALU", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVectorNoiseFunction, "VNF_GradientALU", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVectorNoiseFunction, "VNF_CurlALU", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EVectorNoiseFunction, "VNF_VoronoiALU", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EVectorNoiseFunction, "VNF_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EMaterialExposedViewProperty()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialExposedViewProperty = PyImport_AddModule("EMaterialExposedViewProperty");
#else                                                                                     
	PyObject* new__module_EMaterialExposedViewProperty = Py_InitModule3("EMaterialExposedViewProperty", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialExposedViewProperty = PyModule_GetDict(new_module_EMaterialExposedViewProperty);
	PyDict_SetItemString(new_dict_EMaterialExposedViewProperty, "MEVP_BufferSize", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialExposedViewProperty, "MEVP_FieldOfView", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialExposedViewProperty, "MEVP_TanHalfFieldOfView", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialExposedViewProperty, "MEVP_ViewSize", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMaterialExposedViewProperty, "MEVP_WorldSpaceViewPosition", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMaterialExposedViewProperty, "MEVP_WorldSpaceCameraPosition", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMaterialExposedViewProperty, "MEVP_ViewportOffset", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMaterialExposedViewProperty, "MEVP_TemporalSampleCount", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMaterialExposedViewProperty, "MEVP_TemporalSampleIndex", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMaterialExposedViewProperty, "MEVP_TemporalSampleOffset", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMaterialExposedViewProperty, "MEVP_RuntimeVirtualTextureOutputLevel", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMaterialExposedViewProperty, "MEVP_RuntimeVirtualTextureOutputDerivative", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EMaterialExposedViewProperty, "MEVP_MAX", Py_BuildValue("i", 12));

}
void unreal_export_uenum_EWorldPositionIncludedOffsets()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWorldPositionIncludedOffsets = PyImport_AddModule("EWorldPositionIncludedOffsets");
#else                                                                                     
	PyObject* new__module_EWorldPositionIncludedOffsets = Py_InitModule3("EWorldPositionIncludedOffsets", NULL, NULL);
#endif

	PyObject* new_dict_EWorldPositionIncludedOffsets = PyModule_GetDict(new_module_EWorldPositionIncludedOffsets);
	PyDict_SetItemString(new_dict_EWorldPositionIncludedOffsets, "WPT_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWorldPositionIncludedOffsets, "WPT_ExcludeAllShaderOffsets", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWorldPositionIncludedOffsets, "WPT_CameraRelative", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EWorldPositionIncludedOffsets, "WPT_CameraRelativeNoOffsets", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EWorldPositionIncludedOffsets, "WPT_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMaterialFunctionUsage()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialFunctionUsage = PyImport_AddModule("EMaterialFunctionUsage");
#else                                                                                     
	PyObject* new__module_EMaterialFunctionUsage = Py_InitModule3("EMaterialFunctionUsage", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialFunctionUsage = PyModule_GetDict(new_module_EMaterialFunctionUsage);
	PyDict_SetItemString(new_dict_EMaterialFunctionUsage, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialFunctionUsage, "MaterialLayer", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialFunctionUsage, "MaterialLayerBlend", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialFunctionUsage, "EMaterialFunctionUsage_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMaterialUsage()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialUsage = PyImport_AddModule("EMaterialUsage");
#else                                                                                     
	PyObject* new__module_EMaterialUsage = Py_InitModule3("EMaterialUsage", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialUsage = PyModule_GetDict(new_module_EMaterialUsage);
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_SkeletalMesh", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_ParticleSprites", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_BeamTrails", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_MeshParticles", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_StaticLighting", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_MorphTargets", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_SplineMesh", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_InstancedStaticMeshes", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_GeometryCollections", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_Clothing", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_NiagaraSprites", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_NiagaraRibbons", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_NiagaraMeshParticles", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_GeometryCache", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EMaterialUsage, "MATUSAGE_MAX", Py_BuildValue("i", 14));

}
void unreal_export_uenum_EMaterialParameterAssociation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialParameterAssociation = PyImport_AddModule("EMaterialParameterAssociation");
#else                                                                                     
	PyObject* new__module_EMaterialParameterAssociation = Py_InitModule3("EMaterialParameterAssociation", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialParameterAssociation = PyModule_GetDict(new_module_EMaterialParameterAssociation);
	PyDict_SetItemString(new_dict_EMaterialParameterAssociation, "LayerParameter", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialParameterAssociation, "BlendParameter", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialParameterAssociation, "GlobalParameter", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialParameterAssociation, "EMaterialParameterAssociation_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMaterialMergeType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialMergeType = PyImport_AddModule("EMaterialMergeType");
#else                                                                                     
	PyObject* new__module_EMaterialMergeType = Py_InitModule3("EMaterialMergeType", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialMergeType = PyModule_GetDict(new_module_EMaterialMergeType);
	PyDict_SetItemString(new_dict_EMaterialMergeType, "MaterialMergeType_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialMergeType, "MaterialMergeType_Simplygon", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialMergeType, "MaterialMergeType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETextureSizingType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureSizingType = PyImport_AddModule("ETextureSizingType");
#else                                                                                     
	PyObject* new__module_ETextureSizingType = Py_InitModule3("ETextureSizingType", NULL, NULL);
#endif

	PyObject* new_dict_ETextureSizingType = PyModule_GetDict(new_module_ETextureSizingType);
	PyDict_SetItemString(new_dict_ETextureSizingType, "TextureSizingType_UseSingleTextureSize", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextureSizingType, "TextureSizingType_UseAutomaticBiasedSizes", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextureSizingType, "TextureSizingType_UseManualOverrideTextureSize", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureSizingType, "TextureSizingType_UseSimplygonAutomaticSizing", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETextureSizingType, "TextureSizingType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESceneTextureId()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESceneTextureId = PyImport_AddModule("ESceneTextureId");
#else                                                                                     
	PyObject* new__module_ESceneTextureId = Py_InitModule3("ESceneTextureId", NULL, NULL);
#endif

	PyObject* new_dict_ESceneTextureId = PyModule_GetDict(new_module_ESceneTextureId);
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_SceneColor", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_SceneDepth", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_DiffuseColor", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_SpecularColor", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_SubsurfaceColor", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_BaseColor", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_Specular", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_Metallic", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_WorldNormal", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_SeparateTranslucency", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_Opacity", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_Roughness", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_MaterialAO", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_CustomDepth", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_PostProcessInput0", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_PostProcessInput1", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_PostProcessInput2", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_PostProcessInput3", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_PostProcessInput4", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_PostProcessInput5", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_PostProcessInput6", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_DecalMask", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_ShadingModelColor", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_ShadingModelID", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_AmbientOcclusion", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_CustomStencil", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_StoredBaseColor", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_StoredSpecular", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_Velocity", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_ESceneTextureId, "PPI_MAX", Py_BuildValue("i", 29));

}
void unreal_export_uenum_EMaterialDomain()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialDomain = PyImport_AddModule("EMaterialDomain");
#else                                                                                     
	PyObject* new__module_EMaterialDomain = Py_InitModule3("EMaterialDomain", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialDomain = PyModule_GetDict(new_module_EMaterialDomain);
	PyDict_SetItemString(new_dict_EMaterialDomain, "MD_Surface", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialDomain, "MD_DeferredDecal", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialDomain, "MD_LightFunction", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialDomain, "MD_Volume", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMaterialDomain, "MD_PostProcess", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMaterialDomain, "MD_UI", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMaterialDomain, "MD_RuntimeVirtualTexture", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMaterialDomain, "MD_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EMeshInstancingReplacementMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshInstancingReplacementMethod = PyImport_AddModule("EMeshInstancingReplacementMethod");
#else                                                                                     
	PyObject* new__module_EMeshInstancingReplacementMethod = Py_InitModule3("EMeshInstancingReplacementMethod", NULL, NULL);
#endif

	PyObject* new_dict_EMeshInstancingReplacementMethod = PyModule_GetDict(new_module_EMeshInstancingReplacementMethod);
	PyDict_SetItemString(new_dict_EMeshInstancingReplacementMethod, "RemoveOriginalActors", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshInstancingReplacementMethod, "KeepOriginalActorsAsEditorOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshInstancingReplacementMethod, "EMeshInstancingReplacementMethod_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EUVOutput()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUVOutput = PyImport_AddModule("EUVOutput");
#else                                                                                     
	PyObject* new__module_EUVOutput = Py_InitModule3("EUVOutput", NULL, NULL);
#endif

	PyObject* new_dict_EUVOutput = PyModule_GetDict(new_module_EUVOutput);
	PyDict_SetItemString(new_dict_EUVOutput, "DoNotOutputChannel", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUVOutput, "OutputChannel", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUVOutput, "EUVOutput_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EMeshMergeType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshMergeType = PyImport_AddModule("EMeshMergeType");
#else                                                                                     
	PyObject* new__module_EMeshMergeType = Py_InitModule3("EMeshMergeType", NULL, NULL);
#endif

	PyObject* new_dict_EMeshMergeType = PyModule_GetDict(new_module_EMeshMergeType);
	PyDict_SetItemString(new_dict_EMeshMergeType, "MeshMergeType_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshMergeType, "MeshMergeType_MergeActor", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshMergeType, "MeshMergeType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EMeshLODSelectionType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshLODSelectionType = PyImport_AddModule("EMeshLODSelectionType");
#else                                                                                     
	PyObject* new__module_EMeshLODSelectionType = Py_InitModule3("EMeshLODSelectionType", NULL, NULL);
#endif

	PyObject* new_dict_EMeshLODSelectionType = PyModule_GetDict(new_module_EMeshLODSelectionType);
	PyDict_SetItemString(new_dict_EMeshLODSelectionType, "AllLODs", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshLODSelectionType, "SpecificLOD", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshLODSelectionType, "CalculateLOD", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMeshLODSelectionType, "LowestDetailLOD", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMeshLODSelectionType, "EMeshLODSelectionType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EProxyNormalComputationMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EProxyNormalComputationMethod = PyImport_AddModule("EProxyNormalComputationMethod");
#else                                                                                     
	PyObject* new__module_EProxyNormalComputationMethod = Py_InitModule3("EProxyNormalComputationMethod", NULL, NULL);
#endif

	PyObject* new_dict_EProxyNormalComputationMethod = PyModule_GetDict(new_module_EProxyNormalComputationMethod);
	PyDict_SetItemString(new_dict_EProxyNormalComputationMethod, "AngleWeighted", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EProxyNormalComputationMethod, "AreaWeighted", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EProxyNormalComputationMethod, "EqualWeighted", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EProxyNormalComputationMethod, "EProxyNormalComputationMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELandscapeCullingPrecision()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeCullingPrecision = PyImport_AddModule("ELandscapeCullingPrecision");
#else                                                                                     
	PyObject* new__module_ELandscapeCullingPrecision = Py_InitModule3("ELandscapeCullingPrecision", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeCullingPrecision = PyModule_GetDict(new_module_ELandscapeCullingPrecision);
	PyDict_SetItemString(new_dict_ELandscapeCullingPrecision, "High", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeCullingPrecision, "Medium", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeCullingPrecision, "Low", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeCullingPrecision, "ELandscapeCullingPrecision_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EStaticMeshReductionTerimationCriterion()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EStaticMeshReductionTerimationCriterion = PyImport_AddModule("EStaticMeshReductionTerimationCriterion");
#else                                                                                     
	PyObject* new__module_EStaticMeshReductionTerimationCriterion = Py_InitModule3("EStaticMeshReductionTerimationCriterion", NULL, NULL);
#endif

	PyObject* new_dict_EStaticMeshReductionTerimationCriterion = PyModule_GetDict(new_module_EStaticMeshReductionTerimationCriterion);
	PyDict_SetItemString(new_dict_EStaticMeshReductionTerimationCriterion, "Triangles", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EStaticMeshReductionTerimationCriterion, "Vertices", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EStaticMeshReductionTerimationCriterion, "Any", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EStaticMeshReductionTerimationCriterion, "EStaticMeshReductionTerimationCriterion_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMeshFeatureImportance()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshFeatureImportance = PyImport_AddModule("EMeshFeatureImportance");
#else                                                                                     
	PyObject* new__module_EMeshFeatureImportance = Py_InitModule3("EMeshFeatureImportance", NULL, NULL);
#endif

	PyObject* new_dict_EMeshFeatureImportance = PyModule_GetDict(new_module_EMeshFeatureImportance);
	PyDict_SetItemString(new_dict_EMeshFeatureImportance, "Off", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshFeatureImportance, "Lowest", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshFeatureImportance, "Low", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMeshFeatureImportance, "Normal", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMeshFeatureImportance, "High", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMeshFeatureImportance, "Highest", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMeshFeatureImportance, "EMeshFeatureImportance_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EVertexPaintAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVertexPaintAxis = PyImport_AddModule("EVertexPaintAxis");
#else                                                                                     
	PyObject* new__module_EVertexPaintAxis = Py_InitModule3("EVertexPaintAxis", NULL, NULL);
#endif

	PyObject* new_dict_EVertexPaintAxis = PyModule_GetDict(new_module_EVertexPaintAxis);
	PyDict_SetItemString(new_dict_EVertexPaintAxis, "X", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVertexPaintAxis, "Y", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVertexPaintAxis, "Z", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVertexPaintAxis, "EVertexPaintAxis_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMicroTransactionResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMicroTransactionResult = PyImport_AddModule("EMicroTransactionResult");
#else                                                                                     
	PyObject* new__module_EMicroTransactionResult = Py_InitModule3("EMicroTransactionResult", NULL, NULL);
#endif

	PyObject* new_dict_EMicroTransactionResult = PyModule_GetDict(new_module_EMicroTransactionResult);
	PyDict_SetItemString(new_dict_EMicroTransactionResult, "MTR_Succeeded", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMicroTransactionResult, "MTR_Failed", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMicroTransactionResult, "MTR_Canceled", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMicroTransactionResult, "MTR_RestoredFromServer", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMicroTransactionResult, "MTR_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMicroTransactionDelegate()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMicroTransactionDelegate = PyImport_AddModule("EMicroTransactionDelegate");
#else                                                                                     
	PyObject* new__module_EMicroTransactionDelegate = Py_InitModule3("EMicroTransactionDelegate", NULL, NULL);
#endif

	PyObject* new_dict_EMicroTransactionDelegate = PyModule_GetDict(new_module_EMicroTransactionDelegate);
	PyDict_SetItemString(new_dict_EMicroTransactionDelegate, "MTD_PurchaseQueryComplete", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMicroTransactionDelegate, "MTD_PurchaseComplete", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMicroTransactionDelegate, "MTD_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_FNavigationSystemRunMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_FNavigationSystemRunMode = PyImport_AddModule("FNavigationSystemRunMode");
#else                                                                                     
	PyObject* new__module_FNavigationSystemRunMode = Py_InitModule3("FNavigationSystemRunMode", NULL, NULL);
#endif

	PyObject* new_dict_FNavigationSystemRunMode = PyModule_GetDict(new_module_FNavigationSystemRunMode);
	PyDict_SetItemString(new_dict_FNavigationSystemRunMode, "InvalidMode", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_FNavigationSystemRunMode, "GameMode", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_FNavigationSystemRunMode, "EditorMode", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_FNavigationSystemRunMode, "SimulationMode", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_FNavigationSystemRunMode, "PIEMode", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_FNavigationSystemRunMode, "FNavigationSystemRunMode_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ENavigationQueryResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENavigationQueryResult = PyImport_AddModule("ENavigationQueryResult");
#else                                                                                     
	PyObject* new__module_ENavigationQueryResult = Py_InitModule3("ENavigationQueryResult", NULL, NULL);
#endif

	PyObject* new_dict_ENavigationQueryResult = PyModule_GetDict(new_module_ENavigationQueryResult);
	PyDict_SetItemString(new_dict_ENavigationQueryResult, "Invalid", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENavigationQueryResult, "Error", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENavigationQueryResult, "Fail", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENavigationQueryResult, "Success", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ENavigationQueryResult, "ENavigationQueryResult_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ENavDataGatheringModeConfig()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENavDataGatheringModeConfig = PyImport_AddModule("ENavDataGatheringModeConfig");
#else                                                                                     
	PyObject* new__module_ENavDataGatheringModeConfig = Py_InitModule3("ENavDataGatheringModeConfig", NULL, NULL);
#endif

	PyObject* new_dict_ENavDataGatheringModeConfig = PyModule_GetDict(new_module_ENavDataGatheringModeConfig);
	PyDict_SetItemString(new_dict_ENavDataGatheringModeConfig, "Invalid", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENavDataGatheringModeConfig, "Instant", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENavDataGatheringModeConfig, "Lazy", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENavDataGatheringModeConfig, "ENavDataGatheringModeConfig_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ENavDataGatheringMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENavDataGatheringMode = PyImport_AddModule("ENavDataGatheringMode");
#else                                                                                     
	PyObject* new__module_ENavDataGatheringMode = Py_InitModule3("ENavDataGatheringMode", NULL, NULL);
#endif

	PyObject* new_dict_ENavDataGatheringMode = PyModule_GetDict(new_module_ENavDataGatheringMode);
	PyDict_SetItemString(new_dict_ENavDataGatheringMode, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENavDataGatheringMode, "Instant", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENavDataGatheringMode, "Lazy", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENavDataGatheringMode, "ENavDataGatheringMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ENavigationOptionFlag()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENavigationOptionFlag = PyImport_AddModule("ENavigationOptionFlag");
#else                                                                                     
	PyObject* new__module_ENavigationOptionFlag = Py_InitModule3("ENavigationOptionFlag", NULL, NULL);
#endif

	PyObject* new_dict_ENavigationOptionFlag = PyModule_GetDict(new_module_ENavigationOptionFlag);
	PyDict_SetItemString(new_dict_ENavigationOptionFlag, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENavigationOptionFlag, "Enable", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENavigationOptionFlag, "Disable", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENavigationOptionFlag, "MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ENavLinkDirection()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENavLinkDirection = PyImport_AddModule("ENavLinkDirection");
#else                                                                                     
	PyObject* new__module_ENavLinkDirection = Py_InitModule3("ENavLinkDirection", NULL, NULL);
#endif

	PyObject* new_dict_ENavLinkDirection = PyModule_GetDict(new_module_ENavLinkDirection);
	PyDict_SetItemString(new_dict_ENavLinkDirection, "BothWays", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENavLinkDirection, "LeftToRight", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENavLinkDirection, "RightToLeft", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENavLinkDirection, "ENavLinkDirection_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFastArraySerializerDeltaFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFastArraySerializerDeltaFlags = PyImport_AddModule("EFastArraySerializerDeltaFlags");
#else                                                                                     
	PyObject* new__module_EFastArraySerializerDeltaFlags = Py_InitModule3("EFastArraySerializerDeltaFlags", NULL, NULL);
#endif

	PyObject* new_dict_EFastArraySerializerDeltaFlags = PyModule_GetDict(new_module_EFastArraySerializerDeltaFlags);
	PyDict_SetItemString(new_dict_EFastArraySerializerDeltaFlags, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFastArraySerializerDeltaFlags, "HasBeenSerialized", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFastArraySerializerDeltaFlags, "HasDeltaBeenRequested", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFastArraySerializerDeltaFlags, "IsUsingDeltaSerialization", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFastArraySerializerDeltaFlags, "EFastArraySerializerDeltaFlags_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EEmitterRenderMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEmitterRenderMode = PyImport_AddModule("EEmitterRenderMode");
#else                                                                                     
	PyObject* new__module_EEmitterRenderMode = Py_InitModule3("EEmitterRenderMode", NULL, NULL);
#endif

	PyObject* new_dict_EEmitterRenderMode = PyModule_GetDict(new_module_EEmitterRenderMode);
	PyDict_SetItemString(new_dict_EEmitterRenderMode, "ERM_Normal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEmitterRenderMode, "ERM_Point", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEmitterRenderMode, "ERM_Cross", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEmitterRenderMode, "ERM_LightsOnly", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEmitterRenderMode, "ERM_None", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EEmitterRenderMode, "ERM_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EParticleSubUVInterpMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleSubUVInterpMethod = PyImport_AddModule("EParticleSubUVInterpMethod");
#else                                                                                     
	PyObject* new__module_EParticleSubUVInterpMethod = Py_InitModule3("EParticleSubUVInterpMethod", NULL, NULL);
#endif

	PyObject* new_dict_EParticleSubUVInterpMethod = PyModule_GetDict(new_module_EParticleSubUVInterpMethod);
	PyDict_SetItemString(new_dict_EParticleSubUVInterpMethod, "PSUVIM_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleSubUVInterpMethod, "PSUVIM_Linear", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleSubUVInterpMethod, "PSUVIM_Linear_Blend", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleSubUVInterpMethod, "PSUVIM_Random", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EParticleSubUVInterpMethod, "PSUVIM_Random_Blend", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EParticleSubUVInterpMethod, "PSUVIM_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EParticleBurstMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleBurstMethod = PyImport_AddModule("EParticleBurstMethod");
#else                                                                                     
	PyObject* new__module_EParticleBurstMethod = Py_InitModule3("EParticleBurstMethod", NULL, NULL);
#endif

	PyObject* new_dict_EParticleBurstMethod = PyModule_GetDict(new_module_EParticleBurstMethod);
	PyDict_SetItemString(new_dict_EParticleBurstMethod, "EPBM_Instant", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleBurstMethod, "EPBM_Interpolated", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleBurstMethod, "EPBM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EParticleSystemInsignificanceReaction()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleSystemInsignificanceReaction = PyImport_AddModule("EParticleSystemInsignificanceReaction");
#else                                                                                     
	PyObject* new__module_EParticleSystemInsignificanceReaction = Py_InitModule3("EParticleSystemInsignificanceReaction", NULL, NULL);
#endif

	PyObject* new_dict_EParticleSystemInsignificanceReaction = PyModule_GetDict(new_module_EParticleSystemInsignificanceReaction);
	PyDict_SetItemString(new_dict_EParticleSystemInsignificanceReaction, "Auto", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleSystemInsignificanceReaction, "Complete", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleSystemInsignificanceReaction, "DisableTick", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleSystemInsignificanceReaction, "DisableTickAndKill", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EParticleSystemInsignificanceReaction, "Num", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EParticleSystemInsignificanceReaction, "EParticleSystemInsignificanceReaction_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EParticleSignificanceLevel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleSignificanceLevel = PyImport_AddModule("EParticleSignificanceLevel");
#else                                                                                     
	PyObject* new__module_EParticleSignificanceLevel = Py_InitModule3("EParticleSignificanceLevel", NULL, NULL);
#endif

	PyObject* new_dict_EParticleSignificanceLevel = PyModule_GetDict(new_module_EParticleSignificanceLevel);
	PyDict_SetItemString(new_dict_EParticleSignificanceLevel, "Low", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleSignificanceLevel, "Medium", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleSignificanceLevel, "High", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleSignificanceLevel, "Critical", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EParticleSignificanceLevel, "Num", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EParticleSignificanceLevel, "EParticleSignificanceLevel_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EParticleDetailMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleDetailMode = PyImport_AddModule("EParticleDetailMode");
#else                                                                                     
	PyObject* new__module_EParticleDetailMode = Py_InitModule3("EParticleDetailMode", NULL, NULL);
#endif

	PyObject* new_dict_EParticleDetailMode = PyModule_GetDict(new_module_EParticleDetailMode);
	PyDict_SetItemString(new_dict_EParticleDetailMode, "PDM_Low", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleDetailMode, "PDM_Medium", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleDetailMode, "PDM_High", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleDetailMode, "PDM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EParticleSourceSelectionMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleSourceSelectionMethod = PyImport_AddModule("EParticleSourceSelectionMethod");
#else                                                                                     
	PyObject* new__module_EParticleSourceSelectionMethod = Py_InitModule3("EParticleSourceSelectionMethod", NULL, NULL);
#endif

	PyObject* new_dict_EParticleSourceSelectionMethod = PyModule_GetDict(new_module_EParticleSourceSelectionMethod);
	PyDict_SetItemString(new_dict_EParticleSourceSelectionMethod, "EPSSM_Random", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleSourceSelectionMethod, "EPSSM_Sequential", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleSourceSelectionMethod, "EPSSM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EModuleType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EModuleType = PyImport_AddModule("EModuleType");
#else                                                                                     
	PyObject* new__module_EModuleType = Py_InitModule3("EModuleType", NULL, NULL);
#endif

	PyObject* new_dict_EModuleType = PyModule_GetDict(new_module_EModuleType);
	PyDict_SetItemString(new_dict_EModuleType, "EPMT_General", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EModuleType, "EPMT_TypeData", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EModuleType, "EPMT_Beam", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EModuleType, "EPMT_Trail", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EModuleType, "EPMT_Spawn", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EModuleType, "EPMT_Required", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EModuleType, "EPMT_Event", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EModuleType, "EPMT_Light", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EModuleType, "EPMT_SubUV", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EModuleType, "EPMT_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_EAttractorParticleSelectionMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAttractorParticleSelectionMethod = PyImport_AddModule("EAttractorParticleSelectionMethod");
#else                                                                                     
	PyObject* new__module_EAttractorParticleSelectionMethod = Py_InitModule3("EAttractorParticleSelectionMethod", NULL, NULL);
#endif

	PyObject* new_dict_EAttractorParticleSelectionMethod = PyModule_GetDict(new_module_EAttractorParticleSelectionMethod);
	PyDict_SetItemString(new_dict_EAttractorParticleSelectionMethod, "EAPSM_Random", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAttractorParticleSelectionMethod, "EAPSM_Sequential", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAttractorParticleSelectionMethod, "EAPSM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_Beam2SourceTargetTangentMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_Beam2SourceTargetTangentMethod = PyImport_AddModule("Beam2SourceTargetTangentMethod");
#else                                                                                     
	PyObject* new__module_Beam2SourceTargetTangentMethod = Py_InitModule3("Beam2SourceTargetTangentMethod", NULL, NULL);
#endif

	PyObject* new_dict_Beam2SourceTargetTangentMethod = PyModule_GetDict(new_module_Beam2SourceTargetTangentMethod);
	PyDict_SetItemString(new_dict_Beam2SourceTargetTangentMethod, "PEB2STTM_Direct", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_Beam2SourceTargetTangentMethod, "PEB2STTM_UserSet", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_Beam2SourceTargetTangentMethod, "PEB2STTM_Distribution", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_Beam2SourceTargetTangentMethod, "PEB2STTM_Emitter", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_Beam2SourceTargetTangentMethod, "PEB2STTM_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_Beam2SourceTargetMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_Beam2SourceTargetMethod = PyImport_AddModule("Beam2SourceTargetMethod");
#else                                                                                     
	PyObject* new__module_Beam2SourceTargetMethod = Py_InitModule3("Beam2SourceTargetMethod", NULL, NULL);
#endif

	PyObject* new_dict_Beam2SourceTargetMethod = PyModule_GetDict(new_module_Beam2SourceTargetMethod);
	PyDict_SetItemString(new_dict_Beam2SourceTargetMethod, "PEB2STM_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_Beam2SourceTargetMethod, "PEB2STM_UserSet", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_Beam2SourceTargetMethod, "PEB2STM_Emitter", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_Beam2SourceTargetMethod, "PEB2STM_Particle", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_Beam2SourceTargetMethod, "PEB2STM_Actor", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_Beam2SourceTargetMethod, "PEB2STM_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_BeamModifierType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_BeamModifierType = PyImport_AddModule("BeamModifierType");
#else                                                                                     
	PyObject* new__module_BeamModifierType = Py_InitModule3("BeamModifierType", NULL, NULL);
#endif

	PyObject* new_dict_BeamModifierType = PyModule_GetDict(new_module_BeamModifierType);
	PyDict_SetItemString(new_dict_BeamModifierType, "PEB2MT_Source", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_BeamModifierType, "PEB2MT_Target", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_BeamModifierType, "PEB2MT_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EParticleCameraOffsetUpdateMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleCameraOffsetUpdateMethod = PyImport_AddModule("EParticleCameraOffsetUpdateMethod");
#else                                                                                     
	PyObject* new__module_EParticleCameraOffsetUpdateMethod = Py_InitModule3("EParticleCameraOffsetUpdateMethod", NULL, NULL);
#endif

	PyObject* new_dict_EParticleCameraOffsetUpdateMethod = PyModule_GetDict(new_module_EParticleCameraOffsetUpdateMethod);
	PyDict_SetItemString(new_dict_EParticleCameraOffsetUpdateMethod, "EPCOUM_DirectSet", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleCameraOffsetUpdateMethod, "EPCOUM_Additive", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleCameraOffsetUpdateMethod, "EPCOUM_Scalar", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleCameraOffsetUpdateMethod, "EPCOUM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EParticleCollisionComplete()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleCollisionComplete = PyImport_AddModule("EParticleCollisionComplete");
#else                                                                                     
	PyObject* new__module_EParticleCollisionComplete = Py_InitModule3("EParticleCollisionComplete", NULL, NULL);
#endif

	PyObject* new_dict_EParticleCollisionComplete = PyModule_GetDict(new_module_EParticleCollisionComplete);
	PyDict_SetItemString(new_dict_EParticleCollisionComplete, "EPCC_Kill", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleCollisionComplete, "EPCC_Freeze", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleCollisionComplete, "EPCC_HaltCollisions", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleCollisionComplete, "EPCC_FreezeTranslation", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EParticleCollisionComplete, "EPCC_FreezeRotation", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EParticleCollisionComplete, "EPCC_FreezeMovement", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EParticleCollisionComplete, "EPCC_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EParticleCollisionResponse()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleCollisionResponse = PyImport_AddModule("EParticleCollisionResponse");
#else                                                                                     
	PyObject* new__module_EParticleCollisionResponse = Py_InitModule3("EParticleCollisionResponse", NULL, NULL);
#endif

	PyObject* new_dict_EParticleCollisionResponse = PyModule_GetDict(new_module_EParticleCollisionResponse);
	PyDict_SetItemString(new_dict_EParticleCollisionResponse, "Bounce", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleCollisionResponse, "Stop", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleCollisionResponse, "Kill", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleCollisionResponse, "EParticleCollisionResponse_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELocationBoneSocketSelectionMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELocationBoneSocketSelectionMethod = PyImport_AddModule("ELocationBoneSocketSelectionMethod");
#else                                                                                     
	PyObject* new__module_ELocationBoneSocketSelectionMethod = Py_InitModule3("ELocationBoneSocketSelectionMethod", NULL, NULL);
#endif

	PyObject* new_dict_ELocationBoneSocketSelectionMethod = PyModule_GetDict(new_module_ELocationBoneSocketSelectionMethod);
	PyDict_SetItemString(new_dict_ELocationBoneSocketSelectionMethod, "BONESOCKETSEL_Sequential", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELocationBoneSocketSelectionMethod, "BONESOCKETSEL_Random", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELocationBoneSocketSelectionMethod, "BONESOCKETSEL_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELocationBoneSocketSource()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELocationBoneSocketSource = PyImport_AddModule("ELocationBoneSocketSource");
#else                                                                                     
	PyObject* new__module_ELocationBoneSocketSource = Py_InitModule3("ELocationBoneSocketSource", NULL, NULL);
#endif

	PyObject* new_dict_ELocationBoneSocketSource = PyModule_GetDict(new_module_ELocationBoneSocketSource);
	PyDict_SetItemString(new_dict_ELocationBoneSocketSource, "BONESOCKETSOURCE_Bones", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELocationBoneSocketSource, "BONESOCKETSOURCE_Sockets", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELocationBoneSocketSource, "BONESOCKETSOURCE_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELocationEmitterSelectionMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELocationEmitterSelectionMethod = PyImport_AddModule("ELocationEmitterSelectionMethod");
#else                                                                                     
	PyObject* new__module_ELocationEmitterSelectionMethod = Py_InitModule3("ELocationEmitterSelectionMethod", NULL, NULL);
#endif

	PyObject* new_dict_ELocationEmitterSelectionMethod = PyModule_GetDict(new_module_ELocationEmitterSelectionMethod);
	PyDict_SetItemString(new_dict_ELocationEmitterSelectionMethod, "ELESM_Random", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELocationEmitterSelectionMethod, "ELESM_Sequential", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELocationEmitterSelectionMethod, "ELESM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_CylinderHeightAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_CylinderHeightAxis = PyImport_AddModule("CylinderHeightAxis");
#else                                                                                     
	PyObject* new__module_CylinderHeightAxis = Py_InitModule3("CylinderHeightAxis", NULL, NULL);
#endif

	PyObject* new_dict_CylinderHeightAxis = PyModule_GetDict(new_module_CylinderHeightAxis);
	PyDict_SetItemString(new_dict_CylinderHeightAxis, "PMLPC_HEIGHTAXIS_X", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_CylinderHeightAxis, "PMLPC_HEIGHTAXIS_Y", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_CylinderHeightAxis, "PMLPC_HEIGHTAXIS_Z", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_CylinderHeightAxis, "PMLPC_HEIGHTAXIS_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELocationSkelVertSurfaceSource()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELocationSkelVertSurfaceSource = PyImport_AddModule("ELocationSkelVertSurfaceSource");
#else                                                                                     
	PyObject* new__module_ELocationSkelVertSurfaceSource = Py_InitModule3("ELocationSkelVertSurfaceSource", NULL, NULL);
#endif

	PyObject* new_dict_ELocationSkelVertSurfaceSource = PyModule_GetDict(new_module_ELocationSkelVertSurfaceSource);
	PyDict_SetItemString(new_dict_ELocationSkelVertSurfaceSource, "VERTSURFACESOURCE_Vert", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELocationSkelVertSurfaceSource, "VERTSURFACESOURCE_Surface", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELocationSkelVertSurfaceSource, "VERTSURFACESOURCE_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EOrbitChainMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOrbitChainMode = PyImport_AddModule("EOrbitChainMode");
#else                                                                                     
	PyObject* new__module_EOrbitChainMode = Py_InitModule3("EOrbitChainMode", NULL, NULL);
#endif

	PyObject* new_dict_EOrbitChainMode = PyModule_GetDict(new_module_EOrbitChainMode);
	PyDict_SetItemString(new_dict_EOrbitChainMode, "EOChainMode_Add", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOrbitChainMode, "EOChainMode_Scale", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOrbitChainMode, "EOChainMode_Link", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EOrbitChainMode, "EOChainMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EParticleAxisLock()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleAxisLock = PyImport_AddModule("EParticleAxisLock");
#else                                                                                     
	PyObject* new__module_EParticleAxisLock = Py_InitModule3("EParticleAxisLock", NULL, NULL);
#endif

	PyObject* new_dict_EParticleAxisLock = PyModule_GetDict(new_module_EParticleAxisLock);
	PyDict_SetItemString(new_dict_EParticleAxisLock, "EPAL_NONE", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleAxisLock, "EPAL_X", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleAxisLock, "EPAL_Y", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleAxisLock, "EPAL_Z", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EParticleAxisLock, "EPAL_NEGATIVE_X", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EParticleAxisLock, "EPAL_NEGATIVE_Y", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EParticleAxisLock, "EPAL_NEGATIVE_Z", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EParticleAxisLock, "EPAL_ROTATE_X", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EParticleAxisLock, "EPAL_ROTATE_Y", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EParticleAxisLock, "EPAL_ROTATE_Z", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EParticleAxisLock, "EPAL_MAX", Py_BuildValue("i", 10));

}
void unreal_export_uenum_EEmitterDynamicParameterValue()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEmitterDynamicParameterValue = PyImport_AddModule("EEmitterDynamicParameterValue");
#else                                                                                     
	PyObject* new__module_EEmitterDynamicParameterValue = Py_InitModule3("EEmitterDynamicParameterValue", NULL, NULL);
#endif

	PyObject* new_dict_EEmitterDynamicParameterValue = PyModule_GetDict(new_module_EEmitterDynamicParameterValue);
	PyDict_SetItemString(new_dict_EEmitterDynamicParameterValue, "EDPV_UserSet", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEmitterDynamicParameterValue, "EDPV_AutoSet", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEmitterDynamicParameterValue, "EDPV_VelocityX", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEmitterDynamicParameterValue, "EDPV_VelocityY", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEmitterDynamicParameterValue, "EDPV_VelocityZ", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EEmitterDynamicParameterValue, "EDPV_VelocityMag", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EEmitterDynamicParameterValue, "EDPV_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EEmitterNormalsMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEmitterNormalsMode = PyImport_AddModule("EEmitterNormalsMode");
#else                                                                                     
	PyObject* new__module_EEmitterNormalsMode = Py_InitModule3("EEmitterNormalsMode", NULL, NULL);
#endif

	PyObject* new_dict_EEmitterNormalsMode = PyModule_GetDict(new_module_EEmitterNormalsMode);
	PyDict_SetItemString(new_dict_EEmitterNormalsMode, "ENM_CameraFacing", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEmitterNormalsMode, "ENM_Spherical", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEmitterNormalsMode, "ENM_Cylindrical", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEmitterNormalsMode, "ENM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EParticleSortMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleSortMode = PyImport_AddModule("EParticleSortMode");
#else                                                                                     
	PyObject* new__module_EParticleSortMode = Py_InitModule3("EParticleSortMode", NULL, NULL);
#endif

	PyObject* new_dict_EParticleSortMode = PyModule_GetDict(new_module_EParticleSortMode);
	PyDict_SetItemString(new_dict_EParticleSortMode, "PSORTMODE_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleSortMode, "PSORTMODE_ViewProjDepth", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleSortMode, "PSORTMODE_DistanceToView", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleSortMode, "PSORTMODE_Age_OldestFirst", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EParticleSortMode, "PSORTMODE_Age_NewestFirst", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EParticleSortMode, "PSORTMODE_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EParticleUVFlipMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleUVFlipMode = PyImport_AddModule("EParticleUVFlipMode");
#else                                                                                     
	PyObject* new__module_EParticleUVFlipMode = Py_InitModule3("EParticleUVFlipMode", NULL, NULL);
#endif

	PyObject* new_dict_EParticleUVFlipMode = PyModule_GetDict(new_module_EParticleUVFlipMode);
	PyDict_SetItemString(new_dict_EParticleUVFlipMode, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleUVFlipMode, "FlipUV", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleUVFlipMode, "FlipUOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleUVFlipMode, "FlipVOnly", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EParticleUVFlipMode, "RandomFlipUV", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EParticleUVFlipMode, "RandomFlipUOnly", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EParticleUVFlipMode, "RandomFlipVOnly", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EParticleUVFlipMode, "RandomFlipUVIndependent", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EParticleUVFlipMode, "EParticleUVFlipMode_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_ETrail2SourceMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETrail2SourceMethod = PyImport_AddModule("ETrail2SourceMethod");
#else                                                                                     
	PyObject* new__module_ETrail2SourceMethod = Py_InitModule3("ETrail2SourceMethod", NULL, NULL);
#endif

	PyObject* new_dict_ETrail2SourceMethod = PyModule_GetDict(new_module_ETrail2SourceMethod);
	PyDict_SetItemString(new_dict_ETrail2SourceMethod, "PET2SRCM_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETrail2SourceMethod, "PET2SRCM_Particle", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETrail2SourceMethod, "PET2SRCM_Actor", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETrail2SourceMethod, "PET2SRCM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EBeamTaperMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBeamTaperMethod = PyImport_AddModule("EBeamTaperMethod");
#else                                                                                     
	PyObject* new__module_EBeamTaperMethod = Py_InitModule3("EBeamTaperMethod", NULL, NULL);
#endif

	PyObject* new_dict_EBeamTaperMethod = PyModule_GetDict(new_module_EBeamTaperMethod);
	PyDict_SetItemString(new_dict_EBeamTaperMethod, "PEBTM_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBeamTaperMethod, "PEBTM_Full", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBeamTaperMethod, "PEBTM_Partial", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBeamTaperMethod, "PEBTM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EBeam2Method()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBeam2Method = PyImport_AddModule("EBeam2Method");
#else                                                                                     
	PyObject* new__module_EBeam2Method = Py_InitModule3("EBeam2Method", NULL, NULL);
#endif

	PyObject* new_dict_EBeam2Method = PyModule_GetDict(new_module_EBeam2Method);
	PyDict_SetItemString(new_dict_EBeam2Method, "PEB2M_Distance", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBeam2Method, "PEB2M_Target", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBeam2Method, "PEB2M_Branch", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBeam2Method, "PEB2M_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMeshCameraFacingOptions()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshCameraFacingOptions = PyImport_AddModule("EMeshCameraFacingOptions");
#else                                                                                     
	PyObject* new__module_EMeshCameraFacingOptions = Py_InitModule3("EMeshCameraFacingOptions", NULL, NULL);
#endif

	PyObject* new_dict_EMeshCameraFacingOptions = PyModule_GetDict(new_module_EMeshCameraFacingOptions);
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "XAxisFacing_NoUp", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "XAxisFacing_ZUp", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "XAxisFacing_NegativeZUp", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "XAxisFacing_YUp", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "XAxisFacing_NegativeYUp", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "LockedAxis_ZAxisFacing", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "LockedAxis_NegativeZAxisFacing", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "LockedAxis_YAxisFacing", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "LockedAxis_NegativeYAxisFacing", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "VelocityAligned_ZAxisFacing", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "VelocityAligned_NegativeZAxisFacing", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "VelocityAligned_YAxisFacing", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "VelocityAligned_NegativeYAxisFacing", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EMeshCameraFacingOptions, "EMeshCameraFacingOptions_MAX", Py_BuildValue("i", 13));

}
void unreal_export_uenum_EMeshCameraFacingUpAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshCameraFacingUpAxis = PyImport_AddModule("EMeshCameraFacingUpAxis");
#else                                                                                     
	PyObject* new__module_EMeshCameraFacingUpAxis = Py_InitModule3("EMeshCameraFacingUpAxis", NULL, NULL);
#endif

	PyObject* new_dict_EMeshCameraFacingUpAxis = PyModule_GetDict(new_module_EMeshCameraFacingUpAxis);
	PyDict_SetItemString(new_dict_EMeshCameraFacingUpAxis, "CameraFacing_NoneUP", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshCameraFacingUpAxis, "CameraFacing_ZUp", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshCameraFacingUpAxis, "CameraFacing_NegativeZUp", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMeshCameraFacingUpAxis, "CameraFacing_YUp", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMeshCameraFacingUpAxis, "CameraFacing_NegativeYUp", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMeshCameraFacingUpAxis, "CameraFacing_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EMeshScreenAlignment()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshScreenAlignment = PyImport_AddModule("EMeshScreenAlignment");
#else                                                                                     
	PyObject* new__module_EMeshScreenAlignment = Py_InitModule3("EMeshScreenAlignment", NULL, NULL);
#endif

	PyObject* new_dict_EMeshScreenAlignment = PyModule_GetDict(new_module_EMeshScreenAlignment);
	PyDict_SetItemString(new_dict_EMeshScreenAlignment, "PSMA_MeshFaceCameraWithRoll", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshScreenAlignment, "PSMA_MeshFaceCameraWithSpin", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshScreenAlignment, "PSMA_MeshFaceCameraWithLockedAxis", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMeshScreenAlignment, "PSMA_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETrailsRenderAxisOption()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETrailsRenderAxisOption = PyImport_AddModule("ETrailsRenderAxisOption");
#else                                                                                     
	PyObject* new__module_ETrailsRenderAxisOption = Py_InitModule3("ETrailsRenderAxisOption", NULL, NULL);
#endif

	PyObject* new_dict_ETrailsRenderAxisOption = PyModule_GetDict(new_module_ETrailsRenderAxisOption);
	PyDict_SetItemString(new_dict_ETrailsRenderAxisOption, "Trails_CameraUp", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETrailsRenderAxisOption, "Trails_SourceUp", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETrailsRenderAxisOption, "Trails_WorldUp", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETrailsRenderAxisOption, "Trails_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EParticleScreenAlignment()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleScreenAlignment = PyImport_AddModule("EParticleScreenAlignment");
#else                                                                                     
	PyObject* new__module_EParticleScreenAlignment = Py_InitModule3("EParticleScreenAlignment", NULL, NULL);
#endif

	PyObject* new_dict_EParticleScreenAlignment = PyModule_GetDict(new_module_EParticleScreenAlignment);
	PyDict_SetItemString(new_dict_EParticleScreenAlignment, "PSA_FacingCameraPosition", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleScreenAlignment, "PSA_Square", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleScreenAlignment, "PSA_Rectangle", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleScreenAlignment, "PSA_Velocity", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EParticleScreenAlignment, "PSA_AwayFromCenter", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EParticleScreenAlignment, "PSA_TypeSpecific", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EParticleScreenAlignment, "PSA_FacingCameraDistanceBlend", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EParticleScreenAlignment, "PSA_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EParticleSystemOcclusionBoundsMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleSystemOcclusionBoundsMethod = PyImport_AddModule("EParticleSystemOcclusionBoundsMethod");
#else                                                                                     
	PyObject* new__module_EParticleSystemOcclusionBoundsMethod = Py_InitModule3("EParticleSystemOcclusionBoundsMethod", NULL, NULL);
#endif

	PyObject* new_dict_EParticleSystemOcclusionBoundsMethod = PyModule_GetDict(new_module_EParticleSystemOcclusionBoundsMethod);
	PyDict_SetItemString(new_dict_EParticleSystemOcclusionBoundsMethod, "EPSOBM_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleSystemOcclusionBoundsMethod, "EPSOBM_ParticleBounds", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleSystemOcclusionBoundsMethod, "EPSOBM_CustomBounds", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleSystemOcclusionBoundsMethod, "EPSOBM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ParticleSystemLODMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ParticleSystemLODMethod = PyImport_AddModule("ParticleSystemLODMethod");
#else                                                                                     
	PyObject* new__module_ParticleSystemLODMethod = Py_InitModule3("ParticleSystemLODMethod", NULL, NULL);
#endif

	PyObject* new_dict_ParticleSystemLODMethod = PyModule_GetDict(new_module_ParticleSystemLODMethod);
	PyDict_SetItemString(new_dict_ParticleSystemLODMethod, "PARTICLESYSTEMLODMETHOD_Automatic", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ParticleSystemLODMethod, "PARTICLESYSTEMLODMETHOD_DirectSet", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ParticleSystemLODMethod, "PARTICLESYSTEMLODMETHOD_ActivateAutomatic", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ParticleSystemLODMethod, "PARTICLESYSTEMLODMETHOD_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EParticleSystemUpdateMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleSystemUpdateMode = PyImport_AddModule("EParticleSystemUpdateMode");
#else                                                                                     
	PyObject* new__module_EParticleSystemUpdateMode = Py_InitModule3("EParticleSystemUpdateMode", NULL, NULL);
#endif

	PyObject* new_dict_EParticleSystemUpdateMode = PyModule_GetDict(new_module_EParticleSystemUpdateMode);
	PyDict_SetItemString(new_dict_EParticleSystemUpdateMode, "EPSUM_RealTime", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleSystemUpdateMode, "EPSUM_FixedTime", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleSystemUpdateMode, "EPSUM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EParticleEventType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleEventType = PyImport_AddModule("EParticleEventType");
#else                                                                                     
	PyObject* new__module_EParticleEventType = Py_InitModule3("EParticleEventType", NULL, NULL);
#endif

	PyObject* new_dict_EParticleEventType = PyModule_GetDict(new_module_EParticleEventType);
	PyDict_SetItemString(new_dict_EParticleEventType, "EPET_Any", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleEventType, "EPET_Spawn", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleEventType, "EPET_Death", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleEventType, "EPET_Collision", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EParticleEventType, "EPET_Burst", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EParticleEventType, "EPET_Blueprint", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EParticleEventType, "EPET_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ParticleReplayState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ParticleReplayState = PyImport_AddModule("ParticleReplayState");
#else                                                                                     
	PyObject* new__module_ParticleReplayState = Py_InitModule3("ParticleReplayState", NULL, NULL);
#endif

	PyObject* new_dict_ParticleReplayState = PyModule_GetDict(new_module_ParticleReplayState);
	PyDict_SetItemString(new_dict_ParticleReplayState, "PRS_Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ParticleReplayState, "PRS_Capturing", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ParticleReplayState, "PRS_Replaying", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ParticleReplayState, "PRS_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EParticleSysParamType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EParticleSysParamType = PyImport_AddModule("EParticleSysParamType");
#else                                                                                     
	PyObject* new__module_EParticleSysParamType = Py_InitModule3("EParticleSysParamType", NULL, NULL);
#endif

	PyObject* new_dict_EParticleSysParamType = PyModule_GetDict(new_module_EParticleSysParamType);
	PyDict_SetItemString(new_dict_EParticleSysParamType, "PSPT_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EParticleSysParamType, "PSPT_Scalar", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EParticleSysParamType, "PSPT_ScalarRand", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EParticleSysParamType, "PSPT_Vector", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EParticleSysParamType, "PSPT_VectorRand", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EParticleSysParamType, "PSPT_Color", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EParticleSysParamType, "PSPT_Actor", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EParticleSysParamType, "PSPT_Material", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EParticleSysParamType, "PSPT_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_ESettingsLockedAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESettingsLockedAxis = PyImport_AddModule("ESettingsLockedAxis");
#else                                                                                     
	PyObject* new__module_ESettingsLockedAxis = Py_InitModule3("ESettingsLockedAxis", NULL, NULL);
#endif

	PyObject* new_dict_ESettingsLockedAxis = PyModule_GetDict(new_module_ESettingsLockedAxis);
	PyDict_SetItemString(new_dict_ESettingsLockedAxis, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESettingsLockedAxis, "X", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESettingsLockedAxis, "Y", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESettingsLockedAxis, "Z", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESettingsLockedAxis, "Invalid", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESettingsLockedAxis, "ESettingsLockedAxis_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ESettingsDOF()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESettingsDOF = PyImport_AddModule("ESettingsDOF");
#else                                                                                     
	PyObject* new__module_ESettingsDOF = Py_InitModule3("ESettingsDOF", NULL, NULL);
#endif

	PyObject* new_dict_ESettingsDOF = PyModule_GetDict(new_module_ESettingsDOF);
	PyDict_SetItemString(new_dict_ESettingsDOF, "Full3D", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESettingsDOF, "YZPlane", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESettingsDOF, "XZPlane", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESettingsDOF, "XYPlane", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESettingsDOF, "ESettingsDOF_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EFrictionCombineMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFrictionCombineMode = PyImport_AddModule("EFrictionCombineMode");
#else                                                                                     
	PyObject* new__module_EFrictionCombineMode = Py_InitModule3("EFrictionCombineMode", NULL, NULL);
#endif

	PyObject* new_dict_EFrictionCombineMode = PyModule_GetDict(new_module_EFrictionCombineMode);
	PyDict_SetItemString(new_dict_EFrictionCombineMode, "Average", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFrictionCombineMode, "Min", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFrictionCombineMode, "Multiply", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFrictionCombineMode, "Max", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFrictionCombineMode, "EFrictionCombineMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EViewTargetBlendFunction()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EViewTargetBlendFunction = PyImport_AddModule("EViewTargetBlendFunction");
#else                                                                                     
	PyObject* new__module_EViewTargetBlendFunction = Py_InitModule3("EViewTargetBlendFunction", NULL, NULL);
#endif

	PyObject* new_dict_EViewTargetBlendFunction = PyModule_GetDict(new_module_EViewTargetBlendFunction);
	PyDict_SetItemString(new_dict_EViewTargetBlendFunction, "VTBlend_Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EViewTargetBlendFunction, "VTBlend_Cubic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EViewTargetBlendFunction, "VTBlend_EaseIn", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EViewTargetBlendFunction, "VTBlend_EaseOut", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EViewTargetBlendFunction, "VTBlend_EaseInOut", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EViewTargetBlendFunction, "VTBlend_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EDynamicForceFeedbackAction()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDynamicForceFeedbackAction = PyImport_AddModule("EDynamicForceFeedbackAction");
#else                                                                                     
	PyObject* new__module_EDynamicForceFeedbackAction = Py_InitModule3("EDynamicForceFeedbackAction", NULL, NULL);
#endif

	PyObject* new_dict_EDynamicForceFeedbackAction = PyModule_GetDict(new_module_EDynamicForceFeedbackAction);
	PyDict_SetItemString(new_dict_EDynamicForceFeedbackAction, "Start", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDynamicForceFeedbackAction, "Update", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDynamicForceFeedbackAction, "Stop", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDynamicForceFeedbackAction, "EDynamicForceFeedbackAction_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ERendererStencilMask()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERendererStencilMask = PyImport_AddModule("ERendererStencilMask");
#else                                                                                     
	PyObject* new__module_ERendererStencilMask = Py_InitModule3("ERendererStencilMask", NULL, NULL);
#endif

	PyObject* new_dict_ERendererStencilMask = PyModule_GetDict(new_module_ERendererStencilMask);
	PyDict_SetItemString(new_dict_ERendererStencilMask, "ERSM_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERendererStencilMask, "ERSM_255", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERendererStencilMask, "ERSM_1", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERendererStencilMask, "ERSM_2", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERendererStencilMask, "ERSM_4", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ERendererStencilMask, "ERSM_8", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ERendererStencilMask, "ERSM_16", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ERendererStencilMask, "ERSM_32", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ERendererStencilMask, "ERSM_64", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ERendererStencilMask, "ERSM_128", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ERendererStencilMask, "ERSM_MAX", Py_BuildValue("i", 10));

}
void unreal_export_uenum_EHasCustomNavigableGeometry()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHasCustomNavigableGeometry = PyImport_AddModule("EHasCustomNavigableGeometry");
#else                                                                                     
	PyObject* new__module_EHasCustomNavigableGeometry = Py_InitModule3("EHasCustomNavigableGeometry", NULL, NULL);
#endif

	PyObject* new_dict_EHasCustomNavigableGeometry = PyModule_GetDict(new_module_EHasCustomNavigableGeometry);
	PyDict_SetItemString(new_dict_EHasCustomNavigableGeometry, "No", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHasCustomNavigableGeometry, "Yes", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHasCustomNavigableGeometry, "EvenIfNotCollidable", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHasCustomNavigableGeometry, "DontExport", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EHasCustomNavigableGeometry, "EHasCustomNavigableGeometry_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ECanBeCharacterBase()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECanBeCharacterBase = PyImport_AddModule("ECanBeCharacterBase");
#else                                                                                     
	PyObject* new__module_ECanBeCharacterBase = Py_InitModule3("ECanBeCharacterBase", NULL, NULL);
#endif

	PyObject* new_dict_ECanBeCharacterBase = PyModule_GetDict(new_module_ECanBeCharacterBase);
	PyDict_SetItemString(new_dict_ECanBeCharacterBase, "ECB_No", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECanBeCharacterBase, "ECB_Yes", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECanBeCharacterBase, "ECB_Owner", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECanBeCharacterBase, "ECB_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ERichCurveExtrapolation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERichCurveExtrapolation = PyImport_AddModule("ERichCurveExtrapolation");
#else                                                                                     
	PyObject* new__module_ERichCurveExtrapolation = Py_InitModule3("ERichCurveExtrapolation", NULL, NULL);
#endif

	PyObject* new_dict_ERichCurveExtrapolation = PyModule_GetDict(new_module_ERichCurveExtrapolation);
	PyDict_SetItemString(new_dict_ERichCurveExtrapolation, "RCCE_Cycle", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERichCurveExtrapolation, "RCCE_CycleWithOffset", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERichCurveExtrapolation, "RCCE_Oscillate", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERichCurveExtrapolation, "RCCE_Linear", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERichCurveExtrapolation, "RCCE_Constant", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ERichCurveExtrapolation, "RCCE_None", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ERichCurveExtrapolation, "RCCE_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ERichCurveInterpMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERichCurveInterpMode = PyImport_AddModule("ERichCurveInterpMode");
#else                                                                                     
	PyObject* new__module_ERichCurveInterpMode = Py_InitModule3("ERichCurveInterpMode", NULL, NULL);
#endif

	PyObject* new_dict_ERichCurveInterpMode = PyModule_GetDict(new_module_ERichCurveInterpMode);
	PyDict_SetItemString(new_dict_ERichCurveInterpMode, "RCIM_Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERichCurveInterpMode, "RCIM_Constant", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERichCurveInterpMode, "RCIM_Cubic", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERichCurveInterpMode, "RCIM_None", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERichCurveInterpMode, "RCIM_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EReflectionSourceType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EReflectionSourceType = PyImport_AddModule("EReflectionSourceType");
#else                                                                                     
	PyObject* new__module_EReflectionSourceType = Py_InitModule3("EReflectionSourceType", NULL, NULL);
#endif

	PyObject* new_dict_EReflectionSourceType = PyModule_GetDict(new_module_EReflectionSourceType);
	PyDict_SetItemString(new_dict_EReflectionSourceType, "CapturedScene", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EReflectionSourceType, "SpecifiedCubemap", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EReflectionSourceType, "EReflectionSourceType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EDefaultBackBufferPixelFormat()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDefaultBackBufferPixelFormat = PyImport_AddModule("EDefaultBackBufferPixelFormat");
#else                                                                                     
	PyObject* new__module_EDefaultBackBufferPixelFormat = Py_InitModule3("EDefaultBackBufferPixelFormat", NULL, NULL);
#endif

	PyObject* new_dict_EDefaultBackBufferPixelFormat = PyModule_GetDict(new_module_EDefaultBackBufferPixelFormat);
	PyDict_SetItemString(new_dict_EDefaultBackBufferPixelFormat, "DBBPF_B8G8R8A8", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDefaultBackBufferPixelFormat, "DBBPF_A16B16G16R16_DEPRECATED", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDefaultBackBufferPixelFormat, "DBBPF_FloatRGB_DEPRECATED", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDefaultBackBufferPixelFormat, "DBBPF_FloatRGBA", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDefaultBackBufferPixelFormat, "DBBPF_A2B10G10R10", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EDefaultBackBufferPixelFormat, "DBBPF_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EAutoExposureMethodUI()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAutoExposureMethodUI = PyImport_AddModule("EAutoExposureMethodUI");
#else                                                                                     
	PyObject* new__module_EAutoExposureMethodUI = Py_InitModule3("EAutoExposureMethodUI", NULL, NULL);
#endif

	PyObject* new_dict_EAutoExposureMethodUI = PyModule_GetDict(new_module_EAutoExposureMethodUI);
	PyDict_SetItemString(new_dict_EAutoExposureMethodUI, "AEM_Histogram", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAutoExposureMethodUI, "AEM_Basic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAutoExposureMethodUI, "AEM_Manual", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAutoExposureMethodUI, "AEM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAlphaChannelMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAlphaChannelMode = PyImport_AddModule("EAlphaChannelMode");
#else                                                                                     
	PyObject* new__module_EAlphaChannelMode = Py_InitModule3("EAlphaChannelMode", NULL, NULL);
#endif

	PyObject* new_dict_EAlphaChannelMode = PyModule_GetDict(new_module_EAlphaChannelMode);
	PyDict_SetItemString(new_dict_EAlphaChannelMode, "Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAlphaChannelMode, "LinearColorSpaceOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAlphaChannelMode, "AllowThroughTonemapper", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAlphaChannelMode, "EAlphaChannelMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEarlyZPass()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEarlyZPass = PyImport_AddModule("EEarlyZPass");
#else                                                                                     
	PyObject* new__module_EEarlyZPass = Py_InitModule3("EEarlyZPass", NULL, NULL);
#endif

	PyObject* new_dict_EEarlyZPass = PyModule_GetDict(new_module_EEarlyZPass);
	PyDict_SetItemString(new_dict_EEarlyZPass, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEarlyZPass, "OpaqueOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEarlyZPass, "OpaqueAndMasked", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEarlyZPass, "Auto", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEarlyZPass, "EEarlyZPass_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ECustomDepthStencil()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECustomDepthStencil = PyImport_AddModule("ECustomDepthStencil");
#else                                                                                     
	PyObject* new__module_ECustomDepthStencil = Py_InitModule3("ECustomDepthStencil", NULL, NULL);
#endif

	PyObject* new_dict_ECustomDepthStencil = PyModule_GetDict(new_module_ECustomDepthStencil);
	PyDict_SetItemString(new_dict_ECustomDepthStencil, "Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECustomDepthStencil, "Enabled", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECustomDepthStencil, "EnabledOnDemand", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECustomDepthStencil, "EnabledWithStencil", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECustomDepthStencil, "ECustomDepthStencil_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMobileMSAASampleCount()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMobileMSAASampleCount = PyImport_AddModule("EMobileMSAASampleCount");
#else                                                                                     
	PyObject* new__module_EMobileMSAASampleCount = Py_InitModule3("EMobileMSAASampleCount", NULL, NULL);
#endif

	PyObject* new_dict_EMobileMSAASampleCount = PyModule_GetDict(new_module_EMobileMSAASampleCount);
	PyDict_SetItemString(new_dict_EMobileMSAASampleCount, "One", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMobileMSAASampleCount, "Two", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMobileMSAASampleCount, "Four", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMobileMSAASampleCount, "Eight", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMobileMSAASampleCount, "EMobileMSAASampleCount_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_ECompositingSampleCount()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECompositingSampleCount = PyImport_AddModule("ECompositingSampleCount");
#else                                                                                     
	PyObject* new__module_ECompositingSampleCount = Py_InitModule3("ECompositingSampleCount", NULL, NULL);
#endif

	PyObject* new_dict_ECompositingSampleCount = PyModule_GetDict(new_module_ECompositingSampleCount);
	PyDict_SetItemString(new_dict_ECompositingSampleCount, "One", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECompositingSampleCount, "Two", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECompositingSampleCount, "Four", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ECompositingSampleCount, "Eight", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ECompositingSampleCount, "ECompositingSampleCount_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_EClearSceneOptions()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EClearSceneOptions = PyImport_AddModule("EClearSceneOptions");
#else                                                                                     
	PyObject* new__module_EClearSceneOptions = Py_InitModule3("EClearSceneOptions", NULL, NULL);
#endif

	PyObject* new_dict_EClearSceneOptions = PyModule_GetDict(new_module_EClearSceneOptions);
	PyDict_SetItemString(new_dict_EClearSceneOptions, "NoClear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EClearSceneOptions, "HardwareClear", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EClearSceneOptions, "QuadAtMaxZ", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EClearSceneOptions, "EClearSceneOptions_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EReporterLineStyle()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EReporterLineStyle = PyImport_AddModule("EReporterLineStyle");
#else                                                                                     
	PyObject* new__module_EReporterLineStyle = Py_InitModule3("EReporterLineStyle", NULL, NULL);
#endif

	PyObject* new_dict_EReporterLineStyle = PyModule_GetDict(new_module_EReporterLineStyle);
	PyDict_SetItemString(new_dict_EReporterLineStyle, "Line", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EReporterLineStyle, "Dash", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EReporterLineStyle, "EReporterLineStyle_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELegendPosition()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELegendPosition = PyImport_AddModule("ELegendPosition");
#else                                                                                     
	PyObject* new__module_ELegendPosition = Py_InitModule3("ELegendPosition", NULL, NULL);
#endif

	PyObject* new_dict_ELegendPosition = PyModule_GetDict(new_module_ELegendPosition);
	PyDict_SetItemString(new_dict_ELegendPosition, "Outside", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELegendPosition, "Inside", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELegendPosition, "ELegendPosition_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EGraphDataStyle()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGraphDataStyle = PyImport_AddModule("EGraphDataStyle");
#else                                                                                     
	PyObject* new__module_EGraphDataStyle = Py_InitModule3("EGraphDataStyle", NULL, NULL);
#endif

	PyObject* new_dict_EGraphDataStyle = PyModule_GetDict(new_module_EGraphDataStyle);
	PyDict_SetItemString(new_dict_EGraphDataStyle, "Lines", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGraphDataStyle, "Filled", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGraphDataStyle, "EGraphDataStyle_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EGraphAxisStyle()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGraphAxisStyle = PyImport_AddModule("EGraphAxisStyle");
#else                                                                                     
	PyObject* new__module_EGraphAxisStyle = Py_InitModule3("EGraphAxisStyle", NULL, NULL);
#endif

	PyObject* new_dict_EGraphAxisStyle = PyModule_GetDict(new_module_EGraphAxisStyle);
	PyDict_SetItemString(new_dict_EGraphAxisStyle, "Lines", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGraphAxisStyle, "Notches", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGraphAxisStyle, "Grid", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGraphAxisStyle, "EGraphAxisStyle_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ERichCurveKeyTimeCompressionFormat()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERichCurveKeyTimeCompressionFormat = PyImport_AddModule("ERichCurveKeyTimeCompressionFormat");
#else                                                                                     
	PyObject* new__module_ERichCurveKeyTimeCompressionFormat = Py_InitModule3("ERichCurveKeyTimeCompressionFormat", NULL, NULL);
#endif

	PyObject* new_dict_ERichCurveKeyTimeCompressionFormat = PyModule_GetDict(new_module_ERichCurveKeyTimeCompressionFormat);
	PyDict_SetItemString(new_dict_ERichCurveKeyTimeCompressionFormat, "RCKTCF_uint16", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERichCurveKeyTimeCompressionFormat, "RCKTCF_float32", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERichCurveKeyTimeCompressionFormat, "RCKTCF_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ERichCurveCompressionFormat()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERichCurveCompressionFormat = PyImport_AddModule("ERichCurveCompressionFormat");
#else                                                                                     
	PyObject* new__module_ERichCurveCompressionFormat = Py_InitModule3("ERichCurveCompressionFormat", NULL, NULL);
#endif

	PyObject* new_dict_ERichCurveCompressionFormat = PyModule_GetDict(new_module_ERichCurveCompressionFormat);
	PyDict_SetItemString(new_dict_ERichCurveCompressionFormat, "RCCF_Empty", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERichCurveCompressionFormat, "RCCF_Constant", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERichCurveCompressionFormat, "RCCF_Linear", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERichCurveCompressionFormat, "RCCF_Cubic", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERichCurveCompressionFormat, "RCCF_Mixed", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ERichCurveCompressionFormat, "RCCF_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ERichCurveTangentWeightMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERichCurveTangentWeightMode = PyImport_AddModule("ERichCurveTangentWeightMode");
#else                                                                                     
	PyObject* new__module_ERichCurveTangentWeightMode = Py_InitModule3("ERichCurveTangentWeightMode", NULL, NULL);
#endif

	PyObject* new_dict_ERichCurveTangentWeightMode = PyModule_GetDict(new_module_ERichCurveTangentWeightMode);
	PyDict_SetItemString(new_dict_ERichCurveTangentWeightMode, "RCTWM_WeightedNone", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERichCurveTangentWeightMode, "RCTWM_WeightedArrive", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERichCurveTangentWeightMode, "RCTWM_WeightedLeave", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERichCurveTangentWeightMode, "RCTWM_WeightedBoth", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERichCurveTangentWeightMode, "RCTWM_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ERichCurveTangentMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERichCurveTangentMode = PyImport_AddModule("ERichCurveTangentMode");
#else                                                                                     
	PyObject* new__module_ERichCurveTangentMode = Py_InitModule3("ERichCurveTangentMode", NULL, NULL);
#endif

	PyObject* new_dict_ERichCurveTangentMode = PyModule_GetDict(new_module_ERichCurveTangentMode);
	PyDict_SetItemString(new_dict_ERichCurveTangentMode, "RCTM_Auto", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERichCurveTangentMode, "RCTM_User", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERichCurveTangentMode, "RCTM_Break", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERichCurveTangentMode, "RCTM_None", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERichCurveTangentMode, "RCTM_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EConstraintTransform()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EConstraintTransform = PyImport_AddModule("EConstraintTransform");
#else                                                                                     
	PyObject* new__module_EConstraintTransform = Py_InitModule3("EConstraintTransform", NULL, NULL);
#endif

	PyObject* new_dict_EConstraintTransform = PyModule_GetDict(new_module_EConstraintTransform);
	PyDict_SetItemString(new_dict_EConstraintTransform, "Absolute", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EConstraintTransform, "Relative", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EConstraintTransform, "EConstraintTransform_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EControlConstraint()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EControlConstraint = PyImport_AddModule("EControlConstraint");
#else                                                                                     
	PyObject* new__module_EControlConstraint = Py_InitModule3("EControlConstraint", NULL, NULL);
#endif

	PyObject* new_dict_EControlConstraint = PyModule_GetDict(new_module_EControlConstraint);
	PyDict_SetItemString(new_dict_EControlConstraint, "Orientation", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EControlConstraint, "Translation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EControlConstraint, "MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ERootMotionFinishVelocityMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERootMotionFinishVelocityMode = PyImport_AddModule("ERootMotionFinishVelocityMode");
#else                                                                                     
	PyObject* new__module_ERootMotionFinishVelocityMode = Py_InitModule3("ERootMotionFinishVelocityMode", NULL, NULL);
#endif

	PyObject* new_dict_ERootMotionFinishVelocityMode = PyModule_GetDict(new_module_ERootMotionFinishVelocityMode);
	PyDict_SetItemString(new_dict_ERootMotionFinishVelocityMode, "MaintainLastRootMotionVelocity", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERootMotionFinishVelocityMode, "SetVelocity", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERootMotionFinishVelocityMode, "ClampVelocity", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERootMotionFinishVelocityMode, "ERootMotionFinishVelocityMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ERootMotionSourceSettingsFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERootMotionSourceSettingsFlags = PyImport_AddModule("ERootMotionSourceSettingsFlags");
#else                                                                                     
	PyObject* new__module_ERootMotionSourceSettingsFlags = Py_InitModule3("ERootMotionSourceSettingsFlags", NULL, NULL);
#endif

	PyObject* new_dict_ERootMotionSourceSettingsFlags = PyModule_GetDict(new_module_ERootMotionSourceSettingsFlags);
	PyDict_SetItemString(new_dict_ERootMotionSourceSettingsFlags, "UseSensitiveLiftoffCheck", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERootMotionSourceSettingsFlags, "DisablePartialEndTick", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERootMotionSourceSettingsFlags, "ERootMotionSourceSettingsFlags_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ERootMotionSourceStatusFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERootMotionSourceStatusFlags = PyImport_AddModule("ERootMotionSourceStatusFlags");
#else                                                                                     
	PyObject* new__module_ERootMotionSourceStatusFlags = Py_InitModule3("ERootMotionSourceStatusFlags", NULL, NULL);
#endif

	PyObject* new_dict_ERootMotionSourceStatusFlags = PyModule_GetDict(new_module_ERootMotionSourceStatusFlags);
	PyDict_SetItemString(new_dict_ERootMotionSourceStatusFlags, "Prepared", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERootMotionSourceStatusFlags, "Finished", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERootMotionSourceStatusFlags, "MarkedForRemoval", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ERootMotionSourceStatusFlags, "ERootMotionSourceStatusFlags_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ERootMotionAccumulateMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERootMotionAccumulateMode = PyImport_AddModule("ERootMotionAccumulateMode");
#else                                                                                     
	PyObject* new__module_ERootMotionAccumulateMode = Py_InitModule3("ERootMotionAccumulateMode", NULL, NULL);
#endif

	PyObject* new_dict_ERootMotionAccumulateMode = PyModule_GetDict(new_module_ERootMotionAccumulateMode);
	PyDict_SetItemString(new_dict_ERootMotionAccumulateMode, "Override", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERootMotionAccumulateMode, "Additive", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERootMotionAccumulateMode, "ERootMotionAccumulateMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ERuntimeVirtualTextureMainPassType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERuntimeVirtualTextureMainPassType = PyImport_AddModule("ERuntimeVirtualTextureMainPassType");
#else                                                                                     
	PyObject* new__module_ERuntimeVirtualTextureMainPassType = Py_InitModule3("ERuntimeVirtualTextureMainPassType", NULL, NULL);
#endif

	PyObject* new_dict_ERuntimeVirtualTextureMainPassType = PyModule_GetDict(new_module_ERuntimeVirtualTextureMainPassType);
	PyDict_SetItemString(new_dict_ERuntimeVirtualTextureMainPassType, "Never", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERuntimeVirtualTextureMainPassType, "Exclusive", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERuntimeVirtualTextureMainPassType, "Always", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERuntimeVirtualTextureMainPassType, "ERuntimeVirtualTextureMainPassType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ERuntimeVirtualTextureMaterialType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERuntimeVirtualTextureMaterialType = PyImport_AddModule("ERuntimeVirtualTextureMaterialType");
#else                                                                                     
	PyObject* new__module_ERuntimeVirtualTextureMaterialType = Py_InitModule3("ERuntimeVirtualTextureMaterialType", NULL, NULL);
#endif

	PyObject* new_dict_ERuntimeVirtualTextureMaterialType = PyModule_GetDict(new_module_ERuntimeVirtualTextureMaterialType);
	PyDict_SetItemString(new_dict_ERuntimeVirtualTextureMaterialType, "BaseColor", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERuntimeVirtualTextureMaterialType, "BaseColor_Normal", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERuntimeVirtualTextureMaterialType, "BaseColor_Normal_Specular", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERuntimeVirtualTextureMaterialType, "Count", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERuntimeVirtualTextureMaterialType, "ERuntimeVirtualTextureMaterialType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EReflectedAndRefractedRayTracedShadows()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EReflectedAndRefractedRayTracedShadows = PyImport_AddModule("EReflectedAndRefractedRayTracedShadows");
#else                                                                                     
	PyObject* new__module_EReflectedAndRefractedRayTracedShadows = Py_InitModule3("EReflectedAndRefractedRayTracedShadows", NULL, NULL);
#endif

	PyObject* new_dict_EReflectedAndRefractedRayTracedShadows = PyModule_GetDict(new_module_EReflectedAndRefractedRayTracedShadows);
	PyDict_SetItemString(new_dict_EReflectedAndRefractedRayTracedShadows, "Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EReflectedAndRefractedRayTracedShadows, "Hard_shadows", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EReflectedAndRefractedRayTracedShadows, "Area_shadows", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EReflectedAndRefractedRayTracedShadows, "EReflectedAndRefractedRayTracedShadows_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETranslucencyType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETranslucencyType = PyImport_AddModule("ETranslucencyType");
#else                                                                                     
	PyObject* new__module_ETranslucencyType = Py_InitModule3("ETranslucencyType", NULL, NULL);
#endif

	PyObject* new_dict_ETranslucencyType = PyModule_GetDict(new_module_ETranslucencyType);
	PyDict_SetItemString(new_dict_ETranslucencyType, "Raster", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETranslucencyType, "RayTracing", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETranslucencyType, "ETranslucencyType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EReflectionsType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EReflectionsType = PyImport_AddModule("EReflectionsType");
#else                                                                                     
	PyObject* new__module_EReflectionsType = Py_InitModule3("EReflectionsType", NULL, NULL);
#endif

	PyObject* new_dict_EReflectionsType = PyModule_GetDict(new_module_EReflectionsType);
	PyDict_SetItemString(new_dict_EReflectionsType, "ScreenSpace", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EReflectionsType, "RayTracing", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EReflectionsType, "EReflectionsType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELightUnits()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELightUnits = PyImport_AddModule("ELightUnits");
#else                                                                                     
	PyObject* new__module_ELightUnits = Py_InitModule3("ELightUnits", NULL, NULL);
#endif

	PyObject* new_dict_ELightUnits = PyModule_GetDict(new_module_ELightUnits);
	PyDict_SetItemString(new_dict_ELightUnits, "Unitless", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELightUnits, "Candelas", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELightUnits, "Lumens", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELightUnits, "ELightUnits_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EBloomMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBloomMethod = PyImport_AddModule("EBloomMethod");
#else                                                                                     
	PyObject* new__module_EBloomMethod = Py_InitModule3("EBloomMethod", NULL, NULL);
#endif

	PyObject* new_dict_EBloomMethod = PyModule_GetDict(new_module_EBloomMethod);
	PyDict_SetItemString(new_dict_EBloomMethod, "BM_SOG", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBloomMethod, "BM_FFT", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBloomMethod, "BM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EAutoExposureMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAutoExposureMethod = PyImport_AddModule("EAutoExposureMethod");
#else                                                                                     
	PyObject* new__module_EAutoExposureMethod = Py_InitModule3("EAutoExposureMethod", NULL, NULL);
#endif

	PyObject* new_dict_EAutoExposureMethod = PyModule_GetDict(new_module_EAutoExposureMethod);
	PyDict_SetItemString(new_dict_EAutoExposureMethod, "AEM_Histogram", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAutoExposureMethod, "AEM_Basic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAutoExposureMethod, "AEM_Manual", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAutoExposureMethod, "AEM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAntiAliasingMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAntiAliasingMethod = PyImport_AddModule("EAntiAliasingMethod");
#else                                                                                     
	PyObject* new__module_EAntiAliasingMethod = Py_InitModule3("EAntiAliasingMethod", NULL, NULL);
#endif

	PyObject* new_dict_EAntiAliasingMethod = PyModule_GetDict(new_module_EAntiAliasingMethod);
	PyDict_SetItemString(new_dict_EAntiAliasingMethod, "AAM_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAntiAliasingMethod, "AAM_FXAA", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAntiAliasingMethod, "AAM_TemporalAA", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAntiAliasingMethod, "AAM_MSAA", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAntiAliasingMethod, "AAM_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EDepthOfFieldMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDepthOfFieldMethod = PyImport_AddModule("EDepthOfFieldMethod");
#else                                                                                     
	PyObject* new__module_EDepthOfFieldMethod = Py_InitModule3("EDepthOfFieldMethod", NULL, NULL);
#endif

	PyObject* new_dict_EDepthOfFieldMethod = PyModule_GetDict(new_module_EDepthOfFieldMethod);
	PyDict_SetItemString(new_dict_EDepthOfFieldMethod, "DOFM_BokehDOF", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDepthOfFieldMethod, "DOFM_Gaussian", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDepthOfFieldMethod, "DOFM_CircleDOF", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDepthOfFieldMethod, "DOFM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESceneCapturePrimitiveRenderMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESceneCapturePrimitiveRenderMode = PyImport_AddModule("ESceneCapturePrimitiveRenderMode");
#else                                                                                     
	PyObject* new__module_ESceneCapturePrimitiveRenderMode = Py_InitModule3("ESceneCapturePrimitiveRenderMode", NULL, NULL);
#endif

	PyObject* new_dict_ESceneCapturePrimitiveRenderMode = PyModule_GetDict(new_module_ESceneCapturePrimitiveRenderMode);
	PyDict_SetItemString(new_dict_ESceneCapturePrimitiveRenderMode, "PRM_LegacySceneCapture", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESceneCapturePrimitiveRenderMode, "PRM_RenderScenePrimitives", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESceneCapturePrimitiveRenderMode, "PRM_UseShowOnlyList", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESceneCapturePrimitiveRenderMode, "PRM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMaterialProperty()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaterialProperty = PyImport_AddModule("EMaterialProperty");
#else                                                                                     
	PyObject* new__module_EMaterialProperty = Py_InitModule3("EMaterialProperty", NULL, NULL);
#endif

	PyObject* new_dict_EMaterialProperty = PyModule_GetDict(new_module_EMaterialProperty);
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_EmissiveColor", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_Opacity", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_OpacityMask", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_DiffuseColor", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_SpecularColor", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_BaseColor", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_Metallic", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_Specular", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_Roughness", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_Normal", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_WorldPositionOffset", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_WorldDisplacement", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_TessellationMultiplier", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_SubsurfaceColor", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_CustomData0", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_CustomData1", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_AmbientOcclusion", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_Refraction", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_CustomizedUVs0", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_CustomizedUVs1", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_CustomizedUVs2", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_CustomizedUVs3", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_CustomizedUVs4", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_CustomizedUVs5", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_CustomizedUVs6", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_CustomizedUVs7", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_PixelDepthOffset", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_ShadingModel", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_MaterialAttributes", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_CustomOutput", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_EMaterialProperty, "MP_MAX", Py_BuildValue("i", 30));

}
void unreal_export_uenum_EPhysicsTransformUpdateMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPhysicsTransformUpdateMode = PyImport_AddModule("EPhysicsTransformUpdateMode");
#else                                                                                     
	PyObject* new__module_EPhysicsTransformUpdateMode = Py_InitModule3("EPhysicsTransformUpdateMode", NULL, NULL);
#endif

	PyObject* new_dict_EPhysicsTransformUpdateMode = PyModule_GetDict(new_module_EPhysicsTransformUpdateMode);
	PyDict_SetItemString(new_dict_EPhysicsTransformUpdateMode, "SimulationUpatesComponentTransform", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPhysicsTransformUpdateMode, "ComponentTransformIsKinematic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPhysicsTransformUpdateMode, "EPhysicsTransformUpdateMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EAnimationMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAnimationMode = PyImport_AddModule("EAnimationMode");
#else                                                                                     
	PyObject* new__module_EAnimationMode = Py_InitModule3("EAnimationMode", NULL, NULL);
#endif

	PyObject* new_dict_EAnimationMode = PyModule_GetDict(new_module_EAnimationMode);
	PyDict_SetItemString(new_dict_EAnimationMode, "AnimationBlueprint", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAnimationMode, "AnimationSingleNode", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAnimationMode, "AnimationCustomMode", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAnimationMode, "EAnimationMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EKinematicBonesUpdateToPhysics()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EKinematicBonesUpdateToPhysics = PyImport_AddModule("EKinematicBonesUpdateToPhysics");
#else                                                                                     
	PyObject* new__module_EKinematicBonesUpdateToPhysics = Py_InitModule3("EKinematicBonesUpdateToPhysics", NULL, NULL);
#endif

	PyObject* new_dict_EKinematicBonesUpdateToPhysics = PyModule_GetDict(new_module_EKinematicBonesUpdateToPhysics);
	PyDict_SetItemString(new_dict_EKinematicBonesUpdateToPhysics, "SkipSimulatingBones", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EKinematicBonesUpdateToPhysics, "SkipAllBones", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EKinematicBonesUpdateToPhysics, "EKinematicBonesUpdateToPhysics_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EAnimCurveType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAnimCurveType = PyImport_AddModule("EAnimCurveType");
#else                                                                                     
	PyObject* new__module_EAnimCurveType = Py_InitModule3("EAnimCurveType", NULL, NULL);
#endif

	PyObject* new_dict_EAnimCurveType = PyModule_GetDict(new_module_EAnimCurveType);
	PyDict_SetItemString(new_dict_EAnimCurveType, "AttributeCurve", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAnimCurveType, "MaterialCurve", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAnimCurveType, "MorphTargetCurve", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAnimCurveType, "MaxAnimCurveType", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAnimCurveType, "EAnimCurveType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EBoneFilterActionOption()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBoneFilterActionOption = PyImport_AddModule("EBoneFilterActionOption");
#else                                                                                     
	PyObject* new__module_EBoneFilterActionOption = Py_InitModule3("EBoneFilterActionOption", NULL, NULL);
#endif

	PyObject* new_dict_EBoneFilterActionOption = PyModule_GetDict(new_module_EBoneFilterActionOption);
	PyDict_SetItemString(new_dict_EBoneFilterActionOption, "Remove", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBoneFilterActionOption, "Keep", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBoneFilterActionOption, "Invalid", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBoneFilterActionOption, "EBoneFilterActionOption_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_SkeletalMeshOptimizationImportance()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_SkeletalMeshOptimizationImportance = PyImport_AddModule("SkeletalMeshOptimizationImportance");
#else                                                                                     
	PyObject* new__module_SkeletalMeshOptimizationImportance = Py_InitModule3("SkeletalMeshOptimizationImportance", NULL, NULL);
#endif

	PyObject* new_dict_SkeletalMeshOptimizationImportance = PyModule_GetDict(new_module_SkeletalMeshOptimizationImportance);
	PyDict_SetItemString(new_dict_SkeletalMeshOptimizationImportance, "SMOI_Off", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_SkeletalMeshOptimizationImportance, "SMOI_Lowest", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_SkeletalMeshOptimizationImportance, "SMOI_Low", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_SkeletalMeshOptimizationImportance, "SMOI_Normal", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_SkeletalMeshOptimizationImportance, "SMOI_High", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_SkeletalMeshOptimizationImportance, "SMOI_Highest", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_SkeletalMeshOptimizationImportance, "SMOI_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_SkeletalMeshOptimizationType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_SkeletalMeshOptimizationType = PyImport_AddModule("SkeletalMeshOptimizationType");
#else                                                                                     
	PyObject* new__module_SkeletalMeshOptimizationType = Py_InitModule3("SkeletalMeshOptimizationType", NULL, NULL);
#endif

	PyObject* new_dict_SkeletalMeshOptimizationType = PyModule_GetDict(new_module_SkeletalMeshOptimizationType);
	PyDict_SetItemString(new_dict_SkeletalMeshOptimizationType, "SMOT_NumOfTriangles", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_SkeletalMeshOptimizationType, "SMOT_MaxDeviation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_SkeletalMeshOptimizationType, "SMOT_TriangleOrDeviation", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_SkeletalMeshOptimizationType, "SMOT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_SkeletalMeshTerminationCriterion()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_SkeletalMeshTerminationCriterion = PyImport_AddModule("SkeletalMeshTerminationCriterion");
#else                                                                                     
	PyObject* new__module_SkeletalMeshTerminationCriterion = Py_InitModule3("SkeletalMeshTerminationCriterion", NULL, NULL);
#endif

	PyObject* new_dict_SkeletalMeshTerminationCriterion = PyModule_GetDict(new_module_SkeletalMeshTerminationCriterion);
	PyDict_SetItemString(new_dict_SkeletalMeshTerminationCriterion, "SMTC_NumOfTriangles", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_SkeletalMeshTerminationCriterion, "SMTC_NumOfVerts", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_SkeletalMeshTerminationCriterion, "SMTC_TriangleOrVert", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_SkeletalMeshTerminationCriterion, "SMTC_AbsNumOfTriangles", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_SkeletalMeshTerminationCriterion, "SMTC_AbsNumOfVerts", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_SkeletalMeshTerminationCriterion, "SMTC_AbsTriangleOrVert", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_SkeletalMeshTerminationCriterion, "SMTC_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EBoneTranslationRetargetingMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBoneTranslationRetargetingMode = PyImport_AddModule("EBoneTranslationRetargetingMode");
#else                                                                                     
	PyObject* new__module_EBoneTranslationRetargetingMode = Py_InitModule3("EBoneTranslationRetargetingMode", NULL, NULL);
#endif

	PyObject* new_dict_EBoneTranslationRetargetingMode = PyModule_GetDict(new_module_EBoneTranslationRetargetingMode);
	PyDict_SetItemString(new_dict_EBoneTranslationRetargetingMode, "Animation", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBoneTranslationRetargetingMode, "Skeleton", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBoneTranslationRetargetingMode, "AnimationScaled", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBoneTranslationRetargetingMode, "AnimationRelative", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EBoneTranslationRetargetingMode, "OrientAndScale", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EBoneTranslationRetargetingMode, "EBoneTranslationRetargetingMode_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EBoneSpaces()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBoneSpaces = PyImport_AddModule("EBoneSpaces");
#else                                                                                     
	PyObject* new__module_EBoneSpaces = Py_InitModule3("EBoneSpaces", NULL, NULL);
#endif

	PyObject* new_dict_EBoneSpaces = PyModule_GetDict(new_module_EBoneSpaces);
	PyDict_SetItemString(new_dict_EBoneSpaces, "WorldSpace", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBoneSpaces, "ComponentSpace", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBoneSpaces, "EBoneSpaces_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EVisibilityBasedAnimTickOption()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVisibilityBasedAnimTickOption = PyImport_AddModule("EVisibilityBasedAnimTickOption");
#else                                                                                     
	PyObject* new__module_EVisibilityBasedAnimTickOption = Py_InitModule3("EVisibilityBasedAnimTickOption", NULL, NULL);
#endif

	PyObject* new_dict_EVisibilityBasedAnimTickOption = PyModule_GetDict(new_module_EVisibilityBasedAnimTickOption);
	PyDict_SetItemString(new_dict_EVisibilityBasedAnimTickOption, "AlwaysTickPoseAndRefreshBones", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVisibilityBasedAnimTickOption, "AlwaysTickPose", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVisibilityBasedAnimTickOption, "OnlyTickMontagesWhenNotRendered", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVisibilityBasedAnimTickOption, "OnlyTickPoseWhenRendered", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EVisibilityBasedAnimTickOption, "EVisibilityBasedAnimTickOption_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EPhysBodyOp()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPhysBodyOp = PyImport_AddModule("EPhysBodyOp");
#else                                                                                     
	PyObject* new__module_EPhysBodyOp = Py_InitModule3("EPhysBodyOp", NULL, NULL);
#endif

	PyObject* new_dict_EPhysBodyOp = PyModule_GetDict(new_module_EPhysBodyOp);
	PyDict_SetItemString(new_dict_EPhysBodyOp, "PBO_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPhysBodyOp, "PBO_Term", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPhysBodyOp, "PBO_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EBoneVisibilityStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBoneVisibilityStatus = PyImport_AddModule("EBoneVisibilityStatus");
#else                                                                                     
	PyObject* new__module_EBoneVisibilityStatus = Py_InitModule3("EBoneVisibilityStatus", NULL, NULL);
#endif

	PyObject* new_dict_EBoneVisibilityStatus = PyModule_GetDict(new_module_EBoneVisibilityStatus);
	PyDict_SetItemString(new_dict_EBoneVisibilityStatus, "BVS_HiddenByParent", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBoneVisibilityStatus, "BVS_Visible", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBoneVisibilityStatus, "BVS_ExplicitlyHidden", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBoneVisibilityStatus, "BVS_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESkyLightSourceType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESkyLightSourceType = PyImport_AddModule("ESkyLightSourceType");
#else                                                                                     
	PyObject* new__module_ESkyLightSourceType = Py_InitModule3("ESkyLightSourceType", NULL, NULL);
#endif

	PyObject* new_dict_ESkyLightSourceType = PyModule_GetDict(new_module_ESkyLightSourceType);
	PyDict_SetItemString(new_dict_ESkyLightSourceType, "SLS_CapturedScene", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESkyLightSourceType, "SLS_SpecifiedCubemap", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESkyLightSourceType, "SLS_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EReverbSendMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EReverbSendMethod = PyImport_AddModule("EReverbSendMethod");
#else                                                                                     
	PyObject* new__module_EReverbSendMethod = Py_InitModule3("EReverbSendMethod", NULL, NULL);
#endif

	PyObject* new_dict_EReverbSendMethod = PyModule_GetDict(new_module_EReverbSendMethod);
	PyDict_SetItemString(new_dict_EReverbSendMethod, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EReverbSendMethod, "CustomCurve", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EReverbSendMethod, "Manual", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EReverbSendMethod, "EReverbSendMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAirAbsorptionMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAirAbsorptionMethod = PyImport_AddModule("EAirAbsorptionMethod");
#else                                                                                     
	PyObject* new__module_EAirAbsorptionMethod = Py_InitModule3("EAirAbsorptionMethod", NULL, NULL);
#endif

	PyObject* new_dict_EAirAbsorptionMethod = PyModule_GetDict(new_module_EAirAbsorptionMethod);
	PyDict_SetItemString(new_dict_EAirAbsorptionMethod, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAirAbsorptionMethod, "CustomCurve", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAirAbsorptionMethod, "EAirAbsorptionMethod_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESoundSpatializationAlgorithm()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESoundSpatializationAlgorithm = PyImport_AddModule("ESoundSpatializationAlgorithm");
#else                                                                                     
	PyObject* new__module_ESoundSpatializationAlgorithm = Py_InitModule3("ESoundSpatializationAlgorithm", NULL, NULL);
#endif

	PyObject* new_dict_ESoundSpatializationAlgorithm = PyModule_GetDict(new_module_ESoundSpatializationAlgorithm);
	PyDict_SetItemString(new_dict_ESoundSpatializationAlgorithm, "SPATIALIZATION_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESoundSpatializationAlgorithm, "SPATIALIZATION_HRTF", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESoundSpatializationAlgorithm, "SPATIALIZATION_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESoundDistanceCalc()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESoundDistanceCalc = PyImport_AddModule("ESoundDistanceCalc");
#else                                                                                     
	PyObject* new__module_ESoundDistanceCalc = Py_InitModule3("ESoundDistanceCalc", NULL, NULL);
#endif

	PyObject* new_dict_ESoundDistanceCalc = PyModule_GetDict(new_module_ESoundDistanceCalc);
	PyDict_SetItemString(new_dict_ESoundDistanceCalc, "SOUNDDISTANCE_Normal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESoundDistanceCalc, "SOUNDDISTANCE_InfiniteXYPlane", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESoundDistanceCalc, "SOUNDDISTANCE_InfiniteXZPlane", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESoundDistanceCalc, "SOUNDDISTANCE_InfiniteYZPlane", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESoundDistanceCalc, "SOUNDDISTANCE_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EVirtualizationMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVirtualizationMode = PyImport_AddModule("EVirtualizationMode");
#else                                                                                     
	PyObject* new__module_EVirtualizationMode = Py_InitModule3("EVirtualizationMode", NULL, NULL);
#endif

	PyObject* new_dict_EVirtualizationMode = PyModule_GetDict(new_module_EVirtualizationMode);
	PyDict_SetItemString(new_dict_EVirtualizationMode, "Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVirtualizationMode, "PlayWhenSilent", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVirtualizationMode, "Restart", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVirtualizationMode, "EVirtualizationMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAudioOutputTarget()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAudioOutputTarget = PyImport_AddModule("EAudioOutputTarget");
#else                                                                                     
	PyObject* new__module_EAudioOutputTarget = Py_InitModule3("EAudioOutputTarget", NULL, NULL);
#endif

	PyObject* new_dict_EAudioOutputTarget = PyModule_GetDict(new_module_EAudioOutputTarget);
	PyDict_SetItemString(new_dict_EAudioOutputTarget, "Speaker", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAudioOutputTarget, "Controller", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAudioOutputTarget, "ControllerFallbackToSpeaker", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAudioOutputTarget, "EAudioOutputTarget_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMaxConcurrentResolutionRule()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMaxConcurrentResolutionRule = PyImport_AddModule("EMaxConcurrentResolutionRule");
#else                                                                                     
	PyObject* new__module_EMaxConcurrentResolutionRule = Py_InitModule3("EMaxConcurrentResolutionRule", NULL, NULL);
#endif

	PyObject* new_dict_EMaxConcurrentResolutionRule = PyModule_GetDict(new_module_EMaxConcurrentResolutionRule);
	PyDict_SetItemString(new_dict_EMaxConcurrentResolutionRule, "PreventNew", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMaxConcurrentResolutionRule, "StopOldest", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMaxConcurrentResolutionRule, "StopFarthestThenPreventNew", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMaxConcurrentResolutionRule, "StopFarthestThenOldest", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMaxConcurrentResolutionRule, "StopLowestPriority", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMaxConcurrentResolutionRule, "StopQuietest", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMaxConcurrentResolutionRule, "StopLowestPriorityThenPreventNew", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMaxConcurrentResolutionRule, "EMaxConcurrentResolutionRule_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_ESoundGroup()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESoundGroup = PyImport_AddModule("ESoundGroup");
#else                                                                                     
	PyObject* new__module_ESoundGroup = Py_InitModule3("ESoundGroup", NULL, NULL);
#endif

	PyObject* new_dict_ESoundGroup = PyModule_GetDict(new_module_ESoundGroup);
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_Effects", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_UI", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_Music", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_Voice", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup1", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup2", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup3", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup4", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup5", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup6", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup7", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup8", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup9", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup10", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup11", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup12", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup13", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup14", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup15", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup16", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup17", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup18", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup19", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_GameSoundGroup20", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_ESoundGroup, "SOUNDGROUP_MAX", Py_BuildValue("i", 25));

}
void unreal_export_uenum_ModulationParamMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ModulationParamMode = PyImport_AddModule("ModulationParamMode");
#else                                                                                     
	PyObject* new__module_ModulationParamMode = Py_InitModule3("ModulationParamMode", NULL, NULL);
#endif

	PyObject* new_dict_ModulationParamMode = PyModule_GetDict(new_module_ModulationParamMode);
	PyDict_SetItemString(new_dict_ModulationParamMode, "MPM_Normal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ModulationParamMode, "MPM_Abs", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ModulationParamMode, "MPM_Direct", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ModulationParamMode, "MPM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESourceBusChannels()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESourceBusChannels = PyImport_AddModule("ESourceBusChannels");
#else                                                                                     
	PyObject* new__module_ESourceBusChannels = Py_InitModule3("ESourceBusChannels", NULL, NULL);
#endif

	PyObject* new_dict_ESourceBusChannels = PyModule_GetDict(new_module_ESourceBusChannels);
	PyDict_SetItemString(new_dict_ESourceBusChannels, "Mono", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESourceBusChannels, "Stereo", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESourceBusChannels, "ESourceBusChannels_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESourceBusSendLevelControlMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESourceBusSendLevelControlMethod = PyImport_AddModule("ESourceBusSendLevelControlMethod");
#else                                                                                     
	PyObject* new__module_ESourceBusSendLevelControlMethod = Py_InitModule3("ESourceBusSendLevelControlMethod", NULL, NULL);
#endif

	PyObject* new_dict_ESourceBusSendLevelControlMethod = PyModule_GetDict(new_module_ESourceBusSendLevelControlMethod);
	PyDict_SetItemString(new_dict_ESourceBusSendLevelControlMethod, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESourceBusSendLevelControlMethod, "CustomCurve", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESourceBusSendLevelControlMethod, "Manual", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESourceBusSendLevelControlMethod, "ESourceBusSendLevelControlMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESendLevelControlMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESendLevelControlMethod = PyImport_AddModule("ESendLevelControlMethod");
#else                                                                                     
	PyObject* new__module_ESendLevelControlMethod = Py_InitModule3("ESendLevelControlMethod", NULL, NULL);
#endif

	PyObject* new_dict_ESendLevelControlMethod = PyModule_GetDict(new_module_ESendLevelControlMethod);
	PyDict_SetItemString(new_dict_ESendLevelControlMethod, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESendLevelControlMethod, "CustomCurve", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESendLevelControlMethod, "Manual", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESendLevelControlMethod, "ESendLevelControlMethod_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAudioRecordingExportType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAudioRecordingExportType = PyImport_AddModule("EAudioRecordingExportType");
#else                                                                                     
	PyObject* new__module_EAudioRecordingExportType = Py_InitModule3("EAudioRecordingExportType", NULL, NULL);
#endif

	PyObject* new_dict_EAudioRecordingExportType = PyModule_GetDict(new_module_EAudioRecordingExportType);
	PyDict_SetItemString(new_dict_EAudioRecordingExportType, "SoundWave", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAudioRecordingExportType, "WavFile", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAudioRecordingExportType, "EAudioRecordingExportType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESubmixChannelFormat()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESubmixChannelFormat = PyImport_AddModule("ESubmixChannelFormat");
#else                                                                                     
	PyObject* new__module_ESubmixChannelFormat = Py_InitModule3("ESubmixChannelFormat", NULL, NULL);
#endif

	PyObject* new_dict_ESubmixChannelFormat = PyModule_GetDict(new_module_ESubmixChannelFormat);
	PyDict_SetItemString(new_dict_ESubmixChannelFormat, "Device", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESubmixChannelFormat, "Stereo", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESubmixChannelFormat, "Quad", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESubmixChannelFormat, "FiveDotOne", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESubmixChannelFormat, "SevenDotOne", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESubmixChannelFormat, "Ambisonics", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ESubmixChannelFormat, "Count", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ESubmixChannelFormat, "ESubmixChannelFormat_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_ESoundWaveFFTSize()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESoundWaveFFTSize = PyImport_AddModule("ESoundWaveFFTSize");
#else                                                                                     
	PyObject* new__module_ESoundWaveFFTSize = Py_InitModule3("ESoundWaveFFTSize", NULL, NULL);
#endif

	PyObject* new_dict_ESoundWaveFFTSize = PyModule_GetDict(new_module_ESoundWaveFFTSize);
	PyDict_SetItemString(new_dict_ESoundWaveFFTSize, "VerySmall_64", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESoundWaveFFTSize, "Small_256", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESoundWaveFFTSize, "Medium_512", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESoundWaveFFTSize, "Large_1024", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESoundWaveFFTSize, "VeryLarge_2048", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESoundWaveFFTSize, "ESoundWaveFFTSize_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EDecompressionType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDecompressionType = PyImport_AddModule("EDecompressionType");
#else                                                                                     
	PyObject* new__module_EDecompressionType = Py_InitModule3("EDecompressionType", NULL, NULL);
#endif

	PyObject* new_dict_EDecompressionType = PyModule_GetDict(new_module_EDecompressionType);
	PyDict_SetItemString(new_dict_EDecompressionType, "DTYPE_Setup", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDecompressionType, "DTYPE_Invalid", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDecompressionType, "DTYPE_Preview", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDecompressionType, "DTYPE_Native", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDecompressionType, "DTYPE_RealTime", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EDecompressionType, "DTYPE_Procedural", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EDecompressionType, "DTYPE_Xenon", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EDecompressionType, "DTYPE_Streaming", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EDecompressionType, "DTYPE_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_ESplineCoordinateSpace()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESplineCoordinateSpace = PyImport_AddModule("ESplineCoordinateSpace");
#else                                                                                     
	PyObject* new__module_ESplineCoordinateSpace = Py_InitModule3("ESplineCoordinateSpace", NULL, NULL);
#endif

	PyObject* new_dict_ESplineCoordinateSpace = PyModule_GetDict(new_module_ESplineCoordinateSpace);
	PyDict_SetItemString(new_dict_ESplineCoordinateSpace, "Local", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESplineCoordinateSpace, "World", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESplineCoordinateSpace, "ESplineCoordinateSpace_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESplinePointType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESplinePointType = PyImport_AddModule("ESplinePointType");
#else                                                                                     
	PyObject* new__module_ESplinePointType = Py_InitModule3("ESplinePointType", NULL, NULL);
#endif

	PyObject* new_dict_ESplinePointType = PyModule_GetDict(new_module_ESplinePointType);
	PyDict_SetItemString(new_dict_ESplinePointType, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESplinePointType, "Curve", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESplinePointType, "Constant", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESplinePointType, "CurveClamped", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESplinePointType, "CurveCustomTangent", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESplinePointType, "ESplinePointType_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ESplineMeshAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESplineMeshAxis = PyImport_AddModule("ESplineMeshAxis");
#else                                                                                     
	PyObject* new__module_ESplineMeshAxis = Py_InitModule3("ESplineMeshAxis", NULL, NULL);
#endif

	PyObject* new_dict_ESplineMeshAxis = PyModule_GetDict(new_module_ESplineMeshAxis);
	PyDict_SetItemString(new_dict_ESplineMeshAxis, "X", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESplineMeshAxis, "Y", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESplineMeshAxis, "Z", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESplineMeshAxis, "ESplineMeshAxis_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EOptimizationType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOptimizationType = PyImport_AddModule("EOptimizationType");
#else                                                                                     
	PyObject* new__module_EOptimizationType = Py_InitModule3("EOptimizationType", NULL, NULL);
#endif

	PyObject* new_dict_EOptimizationType = PyModule_GetDict(new_module_EOptimizationType);
	PyDict_SetItemString(new_dict_EOptimizationType, "OT_NumOfTriangles", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOptimizationType, "OT_MaxDeviation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOptimizationType, "OT_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EImportanceLevel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EImportanceLevel = PyImport_AddModule("EImportanceLevel");
#else                                                                                     
	PyObject* new__module_EImportanceLevel = Py_InitModule3("EImportanceLevel", NULL, NULL);
#endif

	PyObject* new_dict_EImportanceLevel = PyModule_GetDict(new_module_EImportanceLevel);
	PyDict_SetItemString(new_dict_EImportanceLevel, "IL_Off", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EImportanceLevel, "IL_Lowest", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EImportanceLevel, "IL_Low", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EImportanceLevel, "IL_Normal", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EImportanceLevel, "IL_High", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EImportanceLevel, "IL_Highest", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EImportanceLevel, "TEMP_BROKEN2", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EImportanceLevel, "EImportanceLevel_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_ENormalMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ENormalMode = PyImport_AddModule("ENormalMode");
#else                                                                                     
	PyObject* new__module_ENormalMode = Py_InitModule3("ENormalMode", NULL, NULL);
#endif

	PyObject* new_dict_ENormalMode = PyModule_GetDict(new_module_ENormalMode);
	PyDict_SetItemString(new_dict_ENormalMode, "NM_PreserveSmoothingGroups", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ENormalMode, "NM_RecalculateNormals", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ENormalMode, "NM_RecalculateNormalsSmooth", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ENormalMode, "NM_RecalculateNormalsHard", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ENormalMode, "TEMP_BROKEN", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ENormalMode, "ENormalMode_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EStereoLayerShape()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EStereoLayerShape = PyImport_AddModule("EStereoLayerShape");
#else                                                                                     
	PyObject* new__module_EStereoLayerShape = Py_InitModule3("EStereoLayerShape", NULL, NULL);
#endif

	PyObject* new_dict_EStereoLayerShape = PyModule_GetDict(new_module_EStereoLayerShape);
	PyDict_SetItemString(new_dict_EStereoLayerShape, "SLSH_QuadLayer", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EStereoLayerShape, "SLSH_CylinderLayer", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EStereoLayerShape, "SLSH_CubemapLayer", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EStereoLayerShape, "SLSH_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EStereoLayerType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EStereoLayerType = PyImport_AddModule("EStereoLayerType");
#else                                                                                     
	PyObject* new__module_EStereoLayerType = Py_InitModule3("EStereoLayerType", NULL, NULL);
#endif

	PyObject* new_dict_EStereoLayerType = PyModule_GetDict(new_module_EStereoLayerType);
	PyDict_SetItemString(new_dict_EStereoLayerType, "SLT_WorldLocked", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EStereoLayerType, "SLT_TrackerLocked", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EStereoLayerType, "SLT_FaceLocked", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EStereoLayerType, "SLT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EOpacitySourceMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOpacitySourceMode = PyImport_AddModule("EOpacitySourceMode");
#else                                                                                     
	PyObject* new__module_EOpacitySourceMode = Py_InitModule3("EOpacitySourceMode", NULL, NULL);
#endif

	PyObject* new_dict_EOpacitySourceMode = PyModule_GetDict(new_module_EOpacitySourceMode);
	PyDict_SetItemString(new_dict_EOpacitySourceMode, "OSM_Alpha", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOpacitySourceMode, "OSM_ColorBrightness", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOpacitySourceMode, "OSM_RedChannel", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EOpacitySourceMode, "OSM_GreenChannel", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EOpacitySourceMode, "OSM_BlueChannel", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EOpacitySourceMode, "OSM_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ESubUVBoundingVertexCount()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESubUVBoundingVertexCount = PyImport_AddModule("ESubUVBoundingVertexCount");
#else                                                                                     
	PyObject* new__module_ESubUVBoundingVertexCount = Py_InitModule3("ESubUVBoundingVertexCount", NULL, NULL);
#endif

	PyObject* new_dict_ESubUVBoundingVertexCount = PyModule_GetDict(new_module_ESubUVBoundingVertexCount);
	PyDict_SetItemString(new_dict_ESubUVBoundingVertexCount, "BVC_FourVertices", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESubUVBoundingVertexCount, "BVC_EightVertices", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESubUVBoundingVertexCount, "BVC_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EVerticalTextAligment()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVerticalTextAligment = PyImport_AddModule("EVerticalTextAligment");
#else                                                                                     
	PyObject* new__module_EVerticalTextAligment = Py_InitModule3("EVerticalTextAligment", NULL, NULL);
#endif

	PyObject* new_dict_EVerticalTextAligment = PyModule_GetDict(new_module_EVerticalTextAligment);
	PyDict_SetItemString(new_dict_EVerticalTextAligment, "EVRTA_TextTop", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVerticalTextAligment, "EVRTA_TextCenter", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVerticalTextAligment, "EVRTA_TextBottom", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVerticalTextAligment, "EVRTA_QuadTop", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EVerticalTextAligment, "EVRTA_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EHorizTextAligment()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHorizTextAligment = PyImport_AddModule("EHorizTextAligment");
#else                                                                                     
	PyObject* new__module_EHorizTextAligment = Py_InitModule3("EHorizTextAligment", NULL, NULL);
#endif

	PyObject* new_dict_EHorizTextAligment = PyModule_GetDict(new_module_EHorizTextAligment);
	PyDict_SetItemString(new_dict_EHorizTextAligment, "EHTA_Left", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHorizTextAligment, "EHTA_Center", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHorizTextAligment, "EHTA_Right", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHorizTextAligment, "EHTA_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETextureLossyCompressionAmount()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureLossyCompressionAmount = PyImport_AddModule("ETextureLossyCompressionAmount");
#else                                                                                     
	PyObject* new__module_ETextureLossyCompressionAmount = Py_InitModule3("ETextureLossyCompressionAmount", NULL, NULL);
#endif

	PyObject* new_dict_ETextureLossyCompressionAmount = PyModule_GetDict(new_module_ETextureLossyCompressionAmount);
	PyDict_SetItemString(new_dict_ETextureLossyCompressionAmount, "TLCA_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextureLossyCompressionAmount, "TLCA_None", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextureLossyCompressionAmount, "TLCA_Lowest", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureLossyCompressionAmount, "TLCA_Low", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETextureLossyCompressionAmount, "TLCA_Medium", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETextureLossyCompressionAmount, "TLCA_High", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETextureLossyCompressionAmount, "TLCA_Highest", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ETextureLossyCompressionAmount, "TLCA_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_ETextureCompressionQuality()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureCompressionQuality = PyImport_AddModule("ETextureCompressionQuality");
#else                                                                                     
	PyObject* new__module_ETextureCompressionQuality = Py_InitModule3("ETextureCompressionQuality", NULL, NULL);
#endif

	PyObject* new_dict_ETextureCompressionQuality = PyModule_GetDict(new_module_ETextureCompressionQuality);
	PyDict_SetItemString(new_dict_ETextureCompressionQuality, "TCQ_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextureCompressionQuality, "TCQ_Lowest", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextureCompressionQuality, "TCQ_Low", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureCompressionQuality, "TCQ_Medium", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETextureCompressionQuality, "TCQ_High", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETextureCompressionQuality, "TCQ_Highest", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETextureCompressionQuality, "TCQ_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ETextureSourceFormat()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureSourceFormat = PyImport_AddModule("ETextureSourceFormat");
#else                                                                                     
	PyObject* new__module_ETextureSourceFormat = Py_InitModule3("ETextureSourceFormat", NULL, NULL);
#endif

	PyObject* new_dict_ETextureSourceFormat = PyModule_GetDict(new_module_ETextureSourceFormat);
	PyDict_SetItemString(new_dict_ETextureSourceFormat, "TSF_Invalid", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextureSourceFormat, "TSF_G8", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextureSourceFormat, "TSF_BGRA8", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureSourceFormat, "TSF_BGRE8", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETextureSourceFormat, "TSF_RGBA16", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETextureSourceFormat, "TSF_RGBA16F", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETextureSourceFormat, "TSF_RGBA8", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ETextureSourceFormat, "TSF_RGBE8", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ETextureSourceFormat, "TSF_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_ETextureSourceArtType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureSourceArtType = PyImport_AddModule("ETextureSourceArtType");
#else                                                                                     
	PyObject* new__module_ETextureSourceArtType = Py_InitModule3("ETextureSourceArtType", NULL, NULL);
#endif

	PyObject* new_dict_ETextureSourceArtType = PyModule_GetDict(new_module_ETextureSourceArtType);
	PyDict_SetItemString(new_dict_ETextureSourceArtType, "TSAT_Uncompressed", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextureSourceArtType, "TSAT_PNGCompressed", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextureSourceArtType, "TSAT_DDSFile", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureSourceArtType, "TSAT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETextureMipCount()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureMipCount = PyImport_AddModule("ETextureMipCount");
#else                                                                                     
	PyObject* new__module_ETextureMipCount = Py_InitModule3("ETextureMipCount", NULL, NULL);
#endif

	PyObject* new_dict_ETextureMipCount = PyModule_GetDict(new_module_ETextureMipCount);
	PyDict_SetItemString(new_dict_ETextureMipCount, "TMC_ResidentMips", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextureMipCount, "TMC_AllMips", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextureMipCount, "TMC_AllMipsBiased", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureMipCount, "TMC_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ECompositeTextureMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECompositeTextureMode = PyImport_AddModule("ECompositeTextureMode");
#else                                                                                     
	PyObject* new__module_ECompositeTextureMode = Py_InitModule3("ECompositeTextureMode", NULL, NULL);
#endif

	PyObject* new_dict_ECompositeTextureMode = PyModule_GetDict(new_module_ECompositeTextureMode);
	PyDict_SetItemString(new_dict_ECompositeTextureMode, "CTM_Disabled", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECompositeTextureMode, "CTM_NormalRoughnessToRed", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECompositeTextureMode, "CTM_NormalRoughnessToGreen", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECompositeTextureMode, "CTM_NormalRoughnessToBlue", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECompositeTextureMode, "CTM_NormalRoughnessToAlpha", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ECompositeTextureMode, "CTM_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_TextureAddress()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_TextureAddress = PyImport_AddModule("TextureAddress");
#else                                                                                     
	PyObject* new__module_TextureAddress = Py_InitModule3("TextureAddress", NULL, NULL);
#endif

	PyObject* new_dict_TextureAddress = PyModule_GetDict(new_module_TextureAddress);
	PyDict_SetItemString(new_dict_TextureAddress, "TA_Wrap", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_TextureAddress, "TA_Clamp", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_TextureAddress, "TA_Mirror", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_TextureAddress, "TA_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_TextureFilter()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_TextureFilter = PyImport_AddModule("TextureFilter");
#else                                                                                     
	PyObject* new__module_TextureFilter = Py_InitModule3("TextureFilter", NULL, NULL);
#endif

	PyObject* new_dict_TextureFilter = PyModule_GetDict(new_module_TextureFilter);
	PyDict_SetItemString(new_dict_TextureFilter, "TF_Nearest", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_TextureFilter, "TF_Bilinear", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_TextureFilter, "TF_Trilinear", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_TextureFilter, "TF_Default", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_TextureFilter, "TF_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_TextureCompressionSettings()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_TextureCompressionSettings = PyImport_AddModule("TextureCompressionSettings");
#else                                                                                     
	PyObject* new__module_TextureCompressionSettings = Py_InitModule3("TextureCompressionSettings", NULL, NULL);
#endif

	PyObject* new_dict_TextureCompressionSettings = PyModule_GetDict(new_module_TextureCompressionSettings);
	PyDict_SetItemString(new_dict_TextureCompressionSettings, "TC_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_TextureCompressionSettings, "TC_Normalmap", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_TextureCompressionSettings, "TC_Masks", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_TextureCompressionSettings, "TC_Grayscale", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_TextureCompressionSettings, "TC_Displacementmap", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_TextureCompressionSettings, "TC_VectorDisplacementmap", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_TextureCompressionSettings, "TC_HDR", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_TextureCompressionSettings, "TC_EditorIcon", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_TextureCompressionSettings, "TC_Alpha", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_TextureCompressionSettings, "TC_DistanceFieldFont", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_TextureCompressionSettings, "TC_HDR_Compressed", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_TextureCompressionSettings, "TC_BC7", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_TextureCompressionSettings, "TC_MAX", Py_BuildValue("i", 12));

}
void unreal_export_uenum_ETextureMipLoadOptions()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureMipLoadOptions = PyImport_AddModule("ETextureMipLoadOptions");
#else                                                                                     
	PyObject* new__module_ETextureMipLoadOptions = Py_InitModule3("ETextureMipLoadOptions", NULL, NULL);
#endif

	PyObject* new_dict_ETextureMipLoadOptions = PyModule_GetDict(new_module_ETextureMipLoadOptions);
	PyDict_SetItemString(new_dict_ETextureMipLoadOptions, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextureMipLoadOptions, "AllMips", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextureMipLoadOptions, "OnlyFirstMip", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureMipLoadOptions, "ETextureMipLoadOptions_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETextureSamplerFilter()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureSamplerFilter = PyImport_AddModule("ETextureSamplerFilter");
#else                                                                                     
	PyObject* new__module_ETextureSamplerFilter = Py_InitModule3("ETextureSamplerFilter", NULL, NULL);
#endif

	PyObject* new_dict_ETextureSamplerFilter = PyModule_GetDict(new_module_ETextureSamplerFilter);
	PyDict_SetItemString(new_dict_ETextureSamplerFilter, "Point", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextureSamplerFilter, "Bilinear", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextureSamplerFilter, "Trilinear", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureSamplerFilter, "AnisotropicPoint", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETextureSamplerFilter, "AnisotropicLinear", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETextureSamplerFilter, "ETextureSamplerFilter_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ETexturePowerOfTwoSetting()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETexturePowerOfTwoSetting = PyImport_AddModule("ETexturePowerOfTwoSetting");
#else                                                                                     
	PyObject* new__module_ETexturePowerOfTwoSetting = Py_InitModule3("ETexturePowerOfTwoSetting", NULL, NULL);
#endif

	PyObject* new_dict_ETexturePowerOfTwoSetting = PyModule_GetDict(new_module_ETexturePowerOfTwoSetting);
	PyDict_SetItemString(new_dict_ETexturePowerOfTwoSetting, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETexturePowerOfTwoSetting, "PadToPowerOfTwo", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETexturePowerOfTwoSetting, "PadToSquarePowerOfTwo", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETexturePowerOfTwoSetting, "ETexturePowerOfTwoSetting_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_TextureMipGenSettings()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_TextureMipGenSettings = PyImport_AddModule("TextureMipGenSettings");
#else                                                                                     
	PyObject* new__module_TextureMipGenSettings = Py_InitModule3("TextureMipGenSettings", NULL, NULL);
#endif

	PyObject* new_dict_TextureMipGenSettings = PyModule_GetDict(new_module_TextureMipGenSettings);
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_FromTextureGroup", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_SimpleAverage", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Sharpen0", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Sharpen1", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Sharpen2", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Sharpen3", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Sharpen4", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Sharpen5", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Sharpen6", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Sharpen7", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Sharpen8", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Sharpen9", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Sharpen10", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_NoMipmaps", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_LeaveExistingMips", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Blur1", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Blur2", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Blur3", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Blur4", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Blur5", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_Unfiltered", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_TextureMipGenSettings, "TMGS_MAX", Py_BuildValue("i", 21));

}
void unreal_export_uenum_TextureGroup()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_TextureGroup = PyImport_AddModule("TextureGroup");
#else                                                                                     
	PyObject* new__module_TextureGroup = Py_InitModule3("TextureGroup", NULL, NULL);
#endif

	PyObject* new_dict_TextureGroup = PyModule_GetDict(new_module_TextureGroup);
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_World", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_WorldNormalMap", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_WorldSpecular", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Character", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_CharacterNormalMap", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_CharacterSpecular", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Weapon", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_WeaponNormalMap", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_WeaponSpecular", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Vehicle", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_VehicleNormalMap", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_VehicleSpecular", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Cinematic", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Effects", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_EffectsNotFiltered", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Skybox", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_UI", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Lightmap", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_RenderTarget", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_MobileFlattened", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_ProcBuilding_Face", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_ProcBuilding_LightMap", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Shadowmap", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_ColorLookupTable", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Terrain_Heightmap", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Terrain_Weightmap", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Bokeh", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_IESLightProfile", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Pixels2D", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_HierarchicalLOD", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Impostor", Py_BuildValue("i", 30));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_ImpostorNormalDepth", Py_BuildValue("i", 31));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_8BitData", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_16BitData", Py_BuildValue("i", 33));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Project01", Py_BuildValue("i", 34));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Project02", Py_BuildValue("i", 35));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Project03", Py_BuildValue("i", 36));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Project04", Py_BuildValue("i", 37));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Project05", Py_BuildValue("i", 38));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Project06", Py_BuildValue("i", 39));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Project07", Py_BuildValue("i", 40));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Project08", Py_BuildValue("i", 41));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Project09", Py_BuildValue("i", 42));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_Project10", Py_BuildValue("i", 43));
	PyDict_SetItemString(new_dict_TextureGroup, "TEXTUREGROUP_MAX", Py_BuildValue("i", 44));

}
void unreal_export_uenum_ETextureRenderTargetFormat()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureRenderTargetFormat = PyImport_AddModule("ETextureRenderTargetFormat");
#else                                                                                     
	PyObject* new__module_ETextureRenderTargetFormat = Py_InitModule3("ETextureRenderTargetFormat", NULL, NULL);
#endif

	PyObject* new_dict_ETextureRenderTargetFormat = PyModule_GetDict(new_module_ETextureRenderTargetFormat);
	PyDict_SetItemString(new_dict_ETextureRenderTargetFormat, "RTF_R8", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextureRenderTargetFormat, "RTF_RG8", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextureRenderTargetFormat, "RTF_RGBA8", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureRenderTargetFormat, "RTF_R16f", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETextureRenderTargetFormat, "RTF_RG16f", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETextureRenderTargetFormat, "RTF_RGBA16f", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETextureRenderTargetFormat, "RTF_R32f", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ETextureRenderTargetFormat, "RTF_RG32f", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ETextureRenderTargetFormat, "RTF_RGBA32f", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ETextureRenderTargetFormat, "RTF_RGB10A2", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ETextureRenderTargetFormat, "RTF_MAX", Py_BuildValue("i", 10));

}
void unreal_export_uenum_ETimecodeProviderSynchronizationState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETimecodeProviderSynchronizationState = PyImport_AddModule("ETimecodeProviderSynchronizationState");
#else                                                                                     
	PyObject* new__module_ETimecodeProviderSynchronizationState = Py_InitModule3("ETimecodeProviderSynchronizationState", NULL, NULL);
#endif

	PyObject* new_dict_ETimecodeProviderSynchronizationState = PyModule_GetDict(new_module_ETimecodeProviderSynchronizationState);
	PyDict_SetItemString(new_dict_ETimecodeProviderSynchronizationState, "Closed", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETimecodeProviderSynchronizationState, "Error", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETimecodeProviderSynchronizationState, "Synchronized", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETimecodeProviderSynchronizationState, "Synchronizing", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETimecodeProviderSynchronizationState, "ETimecodeProviderSynchronizationState_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ETimelineDirection()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETimelineDirection = PyImport_AddModule("ETimelineDirection");
#else                                                                                     
	PyObject* new__module_ETimelineDirection = Py_InitModule3("ETimelineDirection", NULL, NULL);
#endif

	PyObject* new_dict_ETimelineDirection = PyModule_GetDict(new_module_ETimelineDirection);
	PyDict_SetItemString(new_dict_ETimelineDirection, "Forward", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETimelineDirection, "Backward", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETimelineDirection, "ETimelineDirection_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETimelineLengthMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETimelineLengthMode = PyImport_AddModule("ETimelineLengthMode");
#else                                                                                     
	PyObject* new__module_ETimelineLengthMode = Py_InitModule3("ETimelineLengthMode", NULL, NULL);
#endif

	PyObject* new_dict_ETimelineLengthMode = PyModule_GetDict(new_module_ETimelineLengthMode);
	PyDict_SetItemString(new_dict_ETimelineLengthMode, "TL_TimelineLength", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETimelineLengthMode, "TL_LastKeyFrame", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETimelineLengthMode, "TL_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETimeStretchCurveMapping()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETimeStretchCurveMapping = PyImport_AddModule("ETimeStretchCurveMapping");
#else                                                                                     
	PyObject* new__module_ETimeStretchCurveMapping = Py_InitModule3("ETimeStretchCurveMapping", NULL, NULL);
#endif

	PyObject* new_dict_ETimeStretchCurveMapping = PyModule_GetDict(new_module_ETimeStretchCurveMapping);
	PyDict_SetItemString(new_dict_ETimeStretchCurveMapping, "T_Original", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETimeStretchCurveMapping, "T_TargetMin", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETimeStretchCurveMapping, "T_TargetMax", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETimeStretchCurveMapping, "MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETwitterIntegrationDelegate()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETwitterIntegrationDelegate = PyImport_AddModule("ETwitterIntegrationDelegate");
#else                                                                                     
	PyObject* new__module_ETwitterIntegrationDelegate = Py_InitModule3("ETwitterIntegrationDelegate", NULL, NULL);
#endif

	PyObject* new_dict_ETwitterIntegrationDelegate = PyModule_GetDict(new_module_ETwitterIntegrationDelegate);
	PyDict_SetItemString(new_dict_ETwitterIntegrationDelegate, "TID_AuthorizeComplete", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETwitterIntegrationDelegate, "TID_TweetUIComplete", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETwitterIntegrationDelegate, "TID_RequestComplete", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETwitterIntegrationDelegate, "TID_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETwitterRequestMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETwitterRequestMethod = PyImport_AddModule("ETwitterRequestMethod");
#else                                                                                     
	PyObject* new__module_ETwitterRequestMethod = Py_InitModule3("ETwitterRequestMethod", NULL, NULL);
#endif

	PyObject* new_dict_ETwitterRequestMethod = PyModule_GetDict(new_module_ETwitterRequestMethod);
	PyDict_SetItemString(new_dict_ETwitterRequestMethod, "TRM_Get", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETwitterRequestMethod, "TRM_Post", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETwitterRequestMethod, "TRM_Delete", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETwitterRequestMethod, "TRM_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EUserDefinedStructureStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUserDefinedStructureStatus = PyImport_AddModule("EUserDefinedStructureStatus");
#else                                                                                     
	PyObject* new__module_EUserDefinedStructureStatus = Py_InitModule3("EUserDefinedStructureStatus", NULL, NULL);
#endif

	PyObject* new_dict_EUserDefinedStructureStatus = PyModule_GetDict(new_module_EUserDefinedStructureStatus);
	PyDict_SetItemString(new_dict_EUserDefinedStructureStatus, "UDSS_UpToDate", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUserDefinedStructureStatus, "UDSS_Dirty", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUserDefinedStructureStatus, "UDSS_Error", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUserDefinedStructureStatus, "UDSS_Duplicate", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EUserDefinedStructureStatus, "UDSS_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EUIScalingRule()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUIScalingRule = PyImport_AddModule("EUIScalingRule");
#else                                                                                     
	PyObject* new__module_EUIScalingRule = Py_InitModule3("EUIScalingRule", NULL, NULL);
#endif

	PyObject* new_dict_EUIScalingRule = PyModule_GetDict(new_module_EUIScalingRule);
	PyDict_SetItemString(new_dict_EUIScalingRule, "ShortestSide", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUIScalingRule, "LongestSide", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUIScalingRule, "Horizontal", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUIScalingRule, "Vertical", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EUIScalingRule, "Custom", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EUIScalingRule, "EUIScalingRule_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ERenderFocusRule()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERenderFocusRule = PyImport_AddModule("ERenderFocusRule");
#else                                                                                     
	PyObject* new__module_ERenderFocusRule = Py_InitModule3("ERenderFocusRule", NULL, NULL);
#endif

	PyObject* new_dict_ERenderFocusRule = PyModule_GetDict(new_module_ERenderFocusRule);
	PyDict_SetItemString(new_dict_ERenderFocusRule, "Always", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERenderFocusRule, "NonPointer", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERenderFocusRule, "NavigationOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERenderFocusRule, "Never", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERenderFocusRule, "ERenderFocusRule_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EVectorFieldConstructionOp()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVectorFieldConstructionOp = PyImport_AddModule("EVectorFieldConstructionOp");
#else                                                                                     
	PyObject* new__module_EVectorFieldConstructionOp = Py_InitModule3("EVectorFieldConstructionOp", NULL, NULL);
#endif

	PyObject* new_dict_EVectorFieldConstructionOp = PyModule_GetDict(new_module_EVectorFieldConstructionOp);
	PyDict_SetItemString(new_dict_EVectorFieldConstructionOp, "VFCO_Extrude", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVectorFieldConstructionOp, "VFCO_Revolve", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVectorFieldConstructionOp, "VFCO_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EWindSourceType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWindSourceType = PyImport_AddModule("EWindSourceType");
#else                                                                                     
	PyObject* new__module_EWindSourceType = Py_InitModule3("EWindSourceType", NULL, NULL);
#endif

	PyObject* new_dict_EWindSourceType = PyModule_GetDict(new_module_EWindSourceType);
	PyDict_SetItemString(new_dict_EWindSourceType, "Directional", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWindSourceType, "Point", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWindSourceType, "EWindSourceType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EPSCPoolMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPSCPoolMethod = PyImport_AddModule("EPSCPoolMethod");
#else                                                                                     
	PyObject* new__module_EPSCPoolMethod = Py_InitModule3("EPSCPoolMethod", NULL, NULL);
#endif

	PyObject* new_dict_EPSCPoolMethod = PyModule_GetDict(new_module_EPSCPoolMethod);
	PyDict_SetItemString(new_dict_EPSCPoolMethod, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPSCPoolMethod, "AutoRelease", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPSCPoolMethod, "ManualRelease", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPSCPoolMethod, "ManualRelease_OnComplete", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPSCPoolMethod, "FreeInPool", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPSCPoolMethod, "EPSCPoolMethod_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EVolumeLightingMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVolumeLightingMethod = PyImport_AddModule("EVolumeLightingMethod");
#else                                                                                     
	PyObject* new__module_EVolumeLightingMethod = Py_InitModule3("EVolumeLightingMethod", NULL, NULL);
#endif

	PyObject* new_dict_EVolumeLightingMethod = PyModule_GetDict(new_module_EVolumeLightingMethod);
	PyDict_SetItemString(new_dict_EVolumeLightingMethod, "VLM_VolumetricLightmap", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVolumeLightingMethod, "VLM_SparseVolumeLightingSamples", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVolumeLightingMethod, "VLM_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EVisibilityAggressiveness()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVisibilityAggressiveness = PyImport_AddModule("EVisibilityAggressiveness");
#else                                                                                     
	PyObject* new__module_EVisibilityAggressiveness = Py_InitModule3("EVisibilityAggressiveness", NULL, NULL);
#endif

	PyObject* new_dict_EVisibilityAggressiveness = PyModule_GetDict(new_module_EVisibilityAggressiveness);
	PyDict_SetItemString(new_dict_EVisibilityAggressiveness, "VIS_LeastAggressive", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVisibilityAggressiveness, "VIS_ModeratelyAggressive", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVisibilityAggressiveness, "VIS_MostAggressive", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVisibilityAggressiveness, "VIS_Max", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EVisibilityAggressiveness, "VIS_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMoviePlaybackType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMoviePlaybackType = PyImport_AddModule("EMoviePlaybackType");
#else                                                                                     
	PyObject* new__module_EMoviePlaybackType = Py_InitModule3("EMoviePlaybackType", NULL, NULL);
#endif

	PyObject* new_dict_EMoviePlaybackType = PyModule_GetDict(new_module_EMoviePlaybackType);
	PyDict_SetItemString(new_dict_EMoviePlaybackType, "MT_Normal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMoviePlaybackType, "MT_Looped", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMoviePlaybackType, "MT_LoadingLoop", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMoviePlaybackType, "MT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMediaPlayerOptionBooleanOverride()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMediaPlayerOptionBooleanOverride = PyImport_AddModule("EMediaPlayerOptionBooleanOverride");
#else                                                                                     
	PyObject* new__module_EMediaPlayerOptionBooleanOverride = Py_InitModule3("EMediaPlayerOptionBooleanOverride", NULL, NULL);
#endif

	PyObject* new_dict_EMediaPlayerOptionBooleanOverride = PyModule_GetDict(new_module_EMediaPlayerOptionBooleanOverride);
	PyDict_SetItemString(new_dict_EMediaPlayerOptionBooleanOverride, "UseMediaPlayerSetting", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMediaPlayerOptionBooleanOverride, "Enabled", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMediaPlayerOptionBooleanOverride, "Disabled", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMediaPlayerOptionBooleanOverride, "EMediaPlayerOptionBooleanOverride_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESmartNameContainerType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESmartNameContainerType = PyImport_AddModule("ESmartNameContainerType");
#else                                                                                     
	PyObject* new__module_ESmartNameContainerType = Py_InitModule3("ESmartNameContainerType", NULL, NULL);
#endif

	PyObject* new_dict_ESmartNameContainerType = PyModule_GetDict(new_module_ESmartNameContainerType);
	PyDict_SetItemString(new_dict_ESmartNameContainerType, "SNCT_CurveMapping", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESmartNameContainerType, "SNCT_TrackCurveMapping", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESmartNameContainerType, "SNCT_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EGameplayDebuggerOverrideMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGameplayDebuggerOverrideMode = PyImport_AddModule("EGameplayDebuggerOverrideMode");
#else                                                                                     
	PyObject* new__module_EGameplayDebuggerOverrideMode = Py_InitModule3("EGameplayDebuggerOverrideMode", NULL, NULL);
#endif

	PyObject* new_dict_EGameplayDebuggerOverrideMode = PyModule_GetDict(new_module_EGameplayDebuggerOverrideMode);
	PyDict_SetItemString(new_dict_EGameplayDebuggerOverrideMode, "Enable", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGameplayDebuggerOverrideMode, "Disable", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGameplayDebuggerOverrideMode, "UseDefault", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGameplayDebuggerOverrideMode, "EGameplayDebuggerOverrideMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETaskResourceOverlapPolicy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETaskResourceOverlapPolicy = PyImport_AddModule("ETaskResourceOverlapPolicy");
#else                                                                                     
	PyObject* new__module_ETaskResourceOverlapPolicy = Py_InitModule3("ETaskResourceOverlapPolicy", NULL, NULL);
#endif

	PyObject* new_dict_ETaskResourceOverlapPolicy = PyModule_GetDict(new_module_ETaskResourceOverlapPolicy);
	PyDict_SetItemString(new_dict_ETaskResourceOverlapPolicy, "StartOnTop", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETaskResourceOverlapPolicy, "StartAtEnd", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETaskResourceOverlapPolicy, "ETaskResourceOverlapPolicy_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EGameplayTaskState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGameplayTaskState = PyImport_AddModule("EGameplayTaskState");
#else                                                                                     
	PyObject* new__module_EGameplayTaskState = Py_InitModule3("EGameplayTaskState", NULL, NULL);
#endif

	PyObject* new_dict_EGameplayTaskState = PyModule_GetDict(new_module_EGameplayTaskState);
	PyDict_SetItemString(new_dict_EGameplayTaskState, "Uninitialized", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGameplayTaskState, "AwaitingActivation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGameplayTaskState, "Paused", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGameplayTaskState, "Active", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGameplayTaskState, "Finished", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EGameplayTaskState, "EGameplayTaskState_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EGameplayTaskRunResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGameplayTaskRunResult = PyImport_AddModule("EGameplayTaskRunResult");
#else                                                                                     
	PyObject* new__module_EGameplayTaskRunResult = Py_InitModule3("EGameplayTaskRunResult", NULL, NULL);
#endif

	PyObject* new_dict_EGameplayTaskRunResult = PyModule_GetDict(new_module_EGameplayTaskRunResult);
	PyDict_SetItemString(new_dict_EGameplayTaskRunResult, "Error", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGameplayTaskRunResult, "Failed", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGameplayTaskRunResult, "Success_Paused", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGameplayTaskRunResult, "Success_Active", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGameplayTaskRunResult, "Success_Finished", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EGameplayTaskRunResult, "EGameplayTaskRunResult_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EPathFollowingResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPathFollowingResult = PyImport_AddModule("EPathFollowingResult");
#else                                                                                     
	PyObject* new__module_EPathFollowingResult = Py_InitModule3("EPathFollowingResult", NULL, NULL);
#endif

	PyObject* new_dict_EPathFollowingResult = PyModule_GetDict(new_module_EPathFollowingResult);
	PyDict_SetItemString(new_dict_EPathFollowingResult, "Success", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPathFollowingResult, "Blocked", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPathFollowingResult, "OffPath", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPathFollowingResult, "Aborted", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPathFollowingResult, "Skipped_DEPRECATED", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPathFollowingResult, "Invalid", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EPathFollowingResult, "EPathFollowingResult_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EEnvQueryStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvQueryStatus = PyImport_AddModule("EEnvQueryStatus");
#else                                                                                     
	PyObject* new__module_EEnvQueryStatus = Py_InitModule3("EEnvQueryStatus", NULL, NULL);
#endif

	PyObject* new_dict_EEnvQueryStatus = PyModule_GetDict(new_module_EEnvQueryStatus);
	PyDict_SetItemString(new_dict_EEnvQueryStatus, "Processing", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvQueryStatus, "Success", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvQueryStatus, "Failed", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvQueryStatus, "Aborted", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEnvQueryStatus, "OwnerLost", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EEnvQueryStatus, "MissingParam", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EEnvQueryStatus, "EEnvQueryStatus_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EAISenseNotifyType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAISenseNotifyType = PyImport_AddModule("EAISenseNotifyType");
#else                                                                                     
	PyObject* new__module_EAISenseNotifyType = Py_InitModule3("EAISenseNotifyType", NULL, NULL);
#endif

	PyObject* new_dict_EAISenseNotifyType = PyModule_GetDict(new_module_EAISenseNotifyType);
	PyDict_SetItemString(new_dict_EAISenseNotifyType, "OnEveryPerception", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAISenseNotifyType, "OnPerceptionChange", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAISenseNotifyType, "EAISenseNotifyType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EAITaskPriority()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAITaskPriority = PyImport_AddModule("EAITaskPriority");
#else                                                                                     
	PyObject* new__module_EAITaskPriority = Py_InitModule3("EAITaskPriority", NULL, NULL);
#endif

	PyObject* new_dict_EAITaskPriority = PyModule_GetDict(new_module_EAITaskPriority);
	PyDict_SetItemString(new_dict_EAITaskPriority, "Lowest", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAITaskPriority, "Low", Py_BuildValue("i", 64));
	PyDict_SetItemString(new_dict_EAITaskPriority, "AutonomousAI", Py_BuildValue("i", 127));
	PyDict_SetItemString(new_dict_EAITaskPriority, "High", Py_BuildValue("i", 192));
	PyDict_SetItemString(new_dict_EAITaskPriority, "Ultimate", Py_BuildValue("i", 254));
	PyDict_SetItemString(new_dict_EAITaskPriority, "EAITaskPriority_MAX", Py_BuildValue("i", 255));

}
void unreal_export_uenum_EGenericAICheck()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGenericAICheck = PyImport_AddModule("EGenericAICheck");
#else                                                                                     
	PyObject* new__module_EGenericAICheck = Py_InitModule3("EGenericAICheck", NULL, NULL);
#endif

	PyObject* new_dict_EGenericAICheck = PyModule_GetDict(new_module_EGenericAICheck);
	PyDict_SetItemString(new_dict_EGenericAICheck, "Less", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGenericAICheck, "LessOrEqual", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGenericAICheck, "Equal", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGenericAICheck, "NotEqual", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGenericAICheck, "GreaterOrEqual", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EGenericAICheck, "Greater", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EGenericAICheck, "IsTrue", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EGenericAICheck, "MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EAILockSource()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAILockSource = PyImport_AddModule("EAILockSource");
#else                                                                                     
	PyObject* new__module_EAILockSource = Py_InitModule3("EAILockSource", NULL, NULL);
#endif

	PyObject* new_dict_EAILockSource = PyModule_GetDict(new_module_EAILockSource);
	PyDict_SetItemString(new_dict_EAILockSource, "Animation", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAILockSource, "Logic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAILockSource, "Script", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAILockSource, "Gameplay", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAILockSource, "MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EAIRequestPriority()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAIRequestPriority = PyImport_AddModule("EAIRequestPriority");
#else                                                                                     
	PyObject* new__module_EAIRequestPriority = Py_InitModule3("EAIRequestPriority", NULL, NULL);
#endif

	PyObject* new_dict_EAIRequestPriority = PyModule_GetDict(new_module_EAIRequestPriority);
	PyDict_SetItemString(new_dict_EAIRequestPriority, "SoftScript", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAIRequestPriority, "Logic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAIRequestPriority, "HardScript", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAIRequestPriority, "Reaction", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAIRequestPriority, "Ultimate", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EAIRequestPriority, "MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EPawnActionEventType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPawnActionEventType = PyImport_AddModule("EPawnActionEventType");
#else                                                                                     
	PyObject* new__module_EPawnActionEventType = Py_InitModule3("EPawnActionEventType", NULL, NULL);
#endif

	PyObject* new_dict_EPawnActionEventType = PyModule_GetDict(new_module_EPawnActionEventType);
	PyDict_SetItemString(new_dict_EPawnActionEventType, "Invalid", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPawnActionEventType, "FailedToStart", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPawnActionEventType, "InstantAbort", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPawnActionEventType, "FinishedAborting", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPawnActionEventType, "FinishedExecution", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPawnActionEventType, "Push", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EPawnActionEventType, "EPawnActionEventType_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EPawnActionResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPawnActionResult = PyImport_AddModule("EPawnActionResult");
#else                                                                                     
	PyObject* new__module_EPawnActionResult = Py_InitModule3("EPawnActionResult", NULL, NULL);
#endif

	PyObject* new_dict_EPawnActionResult = PyModule_GetDict(new_module_EPawnActionResult);
	PyDict_SetItemString(new_dict_EPawnActionResult, "NotStarted", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPawnActionResult, "InProgress", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPawnActionResult, "Success", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPawnActionResult, "Failed", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPawnActionResult, "Aborted", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPawnActionResult, "EPawnActionResult_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EPawnActionAbortState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPawnActionAbortState = PyImport_AddModule("EPawnActionAbortState");
#else                                                                                     
	PyObject* new__module_EPawnActionAbortState = Py_InitModule3("EPawnActionAbortState", NULL, NULL);
#endif

	PyObject* new_dict_EPawnActionAbortState = PyModule_GetDict(new_module_EPawnActionAbortState);
	PyDict_SetItemString(new_dict_EPawnActionAbortState, "NeverStarted", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPawnActionAbortState, "NotBeingAborted", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPawnActionAbortState, "MarkPendingAbort", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPawnActionAbortState, "LatentAbortInProgress", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPawnActionAbortState, "AbortDone", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPawnActionAbortState, "MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_FAIDistanceType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_FAIDistanceType = PyImport_AddModule("FAIDistanceType");
#else                                                                                     
	PyObject* new__module_FAIDistanceType = Py_InitModule3("FAIDistanceType", NULL, NULL);
#endif

	PyObject* new_dict_FAIDistanceType = PyModule_GetDict(new_module_FAIDistanceType);
	PyDict_SetItemString(new_dict_FAIDistanceType, "Distance3D", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_FAIDistanceType, "Distance2D", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_FAIDistanceType, "DistanceZ", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_FAIDistanceType, "MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAIOptionFlag()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAIOptionFlag = PyImport_AddModule("EAIOptionFlag");
#else                                                                                     
	PyObject* new__module_EAIOptionFlag = Py_InitModule3("EAIOptionFlag", NULL, NULL);
#endif

	PyObject* new_dict_EAIOptionFlag = PyModule_GetDict(new_module_EAIOptionFlag);
	PyDict_SetItemString(new_dict_EAIOptionFlag, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAIOptionFlag, "Enable", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAIOptionFlag, "Disable", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAIOptionFlag, "MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EBTFlowAbortMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBTFlowAbortMode = PyImport_AddModule("EBTFlowAbortMode");
#else                                                                                     
	PyObject* new__module_EBTFlowAbortMode = Py_InitModule3("EBTFlowAbortMode", NULL, NULL);
#endif

	PyObject* new_dict_EBTFlowAbortMode = PyModule_GetDict(new_module_EBTFlowAbortMode);
	PyDict_SetItemString(new_dict_EBTFlowAbortMode, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBTFlowAbortMode, "LowerPriority", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBTFlowAbortMode, "Self", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBTFlowAbortMode, "Both", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EBTFlowAbortMode, "EBTFlowAbortMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EBTNodeResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBTNodeResult = PyImport_AddModule("EBTNodeResult");
#else                                                                                     
	PyObject* new__module_EBTNodeResult = Py_InitModule3("EBTNodeResult", NULL, NULL);
#endif

	PyObject* new_dict_EBTNodeResult = PyModule_GetDict(new_module_EBTNodeResult);
	PyDict_SetItemString(new_dict_EBTNodeResult, "Succeeded", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBTNodeResult, "Failed", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBTNodeResult, "Aborted", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBTNodeResult, "InProgress", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EBTNodeResult, "EBTNodeResult_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ETextKeyOperation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextKeyOperation = PyImport_AddModule("ETextKeyOperation");
#else                                                                                     
	PyObject* new__module_ETextKeyOperation = Py_InitModule3("ETextKeyOperation", NULL, NULL);
#endif

	PyObject* new_dict_ETextKeyOperation = PyModule_GetDict(new_module_ETextKeyOperation);
	PyDict_SetItemString(new_dict_ETextKeyOperation, "Equal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextKeyOperation, "NotEqual", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextKeyOperation, "Contain", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextKeyOperation, "NotContain", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETextKeyOperation, "ETextKeyOperation_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EArithmeticKeyOperation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EArithmeticKeyOperation = PyImport_AddModule("EArithmeticKeyOperation");
#else                                                                                     
	PyObject* new__module_EArithmeticKeyOperation = Py_InitModule3("EArithmeticKeyOperation", NULL, NULL);
#endif

	PyObject* new_dict_EArithmeticKeyOperation = PyModule_GetDict(new_module_EArithmeticKeyOperation);
	PyDict_SetItemString(new_dict_EArithmeticKeyOperation, "Equal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EArithmeticKeyOperation, "NotEqual", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EArithmeticKeyOperation, "Less", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EArithmeticKeyOperation, "LessOrEqual", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EArithmeticKeyOperation, "Greater", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EArithmeticKeyOperation, "GreaterOrEqual", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EArithmeticKeyOperation, "EArithmeticKeyOperation_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EBasicKeyOperation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBasicKeyOperation = PyImport_AddModule("EBasicKeyOperation");
#else                                                                                     
	PyObject* new__module_EBasicKeyOperation = Py_InitModule3("EBasicKeyOperation", NULL, NULL);
#endif

	PyObject* new_dict_EBasicKeyOperation = PyModule_GetDict(new_module_EBasicKeyOperation);
	PyDict_SetItemString(new_dict_EBasicKeyOperation, "Set", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBasicKeyOperation, "NotSet", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBasicKeyOperation, "EBasicKeyOperation_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EBTParallelMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBTParallelMode = PyImport_AddModule("EBTParallelMode");
#else                                                                                     
	PyObject* new__module_EBTParallelMode = Py_InitModule3("EBTParallelMode", NULL, NULL);
#endif

	PyObject* new_dict_EBTParallelMode = PyModule_GetDict(new_module_EBTParallelMode);
	PyDict_SetItemString(new_dict_EBTParallelMode, "AbortBackground", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBTParallelMode, "WaitForBackground", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBTParallelMode, "EBTParallelMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EBTDecoratorLogic()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBTDecoratorLogic = PyImport_AddModule("EBTDecoratorLogic");
#else                                                                                     
	PyObject* new__module_EBTDecoratorLogic = Py_InitModule3("EBTDecoratorLogic", NULL, NULL);
#endif

	PyObject* new_dict_EBTDecoratorLogic = PyModule_GetDict(new_module_EBTDecoratorLogic);
	PyDict_SetItemString(new_dict_EBTDecoratorLogic, "Invalid", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBTDecoratorLogic, "Test", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBTDecoratorLogic, "And", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBTDecoratorLogic, "Or", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EBTDecoratorLogic, "Not", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EBTDecoratorLogic, "EBTDecoratorLogic_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EBTChildIndex()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBTChildIndex = PyImport_AddModule("EBTChildIndex");
#else                                                                                     
	PyObject* new__module_EBTChildIndex = Py_InitModule3("EBTChildIndex", NULL, NULL);
#endif

	PyObject* new_dict_EBTChildIndex = PyModule_GetDict(new_module_EBTChildIndex);
	PyDict_SetItemString(new_dict_EBTChildIndex, "FirstNode", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBTChildIndex, "TaskNode", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBTChildIndex, "EBTChildIndex_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EBTBlackboardRestart()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBTBlackboardRestart = PyImport_AddModule("EBTBlackboardRestart");
#else                                                                                     
	PyObject* new__module_EBTBlackboardRestart = Py_InitModule3("EBTBlackboardRestart", NULL, NULL);
#endif

	PyObject* new_dict_EBTBlackboardRestart = PyModule_GetDict(new_module_EBTBlackboardRestart);
	PyDict_SetItemString(new_dict_EBTBlackboardRestart, "ValueChange", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBTBlackboardRestart, "ResultChange", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBTBlackboardRestart, "EBTBlackboardRestart_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EBlackBoardEntryComparison()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBlackBoardEntryComparison = PyImport_AddModule("EBlackBoardEntryComparison");
#else                                                                                     
	PyObject* new__module_EBlackBoardEntryComparison = Py_InitModule3("EBlackBoardEntryComparison", NULL, NULL);
#endif

	PyObject* new_dict_EBlackBoardEntryComparison = PyModule_GetDict(new_module_EBlackBoardEntryComparison);
	PyDict_SetItemString(new_dict_EBlackBoardEntryComparison, "Equal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBlackBoardEntryComparison, "NotEqual", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBlackBoardEntryComparison, "EBlackBoardEntryComparison_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EPathExistanceQueryType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPathExistanceQueryType = PyImport_AddModule("EPathExistanceQueryType");
#else                                                                                     
	PyObject* new__module_EPathExistanceQueryType = Py_InitModule3("EPathExistanceQueryType", NULL, NULL);
#endif

	PyObject* new_dict_EPathExistanceQueryType = PyModule_GetDict(new_module_EPathExistanceQueryType);
	PyDict_SetItemString(new_dict_EPathExistanceQueryType, "NavmeshRaycast2D", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPathExistanceQueryType, "HierarchicalQuery", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPathExistanceQueryType, "RegularPathFinding", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPathExistanceQueryType, "EPathExistanceQueryType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPointOnCircleSpacingMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPointOnCircleSpacingMethod = PyImport_AddModule("EPointOnCircleSpacingMethod");
#else                                                                                     
	PyObject* new__module_EPointOnCircleSpacingMethod = Py_InitModule3("EPointOnCircleSpacingMethod", NULL, NULL);
#endif

	PyObject* new_dict_EPointOnCircleSpacingMethod = PyModule_GetDict(new_module_EPointOnCircleSpacingMethod);
	PyDict_SetItemString(new_dict_EPointOnCircleSpacingMethod, "BySpaceBetween", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPointOnCircleSpacingMethod, "ByNumberOfPoints", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPointOnCircleSpacingMethod, "EPointOnCircleSpacingMethod_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EEQSNormalizationType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEQSNormalizationType = PyImport_AddModule("EEQSNormalizationType");
#else                                                                                     
	PyObject* new__module_EEQSNormalizationType = Py_InitModule3("EEQSNormalizationType", NULL, NULL);
#endif

	PyObject* new_dict_EEQSNormalizationType = PyModule_GetDict(new_module_EEQSNormalizationType);
	PyDict_SetItemString(new_dict_EEQSNormalizationType, "Absolute", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEQSNormalizationType, "RelativeToScores", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEQSNormalizationType, "EEQSNormalizationType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EEnvTestDistance()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvTestDistance = PyImport_AddModule("EEnvTestDistance");
#else                                                                                     
	PyObject* new__module_EEnvTestDistance = Py_InitModule3("EEnvTestDistance", NULL, NULL);
#endif

	PyObject* new_dict_EEnvTestDistance = PyModule_GetDict(new_module_EEnvTestDistance);
	PyDict_SetItemString(new_dict_EEnvTestDistance, "Distance3D", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvTestDistance, "Distance2D", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvTestDistance, "DistanceZ", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvTestDistance, "DistanceAbsoluteZ", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEnvTestDistance, "EEnvTestDistance_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EEnvTestDot()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvTestDot = PyImport_AddModule("EEnvTestDot");
#else                                                                                     
	PyObject* new__module_EEnvTestDot = Py_InitModule3("EEnvTestDot", NULL, NULL);
#endif

	PyObject* new_dict_EEnvTestDot = PyModule_GetDict(new_module_EEnvTestDot);
	PyDict_SetItemString(new_dict_EEnvTestDot, "Dot3D", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvTestDot, "Dot2D", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvTestDot, "EEnvTestDot_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EEnvTestPathfinding()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvTestPathfinding = PyImport_AddModule("EEnvTestPathfinding");
#else                                                                                     
	PyObject* new__module_EEnvTestPathfinding = Py_InitModule3("EEnvTestPathfinding", NULL, NULL);
#endif

	PyObject* new_dict_EEnvTestPathfinding = PyModule_GetDict(new_module_EEnvTestPathfinding);
	PyDict_SetItemString(new_dict_EEnvTestPathfinding, "PathExist", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvTestPathfinding, "PathCost", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvTestPathfinding, "PathLength", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvTestPathfinding, "EEnvTestPathfinding_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEnvQueryTestClamping()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvQueryTestClamping = PyImport_AddModule("EEnvQueryTestClamping");
#else                                                                                     
	PyObject* new__module_EEnvQueryTestClamping = Py_InitModule3("EEnvQueryTestClamping", NULL, NULL);
#endif

	PyObject* new_dict_EEnvQueryTestClamping = PyModule_GetDict(new_module_EEnvQueryTestClamping);
	PyDict_SetItemString(new_dict_EEnvQueryTestClamping, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvQueryTestClamping, "SpecifiedValue", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvQueryTestClamping, "FilterThreshold", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvQueryTestClamping, "EEnvQueryTestClamping_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEnvDirection()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvDirection = PyImport_AddModule("EEnvDirection");
#else                                                                                     
	PyObject* new__module_EEnvDirection = Py_InitModule3("EEnvDirection", NULL, NULL);
#endif

	PyObject* new_dict_EEnvDirection = PyModule_GetDict(new_module_EEnvDirection);
	PyDict_SetItemString(new_dict_EEnvDirection, "TwoPoints", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvDirection, "Rotation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvDirection, "EEnvDirection_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EEnvOverlapShape()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvOverlapShape = PyImport_AddModule("EEnvOverlapShape");
#else                                                                                     
	PyObject* new__module_EEnvOverlapShape = Py_InitModule3("EEnvOverlapShape", NULL, NULL);
#endif

	PyObject* new_dict_EEnvOverlapShape = PyModule_GetDict(new_module_EEnvOverlapShape);
	PyDict_SetItemString(new_dict_EEnvOverlapShape, "Box", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvOverlapShape, "Sphere", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvOverlapShape, "Capsule", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvOverlapShape, "EEnvOverlapShape_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEnvTraceShape()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvTraceShape = PyImport_AddModule("EEnvTraceShape");
#else                                                                                     
	PyObject* new__module_EEnvTraceShape = Py_InitModule3("EEnvTraceShape", NULL, NULL);
#endif

	PyObject* new_dict_EEnvTraceShape = PyModule_GetDict(new_module_EEnvTraceShape);
	PyDict_SetItemString(new_dict_EEnvTraceShape, "Line", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvTraceShape, "Box", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvTraceShape, "Sphere", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvTraceShape, "Capsule", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEnvTraceShape, "EEnvTraceShape_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EEnvQueryTrace()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvQueryTrace = PyImport_AddModule("EEnvQueryTrace");
#else                                                                                     
	PyObject* new__module_EEnvQueryTrace = Py_InitModule3("EEnvQueryTrace", NULL, NULL);
#endif

	PyObject* new_dict_EEnvQueryTrace = PyModule_GetDict(new_module_EEnvQueryTrace);
	PyDict_SetItemString(new_dict_EEnvQueryTrace, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvQueryTrace, "Navigation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvQueryTrace, "Geometry", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvQueryTrace, "NavigationOverLedges", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEnvQueryTrace, "EEnvQueryTrace_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EAIParamType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAIParamType = PyImport_AddModule("EAIParamType");
#else                                                                                     
	PyObject* new__module_EAIParamType = Py_InitModule3("EAIParamType", NULL, NULL);
#endif

	PyObject* new_dict_EAIParamType = PyModule_GetDict(new_module_EAIParamType);
	PyDict_SetItemString(new_dict_EAIParamType, "Float", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAIParamType, "Int", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAIParamType, "Bool", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAIParamType, "MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEnvQueryParam()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvQueryParam = PyImport_AddModule("EEnvQueryParam");
#else                                                                                     
	PyObject* new__module_EEnvQueryParam = Py_InitModule3("EEnvQueryParam", NULL, NULL);
#endif

	PyObject* new_dict_EEnvQueryParam = PyModule_GetDict(new_module_EEnvQueryParam);
	PyDict_SetItemString(new_dict_EEnvQueryParam, "Float", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvQueryParam, "Int", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvQueryParam, "Bool", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvQueryParam, "EEnvQueryParam_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEnvQueryRunMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvQueryRunMode = PyImport_AddModule("EEnvQueryRunMode");
#else                                                                                     
	PyObject* new__module_EEnvQueryRunMode = Py_InitModule3("EEnvQueryRunMode", NULL, NULL);
#endif

	PyObject* new_dict_EEnvQueryRunMode = PyModule_GetDict(new_module_EEnvQueryRunMode);
	PyDict_SetItemString(new_dict_EEnvQueryRunMode, "SingleResult", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvQueryRunMode, "RandomBest5Pct", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvQueryRunMode, "RandomBest25Pct", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvQueryRunMode, "AllMatching", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEnvQueryRunMode, "EEnvQueryRunMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EEnvTestScoreOperator()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvTestScoreOperator = PyImport_AddModule("EEnvTestScoreOperator");
#else                                                                                     
	PyObject* new__module_EEnvTestScoreOperator = Py_InitModule3("EEnvTestScoreOperator", NULL, NULL);
#endif

	PyObject* new_dict_EEnvTestScoreOperator = PyModule_GetDict(new_module_EEnvTestScoreOperator);
	PyDict_SetItemString(new_dict_EEnvTestScoreOperator, "AverageScore", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvTestScoreOperator, "MinScore", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvTestScoreOperator, "MaxScore", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvTestScoreOperator, "EEnvTestScoreOperator_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEnvTestFilterOperator()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvTestFilterOperator = PyImport_AddModule("EEnvTestFilterOperator");
#else                                                                                     
	PyObject* new__module_EEnvTestFilterOperator = Py_InitModule3("EEnvTestFilterOperator", NULL, NULL);
#endif

	PyObject* new_dict_EEnvTestFilterOperator = PyModule_GetDict(new_module_EEnvTestFilterOperator);
	PyDict_SetItemString(new_dict_EEnvTestFilterOperator, "AllPass", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvTestFilterOperator, "AnyPass", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvTestFilterOperator, "EEnvTestFilterOperator_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EEnvTestCost()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvTestCost = PyImport_AddModule("EEnvTestCost");
#else                                                                                     
	PyObject* new__module_EEnvTestCost = Py_InitModule3("EEnvTestCost", NULL, NULL);
#endif

	PyObject* new_dict_EEnvTestCost = PyModule_GetDict(new_module_EEnvTestCost);
	PyDict_SetItemString(new_dict_EEnvTestCost, "Low", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvTestCost, "Medium", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvTestCost, "High", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvTestCost, "EEnvTestCost_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEnvTestWeight()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvTestWeight = PyImport_AddModule("EEnvTestWeight");
#else                                                                                     
	PyObject* new__module_EEnvTestWeight = Py_InitModule3("EEnvTestWeight", NULL, NULL);
#endif

	PyObject* new_dict_EEnvTestWeight = PyModule_GetDict(new_module_EEnvTestWeight);
	PyDict_SetItemString(new_dict_EEnvTestWeight, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvTestWeight, "Square", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvTestWeight, "Inverse", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvTestWeight, "Unused", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEnvTestWeight, "Constant", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EEnvTestWeight, "Skip", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EEnvTestWeight, "EEnvTestWeight_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EEnvTestScoreEquation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvTestScoreEquation = PyImport_AddModule("EEnvTestScoreEquation");
#else                                                                                     
	PyObject* new__module_EEnvTestScoreEquation = Py_InitModule3("EEnvTestScoreEquation", NULL, NULL);
#endif

	PyObject* new_dict_EEnvTestScoreEquation = PyModule_GetDict(new_module_EEnvTestScoreEquation);
	PyDict_SetItemString(new_dict_EEnvTestScoreEquation, "Linear", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvTestScoreEquation, "Square", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvTestScoreEquation, "InverseLinear", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvTestScoreEquation, "SquareRoot", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEnvTestScoreEquation, "Constant", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EEnvTestScoreEquation, "EEnvTestScoreEquation_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EEnvTestFilterType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvTestFilterType = PyImport_AddModule("EEnvTestFilterType");
#else                                                                                     
	PyObject* new__module_EEnvTestFilterType = Py_InitModule3("EEnvTestFilterType", NULL, NULL);
#endif

	PyObject* new_dict_EEnvTestFilterType = PyModule_GetDict(new_module_EEnvTestFilterType);
	PyDict_SetItemString(new_dict_EEnvTestFilterType, "Minimum", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvTestFilterType, "Maximum", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvTestFilterType, "Range", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvTestFilterType, "Match", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EEnvTestFilterType, "EEnvTestFilterType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EEnvTestPurpose()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvTestPurpose = PyImport_AddModule("EEnvTestPurpose");
#else                                                                                     
	PyObject* new__module_EEnvTestPurpose = Py_InitModule3("EEnvTestPurpose", NULL, NULL);
#endif

	PyObject* new_dict_EEnvTestPurpose = PyModule_GetDict(new_module_EEnvTestPurpose);
	PyDict_SetItemString(new_dict_EEnvTestPurpose, "Filter", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvTestPurpose, "Score", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvTestPurpose, "FilterAndScore", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvTestPurpose, "EEnvTestPurpose_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEnvQueryHightlightMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEnvQueryHightlightMode = PyImport_AddModule("EEnvQueryHightlightMode");
#else                                                                                     
	PyObject* new__module_EEnvQueryHightlightMode = Py_InitModule3("EEnvQueryHightlightMode", NULL, NULL);
#endif

	PyObject* new_dict_EEnvQueryHightlightMode = PyModule_GetDict(new_module_EEnvQueryHightlightMode);
	PyDict_SetItemString(new_dict_EEnvQueryHightlightMode, "All", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEnvQueryHightlightMode, "Best5Pct", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEnvQueryHightlightMode, "Best25Pct", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEnvQueryHightlightMode, "EEnvQueryHightlightMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETeamAttitude()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETeamAttitude = PyImport_AddModule("ETeamAttitude");
#else                                                                                     
	PyObject* new__module_ETeamAttitude = Py_InitModule3("ETeamAttitude", NULL, NULL);
#endif

	PyObject* new_dict_ETeamAttitude = PyModule_GetDict(new_module_ETeamAttitude);
	PyDict_SetItemString(new_dict_ETeamAttitude, "Friendly", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETeamAttitude, "Neutral", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETeamAttitude, "Hostile", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETeamAttitude, "ETeamAttitude_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPathFollowingRequestResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPathFollowingRequestResult = PyImport_AddModule("EPathFollowingRequestResult");
#else                                                                                     
	PyObject* new__module_EPathFollowingRequestResult = Py_InitModule3("EPathFollowingRequestResult", NULL, NULL);
#endif

	PyObject* new_dict_EPathFollowingRequestResult = PyModule_GetDict(new_module_EPathFollowingRequestResult);
	PyDict_SetItemString(new_dict_EPathFollowingRequestResult, "Failed", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPathFollowingRequestResult, "AlreadyAtGoal", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPathFollowingRequestResult, "RequestSuccessful", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPathFollowingRequestResult, "EPathFollowingRequestResult_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPathFollowingAction()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPathFollowingAction = PyImport_AddModule("EPathFollowingAction");
#else                                                                                     
	PyObject* new__module_EPathFollowingAction = Py_InitModule3("EPathFollowingAction", NULL, NULL);
#endif

	PyObject* new_dict_EPathFollowingAction = PyModule_GetDict(new_module_EPathFollowingAction);
	PyDict_SetItemString(new_dict_EPathFollowingAction, "Error", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPathFollowingAction, "NoMove", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPathFollowingAction, "DirectMove", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPathFollowingAction, "PartialPath", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPathFollowingAction, "PathToGoal", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPathFollowingAction, "EPathFollowingAction_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EPathFollowingStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPathFollowingStatus = PyImport_AddModule("EPathFollowingStatus");
#else                                                                                     
	PyObject* new__module_EPathFollowingStatus = Py_InitModule3("EPathFollowingStatus", NULL, NULL);
#endif

	PyObject* new_dict_EPathFollowingStatus = PyModule_GetDict(new_module_EPathFollowingStatus);
	PyDict_SetItemString(new_dict_EPathFollowingStatus, "Idle", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPathFollowingStatus, "Waiting", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPathFollowingStatus, "Paused", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPathFollowingStatus, "Moving", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPathFollowingStatus, "EPathFollowingStatus_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EPawnActionFailHandling()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPawnActionFailHandling = PyImport_AddModule("EPawnActionFailHandling");
#else                                                                                     
	PyObject* new__module_EPawnActionFailHandling = Py_InitModule3("EPawnActionFailHandling", NULL, NULL);
#endif

	PyObject* new_dict_EPawnActionFailHandling = PyModule_GetDict(new_module_EPawnActionFailHandling);
	PyDict_SetItemString(new_dict_EPawnActionFailHandling, "RequireSuccess", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPawnActionFailHandling, "IgnoreFailure", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPawnActionFailHandling, "EPawnActionFailHandling_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EPawnSubActionTriggeringPolicy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPawnSubActionTriggeringPolicy = PyImport_AddModule("EPawnSubActionTriggeringPolicy");
#else                                                                                     
	PyObject* new__module_EPawnSubActionTriggeringPolicy = Py_InitModule3("EPawnSubActionTriggeringPolicy", NULL, NULL);
#endif

	PyObject* new_dict_EPawnSubActionTriggeringPolicy = PyModule_GetDict(new_module_EPawnSubActionTriggeringPolicy);
	PyDict_SetItemString(new_dict_EPawnSubActionTriggeringPolicy, "CopyBeforeTriggering", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPawnSubActionTriggeringPolicy, "ReuseInstances", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPawnSubActionTriggeringPolicy, "EPawnSubActionTriggeringPolicy_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EPawnActionMoveMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPawnActionMoveMode = PyImport_AddModule("EPawnActionMoveMode");
#else                                                                                     
	PyObject* new__module_EPawnActionMoveMode = Py_InitModule3("EPawnActionMoveMode", NULL, NULL);
#endif

	PyObject* new_dict_EPawnActionMoveMode = PyModule_GetDict(new_module_EPawnActionMoveMode);
	PyDict_SetItemString(new_dict_EPawnActionMoveMode, "UsePathfinding", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPawnActionMoveMode, "StraightLine", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPawnActionMoveMode, "EPawnActionMoveMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EDatasmithAreaLightActorType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDatasmithAreaLightActorType = PyImport_AddModule("EDatasmithAreaLightActorType");
#else                                                                                     
	PyObject* new__module_EDatasmithAreaLightActorType = Py_InitModule3("EDatasmithAreaLightActorType", NULL, NULL);
#endif

	PyObject* new_dict_EDatasmithAreaLightActorType = PyModule_GetDict(new_module_EDatasmithAreaLightActorType);
	PyDict_SetItemString(new_dict_EDatasmithAreaLightActorType, "Point", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDatasmithAreaLightActorType, "Spot", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDatasmithAreaLightActorType, "Rect", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDatasmithAreaLightActorType, "EDatasmithAreaLightActorType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDatasmithAreaLightActorShape()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDatasmithAreaLightActorShape = PyImport_AddModule("EDatasmithAreaLightActorShape");
#else                                                                                     
	PyObject* new__module_EDatasmithAreaLightActorShape = Py_InitModule3("EDatasmithAreaLightActorShape", NULL, NULL);
#endif

	PyObject* new_dict_EDatasmithAreaLightActorShape = PyModule_GetDict(new_module_EDatasmithAreaLightActorShape);
	PyDict_SetItemString(new_dict_EDatasmithAreaLightActorShape, "Rectangle", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDatasmithAreaLightActorShape, "Disc", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDatasmithAreaLightActorShape, "Sphere", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDatasmithAreaLightActorShape, "Cylinder", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDatasmithAreaLightActorShape, "None", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EDatasmithAreaLightActorShape, "EDatasmithAreaLightActorShape_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EVREDDataTableType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVREDDataTableType = PyImport_AddModule("EVREDDataTableType");
#else                                                                                     
	PyObject* new__module_EVREDDataTableType = Py_InitModule3("EVREDDataTableType", NULL, NULL);
#endif

	PyObject* new_dict_EVREDDataTableType = PyModule_GetDict(new_module_EVREDDataTableType);
	PyDict_SetItemString(new_dict_EVREDDataTableType, "NotDatatable", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVREDDataTableType, "AnimClips", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVREDDataTableType, "AnimNodes", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVREDDataTableType, "EVREDDataTableType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDatasmithCADStitchingTechnique()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDatasmithCADStitchingTechnique = PyImport_AddModule("EDatasmithCADStitchingTechnique");
#else                                                                                     
	PyObject* new__module_EDatasmithCADStitchingTechnique = Py_InitModule3("EDatasmithCADStitchingTechnique", NULL, NULL);
#endif

	PyObject* new_dict_EDatasmithCADStitchingTechnique = PyModule_GetDict(new_module_EDatasmithCADStitchingTechnique);
	PyDict_SetItemString(new_dict_EDatasmithCADStitchingTechnique, "StitchingNone", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDatasmithCADStitchingTechnique, "StitchingHeal", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDatasmithCADStitchingTechnique, "StitchingSew", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDatasmithCADStitchingTechnique, "EDatasmithCADStitchingTechnique_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDatasmithImportHierarchy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDatasmithImportHierarchy = PyImport_AddModule("EDatasmithImportHierarchy");
#else                                                                                     
	PyObject* new__module_EDatasmithImportHierarchy = Py_InitModule3("EDatasmithImportHierarchy", NULL, NULL);
#endif

	PyObject* new_dict_EDatasmithImportHierarchy = PyModule_GetDict(new_module_EDatasmithImportHierarchy);
	PyDict_SetItemString(new_dict_EDatasmithImportHierarchy, "UseMultipleActors", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDatasmithImportHierarchy, "UseSingleActor", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDatasmithImportHierarchy, "UseOneBlueprint", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDatasmithImportHierarchy, "EDatasmithImportHierarchy_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDatasmithImportScene()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDatasmithImportScene = PyImport_AddModule("EDatasmithImportScene");
#else                                                                                     
	PyObject* new__module_EDatasmithImportScene = Py_InitModule3("EDatasmithImportScene", NULL, NULL);
#endif

	PyObject* new_dict_EDatasmithImportScene = PyModule_GetDict(new_module_EDatasmithImportScene);
	PyDict_SetItemString(new_dict_EDatasmithImportScene, "NewLevel", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDatasmithImportScene, "CurrentLevel", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDatasmithImportScene, "AssetsOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDatasmithImportScene, "EDatasmithImportScene_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDatasmithImportLightmapMax()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDatasmithImportLightmapMax = PyImport_AddModule("EDatasmithImportLightmapMax");
#else                                                                                     
	PyObject* new__module_EDatasmithImportLightmapMax = Py_InitModule3("EDatasmithImportLightmapMax", NULL, NULL);
#endif

	PyObject* new_dict_EDatasmithImportLightmapMax = PyModule_GetDict(new_module_EDatasmithImportLightmapMax);
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMax, "LIGHTMAP_64", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMax, "LIGHTMAP_128", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMax, "LIGHTMAP_256", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMax, "LIGHTMAP_512", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMax, "LIGHTMAP_1024", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMax, "LIGHTMAP_2048", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMax, "LIGHTMAP_4096", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMax, "LIGHTMAP_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EDatasmithImportLightmapMin()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDatasmithImportLightmapMin = PyImport_AddModule("EDatasmithImportLightmapMin");
#else                                                                                     
	PyObject* new__module_EDatasmithImportLightmapMin = Py_InitModule3("EDatasmithImportLightmapMin", NULL, NULL);
#endif

	PyObject* new_dict_EDatasmithImportLightmapMin = PyModule_GetDict(new_module_EDatasmithImportLightmapMin);
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMin, "LIGHTMAP_16", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMin, "LIGHTMAP_32", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMin, "LIGHTMAP_64", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMin, "LIGHTMAP_128", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMin, "LIGHTMAP_256", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMin, "LIGHTMAP_512", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EDatasmithImportLightmapMin, "LIGHTMAP_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EDatasmithImportMaterialQuality()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDatasmithImportMaterialQuality = PyImport_AddModule("EDatasmithImportMaterialQuality");
#else                                                                                     
	PyObject* new__module_EDatasmithImportMaterialQuality = Py_InitModule3("EDatasmithImportMaterialQuality", NULL, NULL);
#endif

	PyObject* new_dict_EDatasmithImportMaterialQuality = PyModule_GetDict(new_module_EDatasmithImportMaterialQuality);
	PyDict_SetItemString(new_dict_EDatasmithImportMaterialQuality, "UseNoFresnelCurves", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDatasmithImportMaterialQuality, "UseSimplifierFresnelCurves", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDatasmithImportMaterialQuality, "UseRealFresnelCurves", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDatasmithImportMaterialQuality, "EDatasmithImportMaterialQuality_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDatasmithImportActorPolicy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDatasmithImportActorPolicy = PyImport_AddModule("EDatasmithImportActorPolicy");
#else                                                                                     
	PyObject* new__module_EDatasmithImportActorPolicy = Py_InitModule3("EDatasmithImportActorPolicy", NULL, NULL);
#endif

	PyObject* new_dict_EDatasmithImportActorPolicy = PyModule_GetDict(new_module_EDatasmithImportActorPolicy);
	PyDict_SetItemString(new_dict_EDatasmithImportActorPolicy, "Update", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDatasmithImportActorPolicy, "Full", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDatasmithImportActorPolicy, "Ignore", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDatasmithImportActorPolicy, "EDatasmithImportActorPolicy_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EDatasmithImportAssetConflictPolicy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDatasmithImportAssetConflictPolicy = PyImport_AddModule("EDatasmithImportAssetConflictPolicy");
#else                                                                                     
	PyObject* new__module_EDatasmithImportAssetConflictPolicy = Py_InitModule3("EDatasmithImportAssetConflictPolicy", NULL, NULL);
#endif

	PyObject* new_dict_EDatasmithImportAssetConflictPolicy = PyModule_GetDict(new_module_EDatasmithImportAssetConflictPolicy);
	PyDict_SetItemString(new_dict_EDatasmithImportAssetConflictPolicy, "Replace", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDatasmithImportAssetConflictPolicy, "Update", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDatasmithImportAssetConflictPolicy, "Use", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDatasmithImportAssetConflictPolicy, "Ignore", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDatasmithImportAssetConflictPolicy, "EDatasmithImportAssetConflictPolicy_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EDatasmithImportSearchPackagePolicy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDatasmithImportSearchPackagePolicy = PyImport_AddModule("EDatasmithImportSearchPackagePolicy");
#else                                                                                     
	PyObject* new__module_EDatasmithImportSearchPackagePolicy = Py_InitModule3("EDatasmithImportSearchPackagePolicy", NULL, NULL);
#endif

	PyObject* new_dict_EDatasmithImportSearchPackagePolicy = PyModule_GetDict(new_module_EDatasmithImportSearchPackagePolicy);
	PyDict_SetItemString(new_dict_EDatasmithImportSearchPackagePolicy, "Current", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDatasmithImportSearchPackagePolicy, "All", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDatasmithImportSearchPackagePolicy, "EDatasmithImportSearchPackagePolicy_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_PurchaseType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_PurchaseType = PyImport_AddModule("PurchaseType");
#else                                                                                     
	PyObject* new__module_PurchaseType = Py_InitModule3("PurchaseType", NULL, NULL);
#endif

	PyObject* new_dict_PurchaseType = PyModule_GetDict(new_module_PurchaseType);
	PyDict_SetItemString(new_dict_PurchaseType, "Consumable", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_PurchaseType, "Nonconsumable", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_PurchaseType, "Undefined", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_PurchaseType, "PurchaseType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAutoPinType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAutoPinType = PyImport_AddModule("EAutoPinType");
#else                                                                                     
	PyObject* new__module_EAutoPinType = Py_InitModule3("EAutoPinType", NULL, NULL);
#endif

	PyObject* new_dict_EAutoPinType = PyModule_GetDict(new_module_EAutoPinType);
	PyDict_SetItemString(new_dict_EAutoPinType, "OnlyOnDataRestoration", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAutoPinType, "Always", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAutoPinType, "Never", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAutoPinType, "EAutoPinType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMeshLOD()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshLOD = PyImport_AddModule("EMeshLOD");
#else                                                                                     
	PyObject* new__module_EMeshLOD = Py_InitModule3("EMeshLOD", NULL, NULL);
#endif

	PyObject* new_dict_EMeshLOD = PyModule_GetDict(new_module_EMeshLOD);
	PyDict_SetItemString(new_dict_EMeshLOD, "Minimum", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshLOD, "Medium", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshLOD, "Maximum", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMeshLOD, "EMeshLOD_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMeshState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshState = PyImport_AddModule("EMeshState");
#else                                                                                     
	PyObject* new__module_EMeshState = Py_InitModule3("EMeshState", NULL, NULL);
#endif

	PyObject* new_dict_EMeshState = PyModule_GetDict(new_module_EMeshState);
	PyDict_SetItemString(new_dict_EMeshState, "New", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshState, "Updated", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshState, "Deleted", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMeshState, "Unchanged", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMeshState, "EMeshState_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMLMeshVertexColorMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMLMeshVertexColorMode = PyImport_AddModule("EMLMeshVertexColorMode");
#else                                                                                     
	PyObject* new__module_EMLMeshVertexColorMode = Py_InitModule3("EMLMeshVertexColorMode", NULL, NULL);
#endif

	PyObject* new_dict_EMLMeshVertexColorMode = PyModule_GetDict(new_module_EMLMeshVertexColorMode);
	PyDict_SetItemString(new_dict_EMLMeshVertexColorMode, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMLMeshVertexColorMode, "Confidence", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMLMeshVertexColorMode, "Block", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMLMeshVertexColorMode, "LOD", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMLMeshVertexColorMode, "EMLMeshVertexColorMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMeshType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshType = PyImport_AddModule("EMeshType");
#else                                                                                     
	PyObject* new__module_EMeshType = Py_InitModule3("EMeshType", NULL, NULL);
#endif

	PyObject* new_dict_EMeshType = PyModule_GetDict(new_module_EMeshType);
	PyDict_SetItemString(new_dict_EMeshType, "Triangles", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshType, "PointCloud", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshType, "EMeshType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EPlaneQueryFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPlaneQueryFlags = PyImport_AddModule("EPlaneQueryFlags");
#else                                                                                     
	PyObject* new__module_EPlaneQueryFlags = Py_InitModule3("EPlaneQueryFlags", NULL, NULL);
#endif

	PyObject* new_dict_EPlaneQueryFlags = PyModule_GetDict(new_module_EPlaneQueryFlags);
	PyDict_SetItemString(new_dict_EPlaneQueryFlags, "Vertical", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPlaneQueryFlags, "Horizontal", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPlaneQueryFlags, "Arbitrary", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPlaneQueryFlags, "OrientToGravity", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPlaneQueryFlags, "PreferInner", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPlaneQueryFlags, "IgnoreHoles", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EPlaneQueryFlags, "Ceiling", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EPlaneQueryFlags, "Floor", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EPlaneQueryFlags, "Wall", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EPlaneQueryFlags, "EPlaneQueryFlags_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_ERaycastResultState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ERaycastResultState = PyImport_AddModule("ERaycastResultState");
#else                                                                                     
	PyObject* new__module_ERaycastResultState = Py_InitModule3("ERaycastResultState", NULL, NULL);
#endif

	PyObject* new_dict_ERaycastResultState = PyModule_GetDict(new_module_ERaycastResultState);
	PyDict_SetItemString(new_dict_ERaycastResultState, "RequestFailed", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ERaycastResultState, "NoCollision", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ERaycastResultState, "HitUnobserved", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ERaycastResultState, "HitObserved", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ERaycastResultState, "ERaycastResultState_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMagicLeapPrivilege()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMagicLeapPrivilege = PyImport_AddModule("EMagicLeapPrivilege");
#else                                                                                     
	PyObject* new__module_EMagicLeapPrivilege = Py_InitModule3("EMagicLeapPrivilege", NULL, NULL);
#endif

	PyObject* new_dict_EMagicLeapPrivilege = PyModule_GetDict(new_module_EMagicLeapPrivilege);
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "Invalid", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "AudioRecognizer", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "BatteryInfo", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "CameraCapture", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "WorldReconstruction", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "InAppPurchase", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "AudioCaptureMic", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "DrmCertificates", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "Occlusion", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "LowLatencyLightwear", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "Internet", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "IdentityRead", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "BackgroundDownload", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "BackgroundUpload", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "MediaDrm", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "Media", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "MediaMetadata", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "PowerInfo", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "LocalAreaNetwork", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "VoiceInput", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "Documents", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "ConnectBackgroundMusicService", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "RegisterBackgroundMusicService", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "PwFoundObjRead", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "NormalNotificationsUsage", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "MusicService", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "ControllerPose", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "ScreensProvider", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "GesturesSubscribe", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "GesturesConfig", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_EMagicLeapPrivilege, "EMagicLeapPrivilege_MAX", Py_BuildValue("i", 30));

}
void unreal_export_uenum_CloudStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_CloudStatus = PyImport_AddModule("CloudStatus");
#else                                                                                     
	PyObject* new__module_CloudStatus = Py_InitModule3("CloudStatus", NULL, NULL);
#endif

	PyObject* new_dict_CloudStatus = PyModule_GetDict(new_module_CloudStatus);
	PyDict_SetItemString(new_dict_CloudStatus, "CloudStatus_NotDone", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_CloudStatus, "CloudStatus_Done", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_CloudStatus, "CloudStatus_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EPassableWorldError()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPassableWorldError = PyImport_AddModule("EPassableWorldError");
#else                                                                                     
	PyObject* new__module_EPassableWorldError = Py_InitModule3("EPassableWorldError", NULL, NULL);
#endif

	PyObject* new_dict_EPassableWorldError = PyModule_GetDict(new_module_EPassableWorldError);
	PyDict_SetItemString(new_dict_EPassableWorldError, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPassableWorldError, "LowMapQuality", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPassableWorldError, "UnableToLocalize", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPassableWorldError, "Unavailable", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPassableWorldError, "PrivilegeDenied", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPassableWorldError, "InvalidParam", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EPassableWorldError, "UnspecifiedFailure", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EPassableWorldError, "PrivilegeRequestPending", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EPassableWorldError, "EPassableWorldError_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_EHeadTrackingMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHeadTrackingMode = PyImport_AddModule("EHeadTrackingMode");
#else                                                                                     
	PyObject* new__module_EHeadTrackingMode = Py_InitModule3("EHeadTrackingMode", NULL, NULL);
#endif

	PyObject* new_dict_EHeadTrackingMode = PyModule_GetDict(new_module_EHeadTrackingMode);
	PyDict_SetItemString(new_dict_EHeadTrackingMode, "PositionAndOrientation", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHeadTrackingMode, "OrientationOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHeadTrackingMode, "Unknown", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHeadTrackingMode, "EHeadTrackingMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EHeadTrackingError()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHeadTrackingError = PyImport_AddModule("EHeadTrackingError");
#else                                                                                     
	PyObject* new__module_EHeadTrackingError = Py_InitModule3("EHeadTrackingError", NULL, NULL);
#endif

	PyObject* new_dict_EHeadTrackingError = PyModule_GetDict(new_module_EHeadTrackingError);
	PyDict_SetItemString(new_dict_EHeadTrackingError, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHeadTrackingError, "NotEnoughFeatures", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHeadTrackingError, "LowLight", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHeadTrackingError, "Unknown", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EHeadTrackingError, "EHeadTrackingError_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EInAppPurchaseState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EInAppPurchaseState = PyImport_AddModule("EInAppPurchaseState");
#else                                                                                     
	PyObject* new__module_EInAppPurchaseState = Py_InitModule3("EInAppPurchaseState", NULL, NULL);
#endif

	PyObject* new_dict_EInAppPurchaseState = PyModule_GetDict(new_module_EInAppPurchaseState);
	PyDict_SetItemString(new_dict_EInAppPurchaseState, "Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EInAppPurchaseState, "Success", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EInAppPurchaseState, "Failed", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EInAppPurchaseState, "Cancelled", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EInAppPurchaseState, "Invalid", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EInAppPurchaseState, "NotAllowed", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EInAppPurchaseState, "Restored", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EInAppPurchaseState, "AlreadyOwned", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EInAppPurchaseState, "EInAppPurchaseState_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_EMPMatchOutcome()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMPMatchOutcome = PyImport_AddModule("EMPMatchOutcome");
#else                                                                                     
	PyObject* new__module_EMPMatchOutcome = Py_InitModule3("EMPMatchOutcome", NULL, NULL);
#endif

	PyObject* new_dict_EMPMatchOutcome = PyModule_GetDict(new_module_EMPMatchOutcome);
	PyDict_SetItemString(new_dict_EMPMatchOutcome, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMPMatchOutcome, "Quit", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMPMatchOutcome, "Won", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMPMatchOutcome, "Lost", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMPMatchOutcome, "Tied", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMPMatchOutcome, "TimeExpired", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMPMatchOutcome, "First", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMPMatchOutcome, "Second", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMPMatchOutcome, "Third", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMPMatchOutcome, "Fourth", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMPMatchOutcome, "EMPMatchOutcome_MAX", Py_BuildValue("i", 10));

}
void unreal_export_uenum_EBeaconConnectionState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBeaconConnectionState = PyImport_AddModule("EBeaconConnectionState");
#else                                                                                     
	PyObject* new__module_EBeaconConnectionState = Py_InitModule3("EBeaconConnectionState", NULL, NULL);
#endif

	PyObject* new_dict_EBeaconConnectionState = PyModule_GetDict(new_module_EBeaconConnectionState);
	PyDict_SetItemString(new_dict_EBeaconConnectionState, "Invalid", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBeaconConnectionState, "Closed", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBeaconConnectionState, "Pending", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBeaconConnectionState, "Open", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EBeaconConnectionState, "EBeaconConnectionState_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EClientRequestType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EClientRequestType = PyImport_AddModule("EClientRequestType");
#else                                                                                     
	PyObject* new__module_EClientRequestType = Py_InitModule3("EClientRequestType", NULL, NULL);
#endif

	PyObject* new_dict_EClientRequestType = PyModule_GetDict(new_module_EClientRequestType);
	PyDict_SetItemString(new_dict_EClientRequestType, "NonePending", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EClientRequestType, "ExistingSessionReservation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EClientRequestType, "ReservationUpdate", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EClientRequestType, "EmptyServerReservation", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EClientRequestType, "Reconnect", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EClientRequestType, "Abandon", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EClientRequestType, "EClientRequestType_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EPartyReservationResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPartyReservationResult = PyImport_AddModule("EPartyReservationResult");
#else                                                                                     
	PyObject* new__module_EPartyReservationResult = Py_InitModule3("EPartyReservationResult", NULL, NULL);
#endif

	PyObject* new_dict_EPartyReservationResult = PyModule_GetDict(new_module_EPartyReservationResult);
	PyDict_SetItemString(new_dict_EPartyReservationResult, "NoResult", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "RequestPending", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "GeneralError", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "PartyLimitReached", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "IncorrectPlayerCount", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "RequestTimedOut", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "ReservationDuplicate", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "ReservationNotFound", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "ReservationAccepted", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "ReservationDenied", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "ReservationDenied_CrossPlayRestriction", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "ReservationDenied_Banned", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "ReservationRequestCanceled", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "ReservationInvalid", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "BadSessionId", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "ReservationDenied_ContainsExistingPlayers", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EPartyReservationResult, "EPartyReservationResult_MAX", Py_BuildValue("i", 16));

}
void unreal_export_uenum_ESpectatorClientRequestType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESpectatorClientRequestType = PyImport_AddModule("ESpectatorClientRequestType");
#else                                                                                     
	PyObject* new__module_ESpectatorClientRequestType = Py_InitModule3("ESpectatorClientRequestType", NULL, NULL);
#endif

	PyObject* new_dict_ESpectatorClientRequestType = PyModule_GetDict(new_module_ESpectatorClientRequestType);
	PyDict_SetItemString(new_dict_ESpectatorClientRequestType, "NonePending", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESpectatorClientRequestType, "ExistingSessionReservation", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESpectatorClientRequestType, "ReservationUpdate", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESpectatorClientRequestType, "EmptyServerReservation", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESpectatorClientRequestType, "Reconnect", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESpectatorClientRequestType, "Abandon", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ESpectatorClientRequestType, "ESpectatorClientRequestType_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ESpectatorReservationResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESpectatorReservationResult = PyImport_AddModule("ESpectatorReservationResult");
#else                                                                                     
	PyObject* new__module_ESpectatorReservationResult = Py_InitModule3("ESpectatorReservationResult", NULL, NULL);
#endif

	PyObject* new_dict_ESpectatorReservationResult = PyModule_GetDict(new_module_ESpectatorReservationResult);
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "NoResult", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "RequestPending", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "GeneralError", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "SpectatorLimitReached", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "IncorrectPlayerCount", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "RequestTimedOut", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "ReservationDuplicate", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "ReservationNotFound", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "ReservationAccepted", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "ReservationDenied", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "ReservationDenied_CrossPlayRestriction", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "ReservationDenied_Banned", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "ReservationRequestCanceled", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "ReservationInvalid", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "BadSessionId", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "ReservationDenied_ContainsExistingPlayers", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_ESpectatorReservationResult, "ESpectatorReservationResult_MAX", Py_BuildValue("i", 16));

}
void unreal_export_uenum_EBoundaryType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBoundaryType = PyImport_AddModule("EBoundaryType");
#else                                                                                     
	PyObject* new__module_EBoundaryType = Py_InitModule3("EBoundaryType", NULL, NULL);
#endif

	PyObject* new_dict_EBoundaryType = PyModule_GetDict(new_module_EBoundaryType);
	PyDict_SetItemString(new_dict_EBoundaryType, "Boundary_Outer", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBoundaryType, "Boundary_PlayArea", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBoundaryType, "Boundary_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETiledMultiResLevel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETiledMultiResLevel = PyImport_AddModule("ETiledMultiResLevel");
#else                                                                                     
	PyObject* new__module_ETiledMultiResLevel = Py_InitModule3("ETiledMultiResLevel", NULL, NULL);
#endif

	PyObject* new_dict_ETiledMultiResLevel = PyModule_GetDict(new_module_ETiledMultiResLevel);
	PyDict_SetItemString(new_dict_ETiledMultiResLevel, "ETiledMultiResLevel_Off", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETiledMultiResLevel, "ETiledMultiResLevel_LMSLow", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETiledMultiResLevel, "ETiledMultiResLevel_LMSMedium", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETiledMultiResLevel, "ETiledMultiResLevel_LMSHigh", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETiledMultiResLevel, "ETiledMultiResLevel_LMSHighTop", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETiledMultiResLevel, "ETiledMultiResLevel_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ETrackedDeviceType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETrackedDeviceType = PyImport_AddModule("ETrackedDeviceType");
#else                                                                                     
	PyObject* new__module_ETrackedDeviceType = Py_InitModule3("ETrackedDeviceType", NULL, NULL);
#endif

	PyObject* new_dict_ETrackedDeviceType = PyModule_GetDict(new_module_ETrackedDeviceType);
	PyDict_SetItemString(new_dict_ETrackedDeviceType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETrackedDeviceType, "HMD", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETrackedDeviceType, "LTouch", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETrackedDeviceType, "RTouch", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETrackedDeviceType, "Touch", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETrackedDeviceType, "DeviceObjectZero", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETrackedDeviceType, "All", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ETrackedDeviceType, "ETrackedDeviceType_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EProcMeshSliceCapOption()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EProcMeshSliceCapOption = PyImport_AddModule("EProcMeshSliceCapOption");
#else                                                                                     
	PyObject* new__module_EProcMeshSliceCapOption = Py_InitModule3("EProcMeshSliceCapOption", NULL, NULL);
#endif

	PyObject* new_dict_EProcMeshSliceCapOption = PyModule_GetDict(new_module_EProcMeshSliceCapOption);
	PyDict_SetItemString(new_dict_EProcMeshSliceCapOption, "NoCap", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EProcMeshSliceCapOption, "CreateNewSectionForCap", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EProcMeshSliceCapOption, "UseLastSectionForCap", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EProcMeshSliceCapOption, "EProcMeshSliceCapOption_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESteamVRTrackedDeviceType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESteamVRTrackedDeviceType = PyImport_AddModule("ESteamVRTrackedDeviceType");
#else                                                                                     
	PyObject* new__module_ESteamVRTrackedDeviceType = Py_InitModule3("ESteamVRTrackedDeviceType", NULL, NULL);
#endif

	PyObject* new_dict_ESteamVRTrackedDeviceType = PyModule_GetDict(new_module_ESteamVRTrackedDeviceType);
	PyDict_SetItemString(new_dict_ESteamVRTrackedDeviceType, "Controller", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESteamVRTrackedDeviceType, "TrackingReference", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESteamVRTrackedDeviceType, "Other", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESteamVRTrackedDeviceType, "Invalid", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESteamVRTrackedDeviceType, "ESteamVRTrackedDeviceType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMacMetalShaderStandard()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMacMetalShaderStandard = PyImport_AddModule("EMacMetalShaderStandard");
#else                                                                                     
	PyObject* new__module_EMacMetalShaderStandard = Py_InitModule3("EMacMetalShaderStandard", NULL, NULL);
#endif

	PyObject* new_dict_EMacMetalShaderStandard = PyModule_GetDict(new_module_EMacMetalShaderStandard);
	PyDict_SetItemString(new_dict_EMacMetalShaderStandard, "MacMetalSLStandard_2_0", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMacMetalShaderStandard, "MacMetalSLStandard_2_1", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMacMetalShaderStandard, "MacMetalSLStandard_2_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EDefaultGraphicsRHI()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDefaultGraphicsRHI = PyImport_AddModule("EDefaultGraphicsRHI");
#else                                                                                     
	PyObject* new__module_EDefaultGraphicsRHI = Py_InitModule3("EDefaultGraphicsRHI", NULL, NULL);
#endif

	PyObject* new_dict_EDefaultGraphicsRHI = PyModule_GetDict(new_module_EDefaultGraphicsRHI);
	PyDict_SetItemString(new_dict_EDefaultGraphicsRHI, "DefaultGraphicsRHI_Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDefaultGraphicsRHI, "DefaultGraphicsRHI_DX11", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDefaultGraphicsRHI, "DefaultGraphicsRHI_DX12", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDefaultGraphicsRHI, "DefaultGraphicsRHI_Vulkan", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDefaultGraphicsRHI, "DefaultGraphicsRHI_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ECompilerVersion()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECompilerVersion = PyImport_AddModule("ECompilerVersion");
#else                                                                                     
	PyObject* new__module_ECompilerVersion = Py_InitModule3("ECompilerVersion", NULL, NULL);
#endif

	PyObject* new_dict_ECompilerVersion = PyModule_GetDict(new_module_ECompilerVersion);
	PyDict_SetItemString(new_dict_ECompilerVersion, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECompilerVersion, "VisualStudio2015", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECompilerVersion, "VisualStudio2017", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECompilerVersion, "VisualStudio2019", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECompilerVersion, "ECompilerVersion_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMinimumSupportedOS()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMinimumSupportedOS = PyImport_AddModule("EMinimumSupportedOS");
#else                                                                                     
	PyObject* new__module_EMinimumSupportedOS = Py_InitModule3("EMinimumSupportedOS", NULL, NULL);
#endif

	PyObject* new_dict_EMinimumSupportedOS = PyModule_GetDict(new_module_EMinimumSupportedOS);
	PyDict_SetItemString(new_dict_EMinimumSupportedOS, "MSOS_Vista", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMinimumSupportedOS, "MSOS_MAX", Py_BuildValue("i", 1));

}
void unreal_export_uenum_EBitmapCSType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBitmapCSType = PyImport_AddModule("EBitmapCSType");
#else                                                                                     
	PyObject* new__module_EBitmapCSType = Py_InitModule3("EBitmapCSType", NULL, NULL);
#endif

	PyObject* new_dict_EBitmapCSType = PyModule_GetDict(new_module_EBitmapCSType);
	PyDict_SetItemString(new_dict_EBitmapCSType, "BCST_BLCS_CALIBRATED_RGB", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBitmapCSType, "BCST_LCS_sRGB", Py_BuildValue("i", 1934772034));
	PyDict_SetItemString(new_dict_EBitmapCSType, "BCST_LCS_WINDOWS_COLOR_SPACE", Py_BuildValue("i", 1466527264));
	PyDict_SetItemString(new_dict_EBitmapCSType, "BCST_PROFILE_LINKED", Py_BuildValue("i", 1279872587));
	PyDict_SetItemString(new_dict_EBitmapCSType, "BCST_PROFILE_EMBEDDED", Py_BuildValue("i", 1296188740));
	PyDict_SetItemString(new_dict_EBitmapCSType, "BCST_MAX", Py_BuildValue("i", 1934772035));

}
void unreal_export_uenum_EBitmapHeaderVersion()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBitmapHeaderVersion = PyImport_AddModule("EBitmapHeaderVersion");
#else                                                                                     
	PyObject* new__module_EBitmapHeaderVersion = Py_InitModule3("EBitmapHeaderVersion", NULL, NULL);
#endif

	PyObject* new_dict_EBitmapHeaderVersion = PyModule_GetDict(new_module_EBitmapHeaderVersion);
	PyDict_SetItemString(new_dict_EBitmapHeaderVersion, "BHV_BITMAPINFOHEADER", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EBitmapHeaderVersion, "BHV_BITMAPV2INFOHEADER", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBitmapHeaderVersion, "BHV_BITMAPV3INFOHEADER", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBitmapHeaderVersion, "BHV_BITMAPV4HEADER", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EBitmapHeaderVersion, "BHV_BITMAPV5HEADER", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EBitmapHeaderVersion, "BHV_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EVectorVMOp()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVectorVMOp = PyImport_AddModule("EVectorVMOp");
#else                                                                                     
	PyObject* new__module_EVectorVMOp = Py_InitModule3("EVectorVMOp", NULL, NULL);
#endif

	PyObject* new_dict_EVectorVMOp = PyModule_GetDict(new_module_EVectorVMOp);
	PyDict_SetItemString(new_dict_EVectorVMOp, "done", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVectorVMOp, "add", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVectorVMOp, "sub", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVectorVMOp, "mul", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EVectorVMOp, "div", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EVectorVMOp, "mad", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EVectorVMOp, "lerp", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EVectorVMOp, "rcp", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EVectorVMOp, "rsq", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EVectorVMOp, "sqrt", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EVectorVMOp, "neg", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EVectorVMOp, "abs", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EVectorVMOp, "exp", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EVectorVMOp, "exp2", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EVectorVMOp, "log", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EVectorVMOp, "log2", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EVectorVMOp, "sin", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EVectorVMOp, "cos", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EVectorVMOp, "tan", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_EVectorVMOp, "asin", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_EVectorVMOp, "acos", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_EVectorVMOp, "atan", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_EVectorVMOp, "atan2", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_EVectorVMOp, "ceil", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_EVectorVMOp, "floor", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_EVectorVMOp, "fmod", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_EVectorVMOp, "frac", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_EVectorVMOp, "trunc", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_EVectorVMOp, "clamp", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_EVectorVMOp, "min", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_EVectorVMOp, "max", Py_BuildValue("i", 30));
	PyDict_SetItemString(new_dict_EVectorVMOp, "pow", Py_BuildValue("i", 31));
	PyDict_SetItemString(new_dict_EVectorVMOp, "round", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_EVectorVMOp, "sign", Py_BuildValue("i", 33));
	PyDict_SetItemString(new_dict_EVectorVMOp, "step", Py_BuildValue("i", 34));
	PyDict_SetItemString(new_dict_EVectorVMOp, "random", Py_BuildValue("i", 35));
	PyDict_SetItemString(new_dict_EVectorVMOp, "noise", Py_BuildValue("i", 36));
	PyDict_SetItemString(new_dict_EVectorVMOp, "cmplt", Py_BuildValue("i", 37));
	PyDict_SetItemString(new_dict_EVectorVMOp, "cmple", Py_BuildValue("i", 38));
	PyDict_SetItemString(new_dict_EVectorVMOp, "cmpgt", Py_BuildValue("i", 39));
	PyDict_SetItemString(new_dict_EVectorVMOp, "cmpge", Py_BuildValue("i", 40));
	PyDict_SetItemString(new_dict_EVectorVMOp, "cmpeq", Py_BuildValue("i", 41));
	PyDict_SetItemString(new_dict_EVectorVMOp, "cmpneq", Py_BuildValue("i", 42));
	PyDict_SetItemString(new_dict_EVectorVMOp, "select", Py_BuildValue("i", 43));
	PyDict_SetItemString(new_dict_EVectorVMOp, "addi", Py_BuildValue("i", 44));
	PyDict_SetItemString(new_dict_EVectorVMOp, "subi", Py_BuildValue("i", 45));
	PyDict_SetItemString(new_dict_EVectorVMOp, "muli", Py_BuildValue("i", 46));
	PyDict_SetItemString(new_dict_EVectorVMOp, "divi", Py_BuildValue("i", 47));
	PyDict_SetItemString(new_dict_EVectorVMOp, "clampi", Py_BuildValue("i", 48));
	PyDict_SetItemString(new_dict_EVectorVMOp, "mini", Py_BuildValue("i", 49));
	PyDict_SetItemString(new_dict_EVectorVMOp, "maxi", Py_BuildValue("i", 50));
	PyDict_SetItemString(new_dict_EVectorVMOp, "absi", Py_BuildValue("i", 51));
	PyDict_SetItemString(new_dict_EVectorVMOp, "negi", Py_BuildValue("i", 52));
	PyDict_SetItemString(new_dict_EVectorVMOp, "signi", Py_BuildValue("i", 53));
	PyDict_SetItemString(new_dict_EVectorVMOp, "randomi", Py_BuildValue("i", 54));
	PyDict_SetItemString(new_dict_EVectorVMOp, "cmplti", Py_BuildValue("i", 55));
	PyDict_SetItemString(new_dict_EVectorVMOp, "cmplei", Py_BuildValue("i", 56));
	PyDict_SetItemString(new_dict_EVectorVMOp, "cmpgti", Py_BuildValue("i", 57));
	PyDict_SetItemString(new_dict_EVectorVMOp, "cmpgei", Py_BuildValue("i", 58));
	PyDict_SetItemString(new_dict_EVectorVMOp, "cmpeqi", Py_BuildValue("i", 59));
	PyDict_SetItemString(new_dict_EVectorVMOp, "cmpneqi", Py_BuildValue("i", 60));
	PyDict_SetItemString(new_dict_EVectorVMOp, "bit_and", Py_BuildValue("i", 61));
	PyDict_SetItemString(new_dict_EVectorVMOp, "bit_or", Py_BuildValue("i", 62));
	PyDict_SetItemString(new_dict_EVectorVMOp, "bit_xor", Py_BuildValue("i", 63));
	PyDict_SetItemString(new_dict_EVectorVMOp, "bit_not", Py_BuildValue("i", 64));
	PyDict_SetItemString(new_dict_EVectorVMOp, "bit_lshift", Py_BuildValue("i", 65));
	PyDict_SetItemString(new_dict_EVectorVMOp, "bit_rshift", Py_BuildValue("i", 66));
	PyDict_SetItemString(new_dict_EVectorVMOp, "logic_and", Py_BuildValue("i", 67));
	PyDict_SetItemString(new_dict_EVectorVMOp, "logic_or", Py_BuildValue("i", 68));
	PyDict_SetItemString(new_dict_EVectorVMOp, "logic_xor", Py_BuildValue("i", 69));
	PyDict_SetItemString(new_dict_EVectorVMOp, "logic_not", Py_BuildValue("i", 70));
	PyDict_SetItemString(new_dict_EVectorVMOp, "f2i", Py_BuildValue("i", 71));
	PyDict_SetItemString(new_dict_EVectorVMOp, "i2f", Py_BuildValue("i", 72));
	PyDict_SetItemString(new_dict_EVectorVMOp, "f2b", Py_BuildValue("i", 73));
	PyDict_SetItemString(new_dict_EVectorVMOp, "b2f", Py_BuildValue("i", 74));
	PyDict_SetItemString(new_dict_EVectorVMOp, "i2b", Py_BuildValue("i", 75));
	PyDict_SetItemString(new_dict_EVectorVMOp, "b2i", Py_BuildValue("i", 76));
	PyDict_SetItemString(new_dict_EVectorVMOp, "inputdata_32bit", Py_BuildValue("i", 77));
	PyDict_SetItemString(new_dict_EVectorVMOp, "inputdata_noadvance_32bit", Py_BuildValue("i", 78));
	PyDict_SetItemString(new_dict_EVectorVMOp, "outputdata_32bit", Py_BuildValue("i", 79));
	PyDict_SetItemString(new_dict_EVectorVMOp, "acquireindex", Py_BuildValue("i", 80));
	PyDict_SetItemString(new_dict_EVectorVMOp, "external_func_call", Py_BuildValue("i", 81));
	PyDict_SetItemString(new_dict_EVectorVMOp, "exec_index", Py_BuildValue("i", 82));
	PyDict_SetItemString(new_dict_EVectorVMOp, "noise2D", Py_BuildValue("i", 83));
	PyDict_SetItemString(new_dict_EVectorVMOp, "noise3D", Py_BuildValue("i", 84));
	PyDict_SetItemString(new_dict_EVectorVMOp, "enter_stat_scope", Py_BuildValue("i", 85));
	PyDict_SetItemString(new_dict_EVectorVMOp, "exit_stat_scope", Py_BuildValue("i", 86));
	PyDict_SetItemString(new_dict_EVectorVMOp, "update_id", Py_BuildValue("i", 87));
	PyDict_SetItemString(new_dict_EVectorVMOp, "acquire_id", Py_BuildValue("i", 88));
	PyDict_SetItemString(new_dict_EVectorVMOp, "NumOpcodes", Py_BuildValue("i", 89));
	PyDict_SetItemString(new_dict_EVectorVMOp, "EVectorVMOp_MAX", Py_BuildValue("i", 90));

}
void unreal_export_uenum_EVectorVMOperandLocation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVectorVMOperandLocation = PyImport_AddModule("EVectorVMOperandLocation");
#else                                                                                     
	PyObject* new__module_EVectorVMOperandLocation = Py_InitModule3("EVectorVMOperandLocation", NULL, NULL);
#endif

	PyObject* new_dict_EVectorVMOperandLocation = PyModule_GetDict(new_module_EVectorVMOperandLocation);
	PyDict_SetItemString(new_dict_EVectorVMOperandLocation, "Register", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVectorVMOperandLocation, "Constant", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVectorVMOperandLocation, "Num", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVectorVMOperandLocation, "EVectorVMOperandLocation_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EVectorVMBaseTypes()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVectorVMBaseTypes = PyImport_AddModule("EVectorVMBaseTypes");
#else                                                                                     
	PyObject* new__module_EVectorVMBaseTypes = Py_InitModule3("EVectorVMBaseTypes", NULL, NULL);
#endif

	PyObject* new_dict_EVectorVMBaseTypes = PyModule_GetDict(new_module_EVectorVMBaseTypes);
	PyDict_SetItemString(new_dict_EVectorVMBaseTypes, "Float", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVectorVMBaseTypes, "Int", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVectorVMBaseTypes, "Bool", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVectorVMBaseTypes, "Num", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EVectorVMBaseTypes, "EVectorVMBaseTypes_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ETimezoneSetting()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETimezoneSetting = PyImport_AddModule("ETimezoneSetting");
#else                                                                                     
	PyObject* new__module_ETimezoneSetting = Py_InitModule3("ETimezoneSetting", NULL, NULL);
#endif

	PyObject* new_dict_ETimezoneSetting = PyModule_GetDict(new_module_ETimezoneSetting);
	PyDict_SetItemString(new_dict_ETimezoneSetting, "InternationalDateLineWest", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "CoordinatedUniversalTimeNeg11", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Samoa", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Hawaii", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Alaska", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "PacificTime_USCAN", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "BajaCalifornia", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "MountainTime_USCAN", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Chihuahua_LaPaz_Mazatlan", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Arizona", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Saskatchewan", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "CentralAmerica", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "CentralTime_USCAN", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Guadalajara_MexicoCity_Monterrey", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "EasternTime_USCAN", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Bogota_Lima_Quito", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Indiana_US", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Caracas", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "AtlanticTime_Canada", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Cuiaba", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Santiago", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Georgetown_LaPaz_Manaus_SanJuan", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Asuncion", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Newfoundland", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Brasilia", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Greenland", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Montevideo", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Cayenne_Fortaleza", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "BuenosAires", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "MidAtlantic", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "CoordinatedUniversalTimeNeg02", Py_BuildValue("i", 30));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Azores", Py_BuildValue("i", 31));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "CaboVerdeIs", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Dublin_Edinburgh_Lisbon_London", Py_BuildValue("i", 33));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Monrovia_Reykjavik", Py_BuildValue("i", 34));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Casablanca", Py_BuildValue("i", 35));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "UTC", Py_BuildValue("i", 36));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Belgrade_Bratislava_Budapest_Ljubljana_Prague", Py_BuildValue("i", 37));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Sarajevo_Skopje_Warsaw_Zagreb", Py_BuildValue("i", 38));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Brussels_Copenhagen_Madrid_Paris", Py_BuildValue("i", 39));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "WestCentralAfrica", Py_BuildValue("i", 40));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna", Py_BuildValue("i", 41));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Windhoek", Py_BuildValue("i", 42));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Minsk", Py_BuildValue("i", 43));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Cairo", Py_BuildValue("i", 44));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius", Py_BuildValue("i", 45));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Athens_Bucharest", Py_BuildValue("i", 46));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Jerusalem", Py_BuildValue("i", 47));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Amman", Py_BuildValue("i", 48));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Beirut", Py_BuildValue("i", 49));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Harare_Pretoria", Py_BuildValue("i", 50));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Damascus", Py_BuildValue("i", 51));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Istanbul", Py_BuildValue("i", 52));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Kuwait_Riyadh", Py_BuildValue("i", 53));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Baghdad", Py_BuildValue("i", 54));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Nairobi", Py_BuildValue("i", 55));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Kaliningrad", Py_BuildValue("i", 56));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Tehran", Py_BuildValue("i", 57));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Moscow_StPetersburg_Volgograd", Py_BuildValue("i", 58));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "AbuDhabi_Muscat", Py_BuildValue("i", 59));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Baku", Py_BuildValue("i", 60));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Yerevan", Py_BuildValue("i", 61));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Tbilisi", Py_BuildValue("i", 62));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "PortLouis", Py_BuildValue("i", 63));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Kabul", Py_BuildValue("i", 64));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Tashkent", Py_BuildValue("i", 65));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Islamabad_Karachi", Py_BuildValue("i", 66));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Chennai_Kolkata_Mumbai_NewDelhi", Py_BuildValue("i", 67));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "SriJayawardenepura", Py_BuildValue("i", 68));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Kathmandu", Py_BuildValue("i", 69));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Ekaterinburg", Py_BuildValue("i", 70));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Astana", Py_BuildValue("i", 71));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Dhaka", Py_BuildValue("i", 72));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Yangon_Rangoon", Py_BuildValue("i", 73));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Novosibirsk", Py_BuildValue("i", 74));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Bangkok_Hanoi_Jakarta", Py_BuildValue("i", 75));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Krasnoyarsk", Py_BuildValue("i", 76));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Beijing_Chongqing_HongKong_Urumqi", Py_BuildValue("i", 77));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "KualaLumpur_Singapore", Py_BuildValue("i", 78));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Taipei", Py_BuildValue("i", 79));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Perth", Py_BuildValue("i", 80));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Ulaanbaatar", Py_BuildValue("i", 81));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Irkutsk", Py_BuildValue("i", 82));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Seoul", Py_BuildValue("i", 83));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Osaka_Sapporo_Tokyo", Py_BuildValue("i", 84));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Darwin", Py_BuildValue("i", 85));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Adelaide", Py_BuildValue("i", 86));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Yakutsk", Py_BuildValue("i", 87));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Canberra_Melbourne_Sydney", Py_BuildValue("i", 88));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Brisbane", Py_BuildValue("i", 89));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Hobart", Py_BuildValue("i", 90));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Guam_PortMoresby", Py_BuildValue("i", 91));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Vladivostok", Py_BuildValue("i", 92));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "SolomonIs_NewCaledonia", Py_BuildValue("i", 93));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Magadan", Py_BuildValue("i", 94));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Fiji", Py_BuildValue("i", 95));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Auckland_Wellington", Py_BuildValue("i", 96));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "CoordinatedUniversalTime12", Py_BuildValue("i", 97));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "Nukualofa", Py_BuildValue("i", 98));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "LocalTime", Py_BuildValue("i", 99));
	PyDict_SetItemString(new_dict_ETimezoneSetting, "ETimezoneSetting_MAX", Py_BuildValue("i", 100));

}
void unreal_export_uenum_EConfigFileSourceControlStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EConfigFileSourceControlStatus = PyImport_AddModule("EConfigFileSourceControlStatus");
#else                                                                                     
	PyObject* new__module_EConfigFileSourceControlStatus = Py_InitModule3("EConfigFileSourceControlStatus", NULL, NULL);
#endif

	PyObject* new_dict_EConfigFileSourceControlStatus = PyModule_GetDict(new_module_EConfigFileSourceControlStatus);
	PyDict_SetItemString(new_dict_EConfigFileSourceControlStatus, "CFSCS_Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EConfigFileSourceControlStatus, "CFSCS_Writable", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EConfigFileSourceControlStatus, "CFSCS_Locked", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EConfigFileSourceControlStatus, "CFSCS_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPinnedCommandListType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPinnedCommandListType = PyImport_AddModule("EPinnedCommandListType");
#else                                                                                     
	PyObject* new__module_EPinnedCommandListType = Py_InitModule3("EPinnedCommandListType", NULL, NULL);
#endif

	PyObject* new_dict_EPinnedCommandListType = PyModule_GetDict(new_module_EPinnedCommandListType);
	PyDict_SetItemString(new_dict_EPinnedCommandListType, "Command", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPinnedCommandListType, "CustomWidget", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPinnedCommandListType, "EPinnedCommandListType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EPropertyBindingPermissionLevel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPropertyBindingPermissionLevel = PyImport_AddModule("EPropertyBindingPermissionLevel");
#else                                                                                     
	PyObject* new__module_EPropertyBindingPermissionLevel = Py_InitModule3("EPropertyBindingPermissionLevel", NULL, NULL);
#endif

	PyObject* new_dict_EPropertyBindingPermissionLevel = PyModule_GetDict(new_module_EPropertyBindingPermissionLevel);
	PyDict_SetItemString(new_dict_EPropertyBindingPermissionLevel, "Allow", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPropertyBindingPermissionLevel, "Prevent", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPropertyBindingPermissionLevel, "PreventAndWarn", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPropertyBindingPermissionLevel, "PreventAndError", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPropertyBindingPermissionLevel, "EPropertyBindingPermissionLevel_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EWidgetCompileTimeTickPrediction()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWidgetCompileTimeTickPrediction = PyImport_AddModule("EWidgetCompileTimeTickPrediction");
#else                                                                                     
	PyObject* new__module_EWidgetCompileTimeTickPrediction = Py_InitModule3("EWidgetCompileTimeTickPrediction", NULL, NULL);
#endif

	PyObject* new_dict_EWidgetCompileTimeTickPrediction = PyModule_GetDict(new_module_EWidgetCompileTimeTickPrediction);
	PyDict_SetItemString(new_dict_EWidgetCompileTimeTickPrediction, "WontTick", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWidgetCompileTimeTickPrediction, "OnDemand", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWidgetCompileTimeTickPrediction, "WillTick", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EWidgetCompileTimeTickPrediction, "EWidgetCompileTimeTickPrediction_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EWidgetSupportsDynamicCreation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWidgetSupportsDynamicCreation = PyImport_AddModule("EWidgetSupportsDynamicCreation");
#else                                                                                     
	PyObject* new__module_EWidgetSupportsDynamicCreation = Py_InitModule3("EWidgetSupportsDynamicCreation", NULL, NULL);
#endif

	PyObject* new_dict_EWidgetSupportsDynamicCreation = PyModule_GetDict(new_module_EWidgetSupportsDynamicCreation);
	PyDict_SetItemString(new_dict_EWidgetSupportsDynamicCreation, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWidgetSupportsDynamicCreation, "Yes", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWidgetSupportsDynamicCreation, "No", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EWidgetSupportsDynamicCreation, "EWidgetSupportsDynamicCreation_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAutomationArtifactType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAutomationArtifactType = PyImport_AddModule("EAutomationArtifactType");
#else                                                                                     
	PyObject* new__module_EAutomationArtifactType = Py_InitModule3("EAutomationArtifactType", NULL, NULL);
#endif

	PyObject* new_dict_EAutomationArtifactType = PyModule_GetDict(new_module_EAutomationArtifactType);
	PyDict_SetItemString(new_dict_EAutomationArtifactType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAutomationArtifactType, "Image", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAutomationArtifactType, "Comparison", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAutomationArtifactType, "EAutomationArtifactType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAutomationState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAutomationState = PyImport_AddModule("EAutomationState");
#else                                                                                     
	PyObject* new__module_EAutomationState = Py_InitModule3("EAutomationState", NULL, NULL);
#endif

	PyObject* new_dict_EAutomationState = PyModule_GetDict(new_module_EAutomationState);
	PyDict_SetItemString(new_dict_EAutomationState, "NotRun", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAutomationState, "InProcess", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAutomationState, "Fail", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAutomationState, "Success", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAutomationState, "NotEnoughParticipants", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EAutomationState, "EAutomationState_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EComparisonTolerance()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EComparisonTolerance = PyImport_AddModule("EComparisonTolerance");
#else                                                                                     
	PyObject* new__module_EComparisonTolerance = Py_InitModule3("EComparisonTolerance", NULL, NULL);
#endif

	PyObject* new_dict_EComparisonTolerance = PyModule_GetDict(new_module_EComparisonTolerance);
	PyDict_SetItemString(new_dict_EComparisonTolerance, "Zero", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EComparisonTolerance, "Low", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EComparisonTolerance, "Medium", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EComparisonTolerance, "High", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EComparisonTolerance, "Custom", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EComparisonTolerance, "EComparisonTolerance_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EFunctionalTestLogHandling()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFunctionalTestLogHandling = PyImport_AddModule("EFunctionalTestLogHandling");
#else                                                                                     
	PyObject* new__module_EFunctionalTestLogHandling = Py_InitModule3("EFunctionalTestLogHandling", NULL, NULL);
#endif

	PyObject* new_dict_EFunctionalTestLogHandling = PyModule_GetDict(new_module_EFunctionalTestLogHandling);
	PyDict_SetItemString(new_dict_EFunctionalTestLogHandling, "ProjectDefault", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFunctionalTestLogHandling, "OutputIsError", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFunctionalTestLogHandling, "OutputIgnored", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFunctionalTestLogHandling, "EFunctionalTestLogHandling_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFunctionalTestResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFunctionalTestResult = PyImport_AddModule("EFunctionalTestResult");
#else                                                                                     
	PyObject* new__module_EFunctionalTestResult = Py_InitModule3("EFunctionalTestResult", NULL, NULL);
#endif

	PyObject* new_dict_EFunctionalTestResult = PyModule_GetDict(new_module_EFunctionalTestResult);
	PyDict_SetItemString(new_dict_EFunctionalTestResult, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFunctionalTestResult, "Invalid", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFunctionalTestResult, "Error", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFunctionalTestResult, "Running", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFunctionalTestResult, "Failed", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFunctionalTestResult, "Succeeded", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EFunctionalTestResult, "EFunctionalTestResult_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EComparisonMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EComparisonMethod = PyImport_AddModule("EComparisonMethod");
#else                                                                                     
	PyObject* new__module_EComparisonMethod = Py_InitModule3("EComparisonMethod", NULL, NULL);
#endif

	PyObject* new_dict_EComparisonMethod = PyModule_GetDict(new_module_EComparisonMethod);
	PyDict_SetItemString(new_dict_EComparisonMethod, "Equal_To", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EComparisonMethod, "Not_Equal_To", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EComparisonMethod, "Greater_Than_Or_Equal_To", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EComparisonMethod, "Less_Than_Or_Equal_To", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EComparisonMethod, "Greater_Than", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EComparisonMethod, "Less_Than", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EComparisonMethod, "EComparisonMethod_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EWidgetTestAppearLocation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWidgetTestAppearLocation = PyImport_AddModule("EWidgetTestAppearLocation");
#else                                                                                     
	PyObject* new__module_EWidgetTestAppearLocation = Py_InitModule3("EWidgetTestAppearLocation", NULL, NULL);
#endif

	PyObject* new_dict_EWidgetTestAppearLocation = PyModule_GetDict(new_module_EWidgetTestAppearLocation);
	PyDict_SetItemString(new_dict_EWidgetTestAppearLocation, "Viewport", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWidgetTestAppearLocation, "PlayerScreen", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWidgetTestAppearLocation, "EWidgetTestAppearLocation_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EDecoratorLogicMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EDecoratorLogicMode = PyImport_AddModule("EDecoratorLogicMode");
#else                                                                                     
	PyObject* new__module_EDecoratorLogicMode = Py_InitModule3("EDecoratorLogicMode", NULL, NULL);
#endif

	PyObject* new_dict_EDecoratorLogicMode = PyModule_GetDict(new_module_EDecoratorLogicMode);
	PyDict_SetItemString(new_dict_EDecoratorLogicMode, "Sink", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EDecoratorLogicMode, "And", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EDecoratorLogicMode, "Or", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EDecoratorLogicMode, "Not", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EDecoratorLogicMode, "EDecoratorLogicMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMediaWebcamCaptureDeviceFilter()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMediaWebcamCaptureDeviceFilter = PyImport_AddModule("EMediaWebcamCaptureDeviceFilter");
#else                                                                                     
	PyObject* new__module_EMediaWebcamCaptureDeviceFilter = Py_InitModule3("EMediaWebcamCaptureDeviceFilter", NULL, NULL);
#endif

	PyObject* new_dict_EMediaWebcamCaptureDeviceFilter = PyModule_GetDict(new_module_EMediaWebcamCaptureDeviceFilter);
	PyDict_SetItemString(new_dict_EMediaWebcamCaptureDeviceFilter, "DepthSensor", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMediaWebcamCaptureDeviceFilter, "Front", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMediaWebcamCaptureDeviceFilter, "Rear", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMediaWebcamCaptureDeviceFilter, "Unknown", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMediaWebcamCaptureDeviceFilter, "EMediaWebcamCaptureDeviceFilter_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_EMediaVideoCaptureDeviceFilter()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMediaVideoCaptureDeviceFilter = PyImport_AddModule("EMediaVideoCaptureDeviceFilter");
#else                                                                                     
	PyObject* new__module_EMediaVideoCaptureDeviceFilter = Py_InitModule3("EMediaVideoCaptureDeviceFilter", NULL, NULL);
#endif

	PyObject* new_dict_EMediaVideoCaptureDeviceFilter = PyModule_GetDict(new_module_EMediaVideoCaptureDeviceFilter);
	PyDict_SetItemString(new_dict_EMediaVideoCaptureDeviceFilter, "Card", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMediaVideoCaptureDeviceFilter, "Software", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMediaVideoCaptureDeviceFilter, "Unknown", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMediaVideoCaptureDeviceFilter, "Webcam", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMediaVideoCaptureDeviceFilter, "EMediaVideoCaptureDeviceFilter_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_EMediaAudioCaptureDeviceFilter()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMediaAudioCaptureDeviceFilter = PyImport_AddModule("EMediaAudioCaptureDeviceFilter");
#else                                                                                     
	PyObject* new__module_EMediaAudioCaptureDeviceFilter = Py_InitModule3("EMediaAudioCaptureDeviceFilter", NULL, NULL);
#endif

	PyObject* new_dict_EMediaAudioCaptureDeviceFilter = PyModule_GetDict(new_module_EMediaAudioCaptureDeviceFilter);
	PyDict_SetItemString(new_dict_EMediaAudioCaptureDeviceFilter, "Card", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMediaAudioCaptureDeviceFilter, "Microphone", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMediaAudioCaptureDeviceFilter, "Software", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMediaAudioCaptureDeviceFilter, "Unknown", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMediaAudioCaptureDeviceFilter, "EMediaAudioCaptureDeviceFilter_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_EMediaPlayerTrack()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMediaPlayerTrack = PyImport_AddModule("EMediaPlayerTrack");
#else                                                                                     
	PyObject* new__module_EMediaPlayerTrack = Py_InitModule3("EMediaPlayerTrack", NULL, NULL);
#endif

	PyObject* new_dict_EMediaPlayerTrack = PyModule_GetDict(new_module_EMediaPlayerTrack);
	PyDict_SetItemString(new_dict_EMediaPlayerTrack, "Audio", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMediaPlayerTrack, "Caption", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMediaPlayerTrack, "Metadata", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMediaPlayerTrack, "Script", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMediaPlayerTrack, "Subtitle", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMediaPlayerTrack, "Text", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMediaPlayerTrack, "Video", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMediaPlayerTrack, "EMediaPlayerTrack_MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum_EMediaSoundComponentFFTSize()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMediaSoundComponentFFTSize = PyImport_AddModule("EMediaSoundComponentFFTSize");
#else                                                                                     
	PyObject* new__module_EMediaSoundComponentFFTSize = Py_InitModule3("EMediaSoundComponentFFTSize", NULL, NULL);
#endif

	PyObject* new_dict_EMediaSoundComponentFFTSize = PyModule_GetDict(new_module_EMediaSoundComponentFFTSize);
	PyDict_SetItemString(new_dict_EMediaSoundComponentFFTSize, "Min_64", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMediaSoundComponentFFTSize, "Small_256", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMediaSoundComponentFFTSize, "Medium_512", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMediaSoundComponentFFTSize, "Large_1024", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMediaSoundComponentFFTSize, "EMediaSoundComponentFFTSize_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMediaSoundChannels()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMediaSoundChannels = PyImport_AddModule("EMediaSoundChannels");
#else                                                                                     
	PyObject* new__module_EMediaSoundChannels = Py_InitModule3("EMediaSoundChannels", NULL, NULL);
#endif

	PyObject* new_dict_EMediaSoundChannels = PyModule_GetDict(new_module_EMediaSoundChannels);
	PyDict_SetItemString(new_dict_EMediaSoundChannels, "Mono", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMediaSoundChannels, "Stereo", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMediaSoundChannels, "Surround", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMediaSoundChannels, "EMediaSoundChannels_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFlipbookCollisionMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFlipbookCollisionMode = PyImport_AddModule("EFlipbookCollisionMode");
#else                                                                                     
	PyObject* new__module_EFlipbookCollisionMode = Py_InitModule3("EFlipbookCollisionMode", NULL, NULL);
#endif

	PyObject* new_dict_EFlipbookCollisionMode = PyModule_GetDict(new_module_EFlipbookCollisionMode);
	PyDict_SetItemString(new_dict_EFlipbookCollisionMode, "NoCollision", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFlipbookCollisionMode, "FirstFrameCollision", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFlipbookCollisionMode, "EachFrameCollision", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFlipbookCollisionMode, "EFlipbookCollisionMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPaperSpriteAtlasPadding()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPaperSpriteAtlasPadding = PyImport_AddModule("EPaperSpriteAtlasPadding");
#else                                                                                     
	PyObject* new__module_EPaperSpriteAtlasPadding = Py_InitModule3("EPaperSpriteAtlasPadding", NULL, NULL);
#endif

	PyObject* new_dict_EPaperSpriteAtlasPadding = PyModule_GetDict(new_module_EPaperSpriteAtlasPadding);
	PyDict_SetItemString(new_dict_EPaperSpriteAtlasPadding, "DilateBorder", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPaperSpriteAtlasPadding, "PadWithZero", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPaperSpriteAtlasPadding, "EPaperSpriteAtlasPadding_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETileMapProjectionMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETileMapProjectionMode = PyImport_AddModule("ETileMapProjectionMode");
#else                                                                                     
	PyObject* new__module_ETileMapProjectionMode = Py_InitModule3("ETileMapProjectionMode", NULL, NULL);
#endif

	PyObject* new_dict_ETileMapProjectionMode = PyModule_GetDict(new_module_ETileMapProjectionMode);
	PyDict_SetItemString(new_dict_ETileMapProjectionMode, "Orthogonal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETileMapProjectionMode, "IsometricDiamond", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETileMapProjectionMode, "IsometricStaggered", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETileMapProjectionMode, "HexagonalStaggered", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETileMapProjectionMode, "ETileMapProjectionMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESpritePivotMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESpritePivotMode = PyImport_AddModule("ESpritePivotMode");
#else                                                                                     
	PyObject* new__module_ESpritePivotMode = Py_InitModule3("ESpritePivotMode", NULL, NULL);
#endif

	PyObject* new_dict_ESpritePivotMode = PyModule_GetDict(new_module_ESpritePivotMode);
	PyDict_SetItemString(new_dict_ESpritePivotMode, "Top_Left", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESpritePivotMode, "Top_Center", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESpritePivotMode, "Top_Right", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESpritePivotMode, "Center_Left", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESpritePivotMode, "Center_Center", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESpritePivotMode, "Center_Right", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ESpritePivotMode, "Bottom_Left", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ESpritePivotMode, "Bottom_Center", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ESpritePivotMode, "Bottom_Right", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ESpritePivotMode, "Custom", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ESpritePivotMode, "ESpritePivotMode_MAX", Py_BuildValue("i", 10));

}
void unreal_export_uenum_ESpritePolygonMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESpritePolygonMode = PyImport_AddModule("ESpritePolygonMode");
#else                                                                                     
	PyObject* new__module_ESpritePolygonMode = Py_InitModule3("ESpritePolygonMode", NULL, NULL);
#endif

	PyObject* new_dict_ESpritePolygonMode = PyModule_GetDict(new_module_ESpritePolygonMode);
	PyDict_SetItemString(new_dict_ESpritePolygonMode, "SourceBoundingBox", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESpritePolygonMode, "TightBoundingBox", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESpritePolygonMode, "ShrinkWrapped", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESpritePolygonMode, "FullyCustom", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESpritePolygonMode, "Diced", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ESpritePolygonMode, "ESpritePolygonMode_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ESpriteShapeType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESpriteShapeType = PyImport_AddModule("ESpriteShapeType");
#else                                                                                     
	PyObject* new__module_ESpriteShapeType = Py_InitModule3("ESpriteShapeType", NULL, NULL);
#endif

	PyObject* new_dict_ESpriteShapeType = PyModule_GetDict(new_module_ESpriteShapeType);
	PyDict_SetItemString(new_dict_ESpriteShapeType, "Box", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESpriteShapeType, "Circle", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESpriteShapeType, "Polygon", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESpriteShapeType, "ESpriteShapeType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESpriteCollisionMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESpriteCollisionMode = PyImport_AddModule("ESpriteCollisionMode");
#else                                                                                     
	PyObject* new__module_ESpriteCollisionMode = Py_InitModule3("ESpriteCollisionMode", NULL, NULL);
#endif

	PyObject* new_dict_ESpriteCollisionMode = PyModule_GetDict(new_module_ESpriteCollisionMode);
	PyDict_SetItemString(new_dict_ESpriteCollisionMode, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESpriteCollisionMode, "Use2DPhysics", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESpriteCollisionMode, "Use3DPhysics", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESpriteCollisionMode, "ESpriteCollisionMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELuminARLineTraceChannel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELuminARLineTraceChannel = PyImport_AddModule("ELuminARLineTraceChannel");
#else                                                                                     
	PyObject* new__module_ELuminARLineTraceChannel = Py_InitModule3("ELuminARLineTraceChannel", NULL, NULL);
#endif

	PyObject* new_dict_ELuminARLineTraceChannel = PyModule_GetDict(new_module_ELuminARLineTraceChannel);
	PyDict_SetItemString(new_dict_ELuminARLineTraceChannel, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELuminARLineTraceChannel, "FeaturePoint", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELuminARLineTraceChannel, "InfinitePlane", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELuminARLineTraceChannel, "PlaneUsingExtent", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELuminARLineTraceChannel, "PlaneUsingBoundaryPolygon", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ELuminARLineTraceChannel, "FeaturePointWithSurfaceNormal", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_ELuminARLineTraceChannel, "ELuminARLineTraceChannel_MAX", Py_BuildValue("i", 17));

}
void unreal_export_uenum_ELuminARTrackingState()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELuminARTrackingState = PyImport_AddModule("ELuminARTrackingState");
#else                                                                                     
	PyObject* new__module_ELuminARTrackingState = Py_InitModule3("ELuminARTrackingState", NULL, NULL);
#endif

	PyObject* new_dict_ELuminARTrackingState = PyModule_GetDict(new_module_ELuminARTrackingState);
	PyDict_SetItemString(new_dict_ELuminARTrackingState, "Tracking", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELuminARTrackingState, "NotTracking", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELuminARTrackingState, "StoppedTracking", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELuminARTrackingState, "ELuminARTrackingState_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELuminARFunctionStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELuminARFunctionStatus = PyImport_AddModule("ELuminARFunctionStatus");
#else                                                                                     
	PyObject* new__module_ELuminARFunctionStatus = Py_InitModule3("ELuminARFunctionStatus", NULL, NULL);
#endif

	PyObject* new_dict_ELuminARFunctionStatus = PyModule_GetDict(new_module_ELuminARFunctionStatus);
	PyDict_SetItemString(new_dict_ELuminARFunctionStatus, "Success", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELuminARFunctionStatus, "Fatal", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELuminARFunctionStatus, "SessionPaused", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELuminARFunctionStatus, "NotTracking", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELuminARFunctionStatus, "ResourceExhausted", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELuminARFunctionStatus, "NotAvailable", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ELuminARFunctionStatus, "InvalidType", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ELuminARFunctionStatus, "Unknown", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ELuminARFunctionStatus, "ELuminARFunctionStatus_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_ELuminARAvailability()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELuminARAvailability = PyImport_AddModule("ELuminARAvailability");
#else                                                                                     
	PyObject* new__module_ELuminARAvailability = Py_InitModule3("ELuminARAvailability", NULL, NULL);
#endif

	PyObject* new_dict_ELuminARAvailability = PyModule_GetDict(new_module_ELuminARAvailability);
	PyDict_SetItemString(new_dict_ELuminARAvailability, "UnknownError", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELuminARAvailability, "SupportedInstalled", Py_BuildValue("i", 200));
	PyDict_SetItemString(new_dict_ELuminARAvailability, "ELuminARAvailability_MAX", Py_BuildValue("i", 201));

}
void unreal_export_uenum_EMagicLeapTouchpadGestureDirection()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMagicLeapTouchpadGestureDirection = PyImport_AddModule("EMagicLeapTouchpadGestureDirection");
#else                                                                                     
	PyObject* new__module_EMagicLeapTouchpadGestureDirection = Py_InitModule3("EMagicLeapTouchpadGestureDirection", NULL, NULL);
#endif

	PyObject* new_dict_EMagicLeapTouchpadGestureDirection = PyModule_GetDict(new_module_EMagicLeapTouchpadGestureDirection);
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureDirection, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureDirection, "Up", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureDirection, "Down", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureDirection, "Left", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureDirection, "Right", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureDirection, "In", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureDirection, "Out", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureDirection, "Clockwise", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureDirection, "CounterClockwise", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureDirection, "EMagicLeapTouchpadGestureDirection_MAX", Py_BuildValue("i", 9));

}
void unreal_export_uenum_EMagicLeapTouchpadGestureType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMagicLeapTouchpadGestureType = PyImport_AddModule("EMagicLeapTouchpadGestureType");
#else                                                                                     
	PyObject* new__module_EMagicLeapTouchpadGestureType = Py_InitModule3("EMagicLeapTouchpadGestureType", NULL, NULL);
#endif

	PyObject* new_dict_EMagicLeapTouchpadGestureType = PyModule_GetDict(new_module_EMagicLeapTouchpadGestureType);
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureType, "Tap", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureType, "ForceTapDown", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureType, "ForceTapUp", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureType, "ForceDwell", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureType, "SecondForceDown", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureType, "LongHold", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureType, "RadialScroll", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureType, "Swipe", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureType, "Scroll", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureType, "Pinch", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMagicLeapTouchpadGestureType, "EMagicLeapTouchpadGestureType_MAX", Py_BuildValue("i", 11));

}
void unreal_export_uenum_EMLControllerTrackingMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMLControllerTrackingMode = PyImport_AddModule("EMLControllerTrackingMode");
#else                                                                                     
	PyObject* new__module_EMLControllerTrackingMode = Py_InitModule3("EMLControllerTrackingMode", NULL, NULL);
#endif

	PyObject* new_dict_EMLControllerTrackingMode = PyModule_GetDict(new_module_EMLControllerTrackingMode);
	PyDict_SetItemString(new_dict_EMLControllerTrackingMode, "InputService", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMLControllerTrackingMode, "CoordinateFrameUID", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMLControllerTrackingMode, "EMLControllerTrackingMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EMLControllerHapticIntensity()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMLControllerHapticIntensity = PyImport_AddModule("EMLControllerHapticIntensity");
#else                                                                                     
	PyObject* new__module_EMLControllerHapticIntensity = Py_InitModule3("EMLControllerHapticIntensity", NULL, NULL);
#endif

	PyObject* new_dict_EMLControllerHapticIntensity = PyModule_GetDict(new_module_EMLControllerHapticIntensity);
	PyDict_SetItemString(new_dict_EMLControllerHapticIntensity, "Low", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMLControllerHapticIntensity, "Medium", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMLControllerHapticIntensity, "High", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMLControllerHapticIntensity, "EMLControllerHapticIntensity_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMLControllerHapticPattern()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMLControllerHapticPattern = PyImport_AddModule("EMLControllerHapticPattern");
#else                                                                                     
	PyObject* new__module_EMLControllerHapticPattern = Py_InitModule3("EMLControllerHapticPattern", NULL, NULL);
#endif

	PyObject* new_dict_EMLControllerHapticPattern = PyModule_GetDict(new_module_EMLControllerHapticPattern);
	PyDict_SetItemString(new_dict_EMLControllerHapticPattern, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMLControllerHapticPattern, "Click", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMLControllerHapticPattern, "Bump", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMLControllerHapticPattern, "DoubleClick", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMLControllerHapticPattern, "Buzz", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMLControllerHapticPattern, "Tick", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMLControllerHapticPattern, "ForceDown", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMLControllerHapticPattern, "ForceUp", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMLControllerHapticPattern, "ForceDwell", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMLControllerHapticPattern, "SecondForceDown", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMLControllerHapticPattern, "EMLControllerHapticPattern_MAX", Py_BuildValue("i", 10));

}
void unreal_export_uenum_EMLControllerLEDSpeed()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMLControllerLEDSpeed = PyImport_AddModule("EMLControllerLEDSpeed");
#else                                                                                     
	PyObject* new__module_EMLControllerLEDSpeed = Py_InitModule3("EMLControllerLEDSpeed", NULL, NULL);
#endif

	PyObject* new_dict_EMLControllerLEDSpeed = PyModule_GetDict(new_module_EMLControllerLEDSpeed);
	PyDict_SetItemString(new_dict_EMLControllerLEDSpeed, "Slow", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMLControllerLEDSpeed, "Medium", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMLControllerLEDSpeed, "Fast", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMLControllerLEDSpeed, "EMLControllerLEDSpeed_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMLControllerLEDColor()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMLControllerLEDColor = PyImport_AddModule("EMLControllerLEDColor");
#else                                                                                     
	PyObject* new__module_EMLControllerLEDColor = Py_InitModule3("EMLControllerLEDColor", NULL, NULL);
#endif

	PyObject* new_dict_EMLControllerLEDColor = PyModule_GetDict(new_module_EMLControllerLEDColor);
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "BrightMissionRed", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "PastelMissionRed", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "BrightFloridaOrange", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "PastelFloridaOrange", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "BrightLunaYellow", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "PastelLunaYellow", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "BrightNebulaPink", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "PastelNebulaPink", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "BrightCosmicPurple", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "PastelCosmicPurple", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "BrightMysticBlue", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "PastelMysticBlue", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "BrightCelestialBlue", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "PastelCelestialBlue", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "BrightShaggleGreen", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "PastelShaggleGreen", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EMLControllerLEDColor, "EMLControllerLEDColor_MAX", Py_BuildValue("i", 16));

}
void unreal_export_uenum_EMLControllerLEDEffect()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMLControllerLEDEffect = PyImport_AddModule("EMLControllerLEDEffect");
#else                                                                                     
	PyObject* new__module_EMLControllerLEDEffect = Py_InitModule3("EMLControllerLEDEffect", NULL, NULL);
#endif

	PyObject* new_dict_EMLControllerLEDEffect = PyModule_GetDict(new_module_EMLControllerLEDEffect);
	PyDict_SetItemString(new_dict_EMLControllerLEDEffect, "RotateCW", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMLControllerLEDEffect, "RotateCCW", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMLControllerLEDEffect, "Pulse", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMLControllerLEDEffect, "PaintCW", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMLControllerLEDEffect, "PaintCCW", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMLControllerLEDEffect, "Blink", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMLControllerLEDEffect, "EMLControllerLEDEffect_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EMLControllerLEDPattern()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMLControllerLEDPattern = PyImport_AddModule("EMLControllerLEDPattern");
#else                                                                                     
	PyObject* new__module_EMLControllerLEDPattern = Py_InitModule3("EMLControllerLEDPattern", NULL, NULL);
#endif

	PyObject* new_dict_EMLControllerLEDPattern = PyModule_GetDict(new_module_EMLControllerLEDPattern);
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock01", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock02", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock03", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock04", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock05", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock06", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock07", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock08", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock09", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock10", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock11", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock12", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock01_07", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock02_08", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock03_09", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock04_10", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock05_11", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "Clock06_12", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_EMLControllerLEDPattern, "EMLControllerLEDPattern_MAX", Py_BuildValue("i", 19));

}
void unreal_export_uenum_EMLControllerType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMLControllerType = PyImport_AddModule("EMLControllerType");
#else                                                                                     
	PyObject* new__module_EMLControllerType = Py_InitModule3("EMLControllerType", NULL, NULL);
#endif

	PyObject* new_dict_EMLControllerType = PyModule_GetDict(new_module_EMLControllerType);
	PyDict_SetItemString(new_dict_EMLControllerType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMLControllerType, "Device", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMLControllerType, "MobileApp", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMLControllerType, "EMLControllerType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEyeTrackerStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEyeTrackerStatus = PyImport_AddModule("EEyeTrackerStatus");
#else                                                                                     
	PyObject* new__module_EEyeTrackerStatus = Py_InitModule3("EEyeTrackerStatus", NULL, NULL);
#endif

	PyObject* new_dict_EEyeTrackerStatus = PyModule_GetDict(new_module_EEyeTrackerStatus);
	PyDict_SetItemString(new_dict_EEyeTrackerStatus, "NotConnected", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEyeTrackerStatus, "NotTracking", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEyeTrackerStatus, "Tracking", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEyeTrackerStatus, "EEyeTrackerStatus_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMagicLeapEyeTrackingCalibrationStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMagicLeapEyeTrackingCalibrationStatus = PyImport_AddModule("EMagicLeapEyeTrackingCalibrationStatus");
#else                                                                                     
	PyObject* new__module_EMagicLeapEyeTrackingCalibrationStatus = Py_InitModule3("EMagicLeapEyeTrackingCalibrationStatus", NULL, NULL);
#endif

	PyObject* new_dict_EMagicLeapEyeTrackingCalibrationStatus = PyModule_GetDict(new_module_EMagicLeapEyeTrackingCalibrationStatus);
	PyDict_SetItemString(new_dict_EMagicLeapEyeTrackingCalibrationStatus, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMagicLeapEyeTrackingCalibrationStatus, "Bad", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMagicLeapEyeTrackingCalibrationStatus, "Good", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMagicLeapEyeTrackingCalibrationStatus, "EMagicLeapEyeTrackingCalibrationStatus_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMagicLeapEyeTrackingStatus()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMagicLeapEyeTrackingStatus = PyImport_AddModule("EMagicLeapEyeTrackingStatus");
#else                                                                                     
	PyObject* new__module_EMagicLeapEyeTrackingStatus = Py_InitModule3("EMagicLeapEyeTrackingStatus", NULL, NULL);
#endif

	PyObject* new_dict_EMagicLeapEyeTrackingStatus = PyModule_GetDict(new_module_EMagicLeapEyeTrackingStatus);
	PyDict_SetItemString(new_dict_EMagicLeapEyeTrackingStatus, "NotConnected", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMagicLeapEyeTrackingStatus, "Disabled", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMagicLeapEyeTrackingStatus, "UserNotPresent", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMagicLeapEyeTrackingStatus, "UserPresent", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMagicLeapEyeTrackingStatus, "UserPresentAndWatchingWindow", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMagicLeapEyeTrackingStatus, "EMagicLeapEyeTrackingStatus_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ELiveLinkCameraProjectionMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELiveLinkCameraProjectionMode = PyImport_AddModule("ELiveLinkCameraProjectionMode");
#else                                                                                     
	PyObject* new__module_ELiveLinkCameraProjectionMode = Py_InitModule3("ELiveLinkCameraProjectionMode", NULL, NULL);
#endif

	PyObject* new_dict_ELiveLinkCameraProjectionMode = PyModule_GetDict(new_module_ELiveLinkCameraProjectionMode);
	PyDict_SetItemString(new_dict_ELiveLinkCameraProjectionMode, "Perspective", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELiveLinkCameraProjectionMode, "Orthographic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELiveLinkCameraProjectionMode, "ELiveLinkCameraProjectionMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELiveLinkSourceMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELiveLinkSourceMode = PyImport_AddModule("ELiveLinkSourceMode");
#else                                                                                     
	PyObject* new__module_ELiveLinkSourceMode = Py_InitModule3("ELiveLinkSourceMode", NULL, NULL);
#endif

	PyObject* new_dict_ELiveLinkSourceMode = PyModule_GetDict(new_module_ELiveLinkSourceMode);
	PyDict_SetItemString(new_dict_ELiveLinkSourceMode, "Latest", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELiveLinkSourceMode, "EngineTime", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELiveLinkSourceMode, "Timecode", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELiveLinkSourceMode, "ELiveLinkSourceMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELiveLinkAxis()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELiveLinkAxis = PyImport_AddModule("ELiveLinkAxis");
#else                                                                                     
	PyObject* new__module_ELiveLinkAxis = Py_InitModule3("ELiveLinkAxis", NULL, NULL);
#endif

	PyObject* new_dict_ELiveLinkAxis = PyModule_GetDict(new_module_ELiveLinkAxis);
	PyDict_SetItemString(new_dict_ELiveLinkAxis, "X", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELiveLinkAxis, "Y", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELiveLinkAxis, "Z", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELiveLinkAxis, "XNeg", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELiveLinkAxis, "YNeg", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELiveLinkAxis, "ZNeg", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ELiveLinkAxis, "ELiveLinkAxis_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EGestureTransformSpace()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGestureTransformSpace = PyImport_AddModule("EGestureTransformSpace");
#else                                                                                     
	PyObject* new__module_EGestureTransformSpace = Py_InitModule3("EGestureTransformSpace", NULL, NULL);
#endif

	PyObject* new_dict_EGestureTransformSpace = PyModule_GetDict(new_module_EGestureTransformSpace);
	PyDict_SetItemString(new_dict_EGestureTransformSpace, "World", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGestureTransformSpace, "Hand", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGestureTransformSpace, "Tracking", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGestureTransformSpace, "EGestureTransformSpace_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EHandTrackingGestureFilterLevel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHandTrackingGestureFilterLevel = PyImport_AddModule("EHandTrackingGestureFilterLevel");
#else                                                                                     
	PyObject* new__module_EHandTrackingGestureFilterLevel = Py_InitModule3("EHandTrackingGestureFilterLevel", NULL, NULL);
#endif

	PyObject* new_dict_EHandTrackingGestureFilterLevel = PyModule_GetDict(new_module_EHandTrackingGestureFilterLevel);
	PyDict_SetItemString(new_dict_EHandTrackingGestureFilterLevel, "NoFilter", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHandTrackingGestureFilterLevel, "SlightRobustnessToFlicker", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHandTrackingGestureFilterLevel, "MoreRobustnessToFlicker", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHandTrackingGestureFilterLevel, "EHandTrackingGestureFilterLevel_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EHandTrackingKeypointFilterLevel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHandTrackingKeypointFilterLevel = PyImport_AddModule("EHandTrackingKeypointFilterLevel");
#else                                                                                     
	PyObject* new__module_EHandTrackingKeypointFilterLevel = Py_InitModule3("EHandTrackingKeypointFilterLevel", NULL, NULL);
#endif

	PyObject* new_dict_EHandTrackingKeypointFilterLevel = PyModule_GetDict(new_module_EHandTrackingKeypointFilterLevel);
	PyDict_SetItemString(new_dict_EHandTrackingKeypointFilterLevel, "NoFilter", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHandTrackingKeypointFilterLevel, "SimpleSmoothing", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHandTrackingKeypointFilterLevel, "PredictiveSmoothing", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHandTrackingKeypointFilterLevel, "EHandTrackingKeypointFilterLevel_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EHandTrackingGesture()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHandTrackingGesture = PyImport_AddModule("EHandTrackingGesture");
#else                                                                                     
	PyObject* new__module_EHandTrackingGesture = Py_InitModule3("EHandTrackingGesture", NULL, NULL);
#endif

	PyObject* new_dict_EHandTrackingGesture = PyModule_GetDict(new_module_EHandTrackingGesture);
	PyDict_SetItemString(new_dict_EHandTrackingGesture, "Finger", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHandTrackingGesture, "Fist", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHandTrackingGesture, "Pinch", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHandTrackingGesture, "Thumb", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EHandTrackingGesture, "L", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EHandTrackingGesture, "OpenHandBack", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EHandTrackingGesture, "Ok", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EHandTrackingGesture, "C", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EHandTrackingGesture, "NoPose", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EHandTrackingGesture, "NoHand", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EHandTrackingGesture, "EHandTrackingGesture_MAX", Py_BuildValue("i", 10));

}
void unreal_export_uenum_EHandTrackingKeypoint()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHandTrackingKeypoint = PyImport_AddModule("EHandTrackingKeypoint");
#else                                                                                     
	PyObject* new__module_EHandTrackingKeypoint = Py_InitModule3("EHandTrackingKeypoint", NULL, NULL);
#endif

	PyObject* new_dict_EHandTrackingKeypoint = PyModule_GetDict(new_module_EHandTrackingKeypoint);
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Thumb_Tip", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Thumb_IP", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Thumb_MCP", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Thumb_CMC", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Index_Tip", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Index_DIP", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Index_PIP", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Index_MCP", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Middle_Tip", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Middle_DIP", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Middle_PIP", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Middle_MCP", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Ring_Tip", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Ring_DIP", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Ring_PIP", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Ring_MCP", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Pinky_Tip", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Pinky_DIP", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Pinky_PIP", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Pinky_MCP", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Wrist_Center", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Wrist_Ulnar", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Wrist_Radial", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "Hand_Center", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_EHandTrackingKeypoint, "EHandTrackingKeypoint_MAX", Py_BuildValue("i", 24));

}
void unreal_export_uenum_EMagicLeapIdentityKey()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMagicLeapIdentityKey = PyImport_AddModule("EMagicLeapIdentityKey");
#else                                                                                     
	PyObject* new__module_EMagicLeapIdentityKey = Py_InitModule3("EMagicLeapIdentityKey", NULL, NULL);
#endif

	PyObject* new_dict_EMagicLeapIdentityKey = PyModule_GetDict(new_module_EMagicLeapIdentityKey);
	PyDict_SetItemString(new_dict_EMagicLeapIdentityKey, "GivenName", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityKey, "FamilyName", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityKey, "Email", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityKey, "Bio", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityKey, "PhoneNumber", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityKey, "Avatar2D", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityKey, "Avatar3D", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityKey, "Unknown", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityKey, "EMagicLeapIdentityKey_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_EMagicLeapIdentityError()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMagicLeapIdentityError = PyImport_AddModule("EMagicLeapIdentityError");
#else                                                                                     
	PyObject* new__module_EMagicLeapIdentityError = Py_InitModule3("EMagicLeapIdentityError", NULL, NULL);
#endif

	PyObject* new_dict_EMagicLeapIdentityError = PyModule_GetDict(new_module_EMagicLeapIdentityError);
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "Ok", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "InvalidParam", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "AllocFailed", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "PrivilegeDenied", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "FailedToConnectToLocalService", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "FailedToConnectToCloudService", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "CloudAuthentication", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "InvalidInformationFromCloud", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "NotLoggedIn", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "ExpiredCredentials", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "FailedToGetUserProfile", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "Unauthorized", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "CertificateError", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "RejectedByCloud", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "AlreadyLoggedIn", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "ModifyIsNotSupported", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "NetworkError", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "UnspecifiedFailure", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_EMagicLeapIdentityError, "EMagicLeapIdentityError_MAX", Py_BuildValue("i", 18));

}
void unreal_export_uenum_EActorSequenceObjectReferenceType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EActorSequenceObjectReferenceType = PyImport_AddModule("EActorSequenceObjectReferenceType");
#else                                                                                     
	PyObject* new__module_EActorSequenceObjectReferenceType = Py_InitModule3("EActorSequenceObjectReferenceType", NULL, NULL);
#endif

	PyObject* new_dict_EActorSequenceObjectReferenceType = PyModule_GetDict(new_module_EActorSequenceObjectReferenceType);
	PyDict_SetItemString(new_dict_EActorSequenceObjectReferenceType, "ContextActor", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EActorSequenceObjectReferenceType, "ExternalActor", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EActorSequenceObjectReferenceType, "Component", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EActorSequenceObjectReferenceType, "EActorSequenceObjectReferenceType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELocationAccuracy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELocationAccuracy = PyImport_AddModule("ELocationAccuracy");
#else                                                                                     
	PyObject* new__module_ELocationAccuracy = Py_InitModule3("ELocationAccuracy", NULL, NULL);
#endif

	PyObject* new_dict_ELocationAccuracy = PyModule_GetDict(new_module_ELocationAccuracy);
	PyDict_SetItemString(new_dict_ELocationAccuracy, "LA_ThreeKilometers", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELocationAccuracy, "LA_OneKilometer", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELocationAccuracy, "LA_HundredMeters", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELocationAccuracy, "LA_TenMeters", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELocationAccuracy, "LA_Best", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELocationAccuracy, "LA_Navigation", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ELocationAccuracy, "LA_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EWheelSweepType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EWheelSweepType = PyImport_AddModule("EWheelSweepType");
#else                                                                                     
	PyObject* new__module_EWheelSweepType = Py_InitModule3("EWheelSweepType", NULL, NULL);
#endif

	PyObject* new_dict_EWheelSweepType = PyModule_GetDict(new_module_EWheelSweepType);
	PyDict_SetItemString(new_dict_EWheelSweepType, "SimpleAndComplex", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EWheelSweepType, "Simple", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EWheelSweepType, "Complex", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EWheelSweepType, "EWheelSweepType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EVehicleDifferential4W()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EVehicleDifferential4W = PyImport_AddModule("EVehicleDifferential4W");
#else                                                                                     
	PyObject* new__module_EVehicleDifferential4W = Py_InitModule3("EVehicleDifferential4W", NULL, NULL);
#endif

	PyObject* new_dict_EVehicleDifferential4W = PyModule_GetDict(new_module_EVehicleDifferential4W);
	PyDict_SetItemString(new_dict_EVehicleDifferential4W, "LimitedSlip_4W", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EVehicleDifferential4W, "LimitedSlip_FrontDrive", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EVehicleDifferential4W, "LimitedSlip_RearDrive", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EVehicleDifferential4W, "Open_4W", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EVehicleDifferential4W, "Open_FrontDrive", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EVehicleDifferential4W, "Open_RearDrive", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EVehicleDifferential4W, "EVehicleDifferential4W_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EMeshPaintColorViewMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshPaintColorViewMode = PyImport_AddModule("EMeshPaintColorViewMode");
#else                                                                                     
	PyObject* new__module_EMeshPaintColorViewMode = Py_InitModule3("EMeshPaintColorViewMode", NULL, NULL);
#endif

	PyObject* new_dict_EMeshPaintColorViewMode = PyModule_GetDict(new_module_EMeshPaintColorViewMode);
	PyDict_SetItemString(new_dict_EMeshPaintColorViewMode, "Normal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshPaintColorViewMode, "RGB", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshPaintColorViewMode, "Alpha", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMeshPaintColorViewMode, "Red", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMeshPaintColorViewMode, "Green", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMeshPaintColorViewMode, "Blue", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMeshPaintColorViewMode, "EMeshPaintColorViewMode_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EMeshVertexPaintTarget()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshVertexPaintTarget = PyImport_AddModule("EMeshVertexPaintTarget");
#else                                                                                     
	PyObject* new__module_EMeshVertexPaintTarget = Py_InitModule3("EMeshVertexPaintTarget", NULL, NULL);
#endif

	PyObject* new_dict_EMeshVertexPaintTarget = PyModule_GetDict(new_module_EMeshVertexPaintTarget);
	PyDict_SetItemString(new_dict_EMeshVertexPaintTarget, "ComponentInstance", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshVertexPaintTarget, "Mesh", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshVertexPaintTarget, "EMeshVertexPaintTarget_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EMeshPaintMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshPaintMode = PyImport_AddModule("EMeshPaintMode");
#else                                                                                     
	PyObject* new__module_EMeshPaintMode = Py_InitModule3("EMeshPaintMode", NULL, NULL);
#endif

	PyObject* new_dict_EMeshPaintMode = PyModule_GetDict(new_module_EMeshPaintMode);
	PyDict_SetItemString(new_dict_EMeshPaintMode, "PaintColors", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshPaintMode, "PaintWeights", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshPaintMode, "EMeshPaintMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ESpriteExtractMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESpriteExtractMode = PyImport_AddModule("ESpriteExtractMode");
#else                                                                                     
	PyObject* new__module_ESpriteExtractMode = Py_InitModule3("ESpriteExtractMode", NULL, NULL);
#endif

	PyObject* new_dict_ESpriteExtractMode = PyModule_GetDict(new_module_ESpriteExtractMode);
	PyDict_SetItemString(new_dict_ESpriteExtractMode, "Auto", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESpriteExtractMode, "Grid", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESpriteExtractMode, "ESpriteExtractMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ECurveEditorFFTFilterType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECurveEditorFFTFilterType = PyImport_AddModule("ECurveEditorFFTFilterType");
#else                                                                                     
	PyObject* new__module_ECurveEditorFFTFilterType = Py_InitModule3("ECurveEditorFFTFilterType", NULL, NULL);
#endif

	PyObject* new_dict_ECurveEditorFFTFilterType = PyModule_GetDict(new_module_ECurveEditorFFTFilterType);
	PyDict_SetItemString(new_dict_ECurveEditorFFTFilterType, "Lowpass", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECurveEditorFFTFilterType, "Highpass", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECurveEditorFFTFilterType, "ECurveEditorFFTFilterType_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ECurveEditorFFTFilterClass()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECurveEditorFFTFilterClass = PyImport_AddModule("ECurveEditorFFTFilterClass");
#else                                                                                     
	PyObject* new__module_ECurveEditorFFTFilterClass = Py_InitModule3("ECurveEditorFFTFilterClass", NULL, NULL);
#endif

	PyObject* new_dict_ECurveEditorFFTFilterClass = PyModule_GetDict(new_module_ECurveEditorFFTFilterClass);
	PyDict_SetItemString(new_dict_ECurveEditorFFTFilterClass, "Butterworth", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECurveEditorFFTFilterClass, "Chebyshev", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECurveEditorFFTFilterClass, "ECurveEditorFFTFilterClass_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EImportLODType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EImportLODType = PyImport_AddModule("EImportLODType");
#else                                                                                     
	PyObject* new__module_EImportLODType = Py_InitModule3("EImportLODType", NULL, NULL);
#endif

	PyObject* new_dict_EImportLODType = PyModule_GetDict(new_module_EImportLODType);
	PyDict_SetItemString(new_dict_EImportLODType, "ILT_PaintedFoliage", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EImportLODType, "ILT_IndividualActors", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EImportLODType, "ILT_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EImportGeometryType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EImportGeometryType = PyImport_AddModule("EImportGeometryType");
#else                                                                                     
	PyObject* new__module_EImportGeometryType = Py_InitModule3("EImportGeometryType", NULL, NULL);
#endif

	PyObject* new_dict_EImportGeometryType = PyModule_GetDict(new_module_EImportGeometryType);
	PyDict_SetItemString(new_dict_EImportGeometryType, "IGT_3D", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EImportGeometryType, "IGT_Billboards", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EImportGeometryType, "IGT_Both", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EImportGeometryType, "IGT_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPropertyValueCategory()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPropertyValueCategory = PyImport_AddModule("EPropertyValueCategory");
#else                                                                                     
	PyObject* new__module_EPropertyValueCategory = Py_InitModule3("EPropertyValueCategory", NULL, NULL);
#endif

	PyObject* new_dict_EPropertyValueCategory = PyModule_GetDict(new_module_EPropertyValueCategory);
	PyDict_SetItemString(new_dict_EPropertyValueCategory, "Undefined", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPropertyValueCategory, "Generic", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPropertyValueCategory, "RelativeLocation", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPropertyValueCategory, "RelativeRotation", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EPropertyValueCategory, "RelativeScale3D", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EPropertyValueCategory, "bVisible", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EPropertyValueCategory, "Material", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_EPropertyValueCategory, "Color", Py_BuildValue("i", 64));
	PyDict_SetItemString(new_dict_EPropertyValueCategory, "EPropertyValueCategory_MAX", Py_BuildValue("i", 65));

}
void unreal_export_uenum_EAbcConversionPreset()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAbcConversionPreset = PyImport_AddModule("EAbcConversionPreset");
#else                                                                                     
	PyObject* new__module_EAbcConversionPreset = Py_InitModule3("EAbcConversionPreset", NULL, NULL);
#endif

	PyObject* new_dict_EAbcConversionPreset = PyModule_GetDict(new_module_EAbcConversionPreset);
	PyDict_SetItemString(new_dict_EAbcConversionPreset, "Maya", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAbcConversionPreset, "Max", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAbcConversionPreset, "Custom", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAbcConversionPreset, "EAbcConversionPreset_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAlembicSamplingType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAlembicSamplingType = PyImport_AddModule("EAlembicSamplingType");
#else                                                                                     
	PyObject* new__module_EAlembicSamplingType = Py_InitModule3("EAlembicSamplingType", NULL, NULL);
#endif

	PyObject* new_dict_EAlembicSamplingType = PyModule_GetDict(new_module_EAlembicSamplingType);
	PyDict_SetItemString(new_dict_EAlembicSamplingType, "PerFrame", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAlembicSamplingType, "PerXFrames", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAlembicSamplingType, "PerTimeStep", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAlembicSamplingType, "EAlembicSamplingType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EBaseCalculationType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EBaseCalculationType = PyImport_AddModule("EBaseCalculationType");
#else                                                                                     
	PyObject* new__module_EBaseCalculationType = Py_InitModule3("EBaseCalculationType", NULL, NULL);
#endif

	PyObject* new_dict_EBaseCalculationType = PyModule_GetDict(new_module_EBaseCalculationType);
	PyDict_SetItemString(new_dict_EBaseCalculationType, "PercentageBased", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EBaseCalculationType, "FixedNumber", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EBaseCalculationType, "EBaseCalculationType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAlembicImportType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAlembicImportType = PyImport_AddModule("EAlembicImportType");
#else                                                                                     
	PyObject* new__module_EAlembicImportType = Py_InitModule3("EAlembicImportType", NULL, NULL);
#endif

	PyObject* new_dict_EAlembicImportType = PyModule_GetDict(new_module_EAlembicImportType);
	PyDict_SetItemString(new_dict_EAlembicImportType, "StaticMesh", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAlembicImportType, "GeometryCache", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAlembicImportType, "Skeletal", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAlembicImportType, "EAlembicImportType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EMinClientFlags()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMinClientFlags = PyImport_AddModule("EMinClientFlags");
#else                                                                                     
	PyObject* new__module_EMinClientFlags = Py_InitModule3("EMinClientFlags", NULL, NULL);
#endif

	PyObject* new_dict_EMinClientFlags = PyModule_GetDict(new_module_EMinClientFlags);
	PyDict_SetItemString(new_dict_EMinClientFlags, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMinClientFlags, "AcceptActors", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMinClientFlags, "AcceptRPCs", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMinClientFlags, "SendRPCs", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMinClientFlags, "SkipControlJoin", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EMinClientFlags, "BeaconConnect", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EMinClientFlags, "NotifyNetActors", Py_BuildValue("i", 256));
	PyDict_SetItemString(new_dict_EMinClientFlags, "NotifyProcessNetEvent", Py_BuildValue("i", 512));
	PyDict_SetItemString(new_dict_EMinClientFlags, "DumpReceivedRaw", Py_BuildValue("i", 4096));
	PyDict_SetItemString(new_dict_EMinClientFlags, "DumpSendRaw", Py_BuildValue("i", 8192));
	PyDict_SetItemString(new_dict_EMinClientFlags, "DumpReceivedRPC", Py_BuildValue("i", 16384));
	PyDict_SetItemString(new_dict_EMinClientFlags, "DumpSendRPC", Py_BuildValue("i", 32768));
	PyDict_SetItemString(new_dict_EMinClientFlags, "EMinClientFlags_MAX", Py_BuildValue("i", 32769));

}
void unreal_export_uenum_EUnitTestResetStage()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUnitTestResetStage = PyImport_AddModule("EUnitTestResetStage");
#else                                                                                     
	PyObject* new__module_EUnitTestResetStage = Py_InitModule3("EUnitTestResetStage", NULL, NULL);
#endif

	PyObject* new_dict_EUnitTestResetStage = PyModule_GetDict(new_module_EUnitTestResetStage);
	PyDict_SetItemString(new_dict_EUnitTestResetStage, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUnitTestResetStage, "FullReset", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUnitTestResetStage, "ResetConnection", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUnitTestResetStage, "ResetExecute", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EUnitTestResetStage, "EUnitTestResetStage_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EUnitTestVerification()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EUnitTestVerification = PyImport_AddModule("EUnitTestVerification");
#else                                                                                     
	PyObject* new__module_EUnitTestVerification = Py_InitModule3("EUnitTestVerification", NULL, NULL);
#endif

	PyObject* new_dict_EUnitTestVerification = PyModule_GetDict(new_module_EUnitTestVerification);
	PyDict_SetItemString(new_dict_EUnitTestVerification, "Unverified", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EUnitTestVerification, "VerifiedNotFixed", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EUnitTestVerification, "VerifiedFixed", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EUnitTestVerification, "VerifiedNeedsUpdate", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EUnitTestVerification, "VerifiedUnreliable", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EUnitTestVerification, "EUnitTestVerification_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EAppleTextureType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAppleTextureType = PyImport_AddModule("EAppleTextureType");
#else                                                                                     
	PyObject* new__module_EAppleTextureType = Py_InitModule3("EAppleTextureType", NULL, NULL);
#endif

	PyObject* new_dict_EAppleTextureType = PyModule_GetDict(new_module_EAppleTextureType);
	PyDict_SetItemString(new_dict_EAppleTextureType, "Unknown", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAppleTextureType, "Image", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAppleTextureType, "PixelBuffer", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAppleTextureType, "Surface", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAppleTextureType, "MetalTexture", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EAppleTextureType, "EAppleTextureType_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ETextureRotationDirection()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureRotationDirection = PyImport_AddModule("ETextureRotationDirection");
#else                                                                                     
	PyObject* new__module_ETextureRotationDirection = Py_InitModule3("ETextureRotationDirection", NULL, NULL);
#endif

	PyObject* new_dict_ETextureRotationDirection = PyModule_GetDict(new_module_ETextureRotationDirection);
	PyDict_SetItemString(new_dict_ETextureRotationDirection, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETextureRotationDirection, "Left", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETextureRotationDirection, "Right", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureRotationDirection, "Down", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETextureRotationDirection, "ETextureRotationDirection_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EGeometryCollectionCacheType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGeometryCollectionCacheType = PyImport_AddModule("EGeometryCollectionCacheType");
#else                                                                                     
	PyObject* new__module_EGeometryCollectionCacheType = Py_InitModule3("EGeometryCollectionCacheType", NULL, NULL);
#endif

	PyObject* new_dict_EGeometryCollectionCacheType = PyModule_GetDict(new_module_EGeometryCollectionCacheType);
	PyDict_SetItemString(new_dict_EGeometryCollectionCacheType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGeometryCollectionCacheType, "Record", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGeometryCollectionCacheType, "Play", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGeometryCollectionCacheType, "RecordAndPlay", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGeometryCollectionCacheType, "EGeometryCollectionCacheType_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EFieldPhysicsDefaultFields()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFieldPhysicsDefaultFields = PyImport_AddModule("EFieldPhysicsDefaultFields");
#else                                                                                     
	PyObject* new__module_EFieldPhysicsDefaultFields = Py_InitModule3("EFieldPhysicsDefaultFields", NULL, NULL);
#endif

	PyObject* new_dict_EFieldPhysicsDefaultFields = PyModule_GetDict(new_module_EFieldPhysicsDefaultFields);
	PyDict_SetItemString(new_dict_EFieldPhysicsDefaultFields, "Field_RadialIntMask", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFieldPhysicsDefaultFields, "Field_RadialFalloff", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFieldPhysicsDefaultFields, "Field_UniformVector", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFieldPhysicsDefaultFields, "Field_RadialVector", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFieldPhysicsDefaultFields, "Field_RadialVectorFalloff", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFieldPhysicsDefaultFields, "Field_EFieldPhysicsDefaultFields_Max", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EFieldPhysicsDefaultFields, "Field_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EFieldPhysicsType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFieldPhysicsType = PyImport_AddModule("EFieldPhysicsType");
#else                                                                                     
	PyObject* new__module_EFieldPhysicsType = Py_InitModule3("EFieldPhysicsType", NULL, NULL);
#endif

	PyObject* new_dict_EFieldPhysicsType = PyModule_GetDict(new_module_EFieldPhysicsType);
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_DynamicState", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_LinearForce", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_ExternalClusterStrain", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_Kill", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_LinearVelocity", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_AngularVelociy", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_AngularTorque", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_InternalClusterStrain", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_DisableThreshold", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_SleepingThreshold", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_PositionStatic", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_PositionAnimated", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_PositionTarget", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_DynamicConstraint", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_CollisionGroup", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_ActivateDisabled", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_EFieldPhysicsType, "Field_PhysicsType_Max", Py_BuildValue("i", 16));

}
void unreal_export_uenum_EFieldFalloffType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFieldFalloffType = PyImport_AddModule("EFieldFalloffType");
#else                                                                                     
	PyObject* new__module_EFieldFalloffType = Py_InitModule3("EFieldFalloffType", NULL, NULL);
#endif

	PyObject* new_dict_EFieldFalloffType = PyModule_GetDict(new_module_EFieldFalloffType);
	PyDict_SetItemString(new_dict_EFieldFalloffType, "Field_FallOff_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFieldFalloffType, "Field_Falloff_Linear", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFieldFalloffType, "Field_Falloff_Inverse", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFieldFalloffType, "Field_Falloff_Squared", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFieldFalloffType, "Field_Falloff_Logarithmic", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EFieldFalloffType, "Field_Falloff_Max", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EFieldResolutionType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFieldResolutionType = PyImport_AddModule("EFieldResolutionType");
#else                                                                                     
	PyObject* new__module_EFieldResolutionType = Py_InitModule3("EFieldResolutionType", NULL, NULL);
#endif

	PyObject* new_dict_EFieldResolutionType = PyModule_GetDict(new_module_EFieldResolutionType);
	PyDict_SetItemString(new_dict_EFieldResolutionType, "Field_Resolution_Minimal", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFieldResolutionType, "Field_Resolution_DisabledParents", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFieldResolutionType, "Field_Resolution_Maximum", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFieldResolutionType, "Field_Resolution_Max", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFieldResolutionType, "Field_Resolution_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EFieldCullingOperationType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFieldCullingOperationType = PyImport_AddModule("EFieldCullingOperationType");
#else                                                                                     
	PyObject* new__module_EFieldCullingOperationType = Py_InitModule3("EFieldCullingOperationType", NULL, NULL);
#endif

	PyObject* new_dict_EFieldCullingOperationType = PyModule_GetDict(new_module_EFieldCullingOperationType);
	PyDict_SetItemString(new_dict_EFieldCullingOperationType, "Field_Culling_Inside", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFieldCullingOperationType, "Field_Culling_Outside", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFieldCullingOperationType, "Field_Culling_Operation_Max", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFieldCullingOperationType, "Field_Culling_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EFieldOperationType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EFieldOperationType = PyImport_AddModule("EFieldOperationType");
#else                                                                                     
	PyObject* new__module_EFieldOperationType = Py_InitModule3("EFieldOperationType", NULL, NULL);
#endif

	PyObject* new_dict_EFieldOperationType = PyModule_GetDict(new_module_EFieldOperationType);
	PyDict_SetItemString(new_dict_EFieldOperationType, "Field_Multiply", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EFieldOperationType, "Field_Divide", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EFieldOperationType, "Field_Add", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EFieldOperationType, "Field_Substract", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EFieldOperationType, "Field_Operation_Max", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESetMaskConditionType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESetMaskConditionType = PyImport_AddModule("ESetMaskConditionType");
#else                                                                                     
	PyObject* new__module_ESetMaskConditionType = Py_InitModule3("ESetMaskConditionType", NULL, NULL);
#endif

	PyObject* new_dict_ESetMaskConditionType = PyModule_GetDict(new_module_ESetMaskConditionType);
	PyDict_SetItemString(new_dict_ESetMaskConditionType, "Field_Set_Always", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESetMaskConditionType, "Field_Set_IFF_NOT_Interior", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESetMaskConditionType, "Field_Set_IFF_NOT_Exterior", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESetMaskConditionType, "Field_MaskCondition_Max", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EClusterConnectionTypeEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EClusterConnectionTypeEnum = PyImport_AddModule("EClusterConnectionTypeEnum");
#else                                                                                     
	PyObject* new__module_EClusterConnectionTypeEnum = Py_InitModule3("EClusterConnectionTypeEnum", NULL, NULL);
#endif

	PyObject* new_dict_EClusterConnectionTypeEnum = PyModule_GetDict(new_module_EClusterConnectionTypeEnum);
	PyDict_SetItemString(new_dict_EClusterConnectionTypeEnum, "Chaos_PointImplicit", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EClusterConnectionTypeEnum, "Chaos_DelaunayTriangulation", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EClusterConnectionTypeEnum, "Chaos_MinimalSpanningSubsetDelaunayTriangulation", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EClusterConnectionTypeEnum, "Chaos_PointImplicitAugmentedWithMinimalDelaunay", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EClusterConnectionTypeEnum, "Chaos_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EClusterConnectionTypeEnum, "Chaos_EClsuterCreationParameters_Max", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EClusterConnectionTypeEnum, "Chaos_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EChaosBreakingSortMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EChaosBreakingSortMethod = PyImport_AddModule("EChaosBreakingSortMethod");
#else                                                                                     
	PyObject* new__module_EChaosBreakingSortMethod = Py_InitModule3("EChaosBreakingSortMethod", NULL, NULL);
#endif

	PyObject* new_dict_EChaosBreakingSortMethod = PyModule_GetDict(new_module_EChaosBreakingSortMethod);
	PyDict_SetItemString(new_dict_EChaosBreakingSortMethod, "SortNone", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EChaosBreakingSortMethod, "SortByHighestMass", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EChaosBreakingSortMethod, "SortByHighestSpeed", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EChaosBreakingSortMethod, "SortByNearestFirst", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EChaosBreakingSortMethod, "Count", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EChaosBreakingSortMethod, "EChaosBreakingSortMethod_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EChaosCollisionSortMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EChaosCollisionSortMethod = PyImport_AddModule("EChaosCollisionSortMethod");
#else                                                                                     
	PyObject* new__module_EChaosCollisionSortMethod = Py_InitModule3("EChaosCollisionSortMethod", NULL, NULL);
#endif

	PyObject* new_dict_EChaosCollisionSortMethod = PyModule_GetDict(new_module_EChaosCollisionSortMethod);
	PyDict_SetItemString(new_dict_EChaosCollisionSortMethod, "SortNone", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EChaosCollisionSortMethod, "SortByHighestMass", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EChaosCollisionSortMethod, "SortByHighestSpeed", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EChaosCollisionSortMethod, "SortByHighestImpulse", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EChaosCollisionSortMethod, "SortByNearestFirst", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EChaosCollisionSortMethod, "Count", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EChaosCollisionSortMethod, "EChaosCollisionSortMethod_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_EChaosTrailingSortMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EChaosTrailingSortMethod = PyImport_AddModule("EChaosTrailingSortMethod");
#else                                                                                     
	PyObject* new__module_EChaosTrailingSortMethod = Py_InitModule3("EChaosTrailingSortMethod", NULL, NULL);
#endif

	PyObject* new_dict_EChaosTrailingSortMethod = PyModule_GetDict(new_module_EChaosTrailingSortMethod);
	PyDict_SetItemString(new_dict_EChaosTrailingSortMethod, "SortNone", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EChaosTrailingSortMethod, "SortByHighestMass", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EChaosTrailingSortMethod, "SortByHighestSpeed", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EChaosTrailingSortMethod, "SortByNearestFirst", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EChaosTrailingSortMethod, "Count", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EChaosTrailingSortMethod, "EChaosTrailingSortMethod_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EGeometryCollectionDebugDrawActorHideGeometry()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGeometryCollectionDebugDrawActorHideGeometry = PyImport_AddModule("EGeometryCollectionDebugDrawActorHideGeometry");
#else                                                                                     
	PyObject* new__module_EGeometryCollectionDebugDrawActorHideGeometry = Py_InitModule3("EGeometryCollectionDebugDrawActorHideGeometry", NULL, NULL);
#endif

	PyObject* new_dict_EGeometryCollectionDebugDrawActorHideGeometry = PyModule_GetDict(new_module_EGeometryCollectionDebugDrawActorHideGeometry);
	PyDict_SetItemString(new_dict_EGeometryCollectionDebugDrawActorHideGeometry, "HideNone", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGeometryCollectionDebugDrawActorHideGeometry, "HideWithCollision", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGeometryCollectionDebugDrawActorHideGeometry, "HideSelected", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGeometryCollectionDebugDrawActorHideGeometry, "HideWholeCollection", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGeometryCollectionDebugDrawActorHideGeometry, "HideAll", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EGeometryCollectionDebugDrawActorHideGeometry, "EGeometryCollectionDebugDrawActorHideGeometry_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ECollectionGroupEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECollectionGroupEnum = PyImport_AddModule("ECollectionGroupEnum");
#else                                                                                     
	PyObject* new__module_ECollectionGroupEnum = Py_InitModule3("ECollectionGroupEnum", NULL, NULL);
#endif

	PyObject* new_dict_ECollectionGroupEnum = PyModule_GetDict(new_module_ECollectionGroupEnum);
	PyDict_SetItemString(new_dict_ECollectionGroupEnum, "Chaos_Traansform", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECollectionGroupEnum, "Chaos_Max", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECollectionGroupEnum, "Chaos_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ECollectionAttributeEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECollectionAttributeEnum = PyImport_AddModule("ECollectionAttributeEnum");
#else                                                                                     
	PyObject* new__module_ECollectionAttributeEnum = Py_InitModule3("ECollectionAttributeEnum", NULL, NULL);
#endif

	PyObject* new_dict_ECollectionAttributeEnum = PyModule_GetDict(new_module_ECollectionAttributeEnum);
	PyDict_SetItemString(new_dict_ECollectionAttributeEnum, "Chaos_Active", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ECollectionAttributeEnum, "Chaos_DynamicState", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECollectionAttributeEnum, "Chaos_CollisionGroup", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECollectionAttributeEnum, "Chaos_Max", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECollectionAttributeEnum, "Chaos_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ETriangleTessellationMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETriangleTessellationMode = PyImport_AddModule("ETriangleTessellationMode");
#else                                                                                     
	PyObject* new__module_ETriangleTessellationMode = Py_InitModule3("ETriangleTessellationMode", NULL, NULL);
#endif

	PyObject* new_dict_ETriangleTessellationMode = PyModule_GetDict(new_module_ETriangleTessellationMode);
	PyDict_SetItemString(new_dict_ETriangleTessellationMode, "ThreeTriangles", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETriangleTessellationMode, "FourTriangles", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETriangleTessellationMode, "ETriangleTessellationMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EInsetPolygonsMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EInsetPolygonsMode = PyImport_AddModule("EInsetPolygonsMode");
#else                                                                                     
	PyObject* new__module_EInsetPolygonsMode = Py_InitModule3("EInsetPolygonsMode", NULL, NULL);
#endif

	PyObject* new_dict_EInsetPolygonsMode = PyModule_GetDict(new_module_EInsetPolygonsMode);
	PyDict_SetItemString(new_dict_EInsetPolygonsMode, "All", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EInsetPolygonsMode, "CenterPolygonOnly", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EInsetPolygonsMode, "SidePolygonsOnly", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EInsetPolygonsMode, "EInsetPolygonsMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPolygonEdgeHardness()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPolygonEdgeHardness = PyImport_AddModule("EPolygonEdgeHardness");
#else                                                                                     
	PyObject* new__module_EPolygonEdgeHardness = Py_InitModule3("EPolygonEdgeHardness", NULL, NULL);
#endif

	PyObject* new_dict_EPolygonEdgeHardness = PyModule_GetDict(new_module_EPolygonEdgeHardness);
	PyDict_SetItemString(new_dict_EPolygonEdgeHardness, "NewEdgesSoft", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPolygonEdgeHardness, "NewEdgesHard", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPolygonEdgeHardness, "AllEdgesSoft", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPolygonEdgeHardness, "AllEdgesHard", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EPolygonEdgeHardness, "EPolygonEdgeHardness_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMeshElementAttributeType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshElementAttributeType = PyImport_AddModule("EMeshElementAttributeType");
#else                                                                                     
	PyObject* new__module_EMeshElementAttributeType = Py_InitModule3("EMeshElementAttributeType", NULL, NULL);
#endif

	PyObject* new_dict_EMeshElementAttributeType = PyModule_GetDict(new_module_EMeshElementAttributeType);
	PyDict_SetItemString(new_dict_EMeshElementAttributeType, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshElementAttributeType, "FVector4", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshElementAttributeType, "FVector", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMeshElementAttributeType, "FVector2D", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMeshElementAttributeType, "Float", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EMeshElementAttributeType, "Int", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EMeshElementAttributeType, "Bool", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EMeshElementAttributeType, "FName", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EMeshElementAttributeType, "EMeshElementAttributeType_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_EMeshTopologyChange()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshTopologyChange = PyImport_AddModule("EMeshTopologyChange");
#else                                                                                     
	PyObject* new__module_EMeshTopologyChange = Py_InitModule3("EMeshTopologyChange", NULL, NULL);
#endif

	PyObject* new_dict_EMeshTopologyChange = PyModule_GetDict(new_module_EMeshTopologyChange);
	PyDict_SetItemString(new_dict_EMeshTopologyChange, "NoTopologyChange", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshTopologyChange, "TopologyChange", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshTopologyChange, "EMeshTopologyChange_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EMeshModificationType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMeshModificationType = PyImport_AddModule("EMeshModificationType");
#else                                                                                     
	PyObject* new__module_EMeshModificationType = Py_InitModule3("EMeshModificationType", NULL, NULL);
#endif

	PyObject* new_dict_EMeshModificationType = PyModule_GetDict(new_module_EMeshModificationType);
	PyDict_SetItemString(new_dict_EMeshModificationType, "FirstInterim", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMeshModificationType, "Interim", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMeshModificationType, "Final", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMeshModificationType, "EMeshModificationType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAndroidGraphicsDebugger()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAndroidGraphicsDebugger = PyImport_AddModule("EAndroidGraphicsDebugger");
#else                                                                                     
	PyObject* new__module_EAndroidGraphicsDebugger = Py_InitModule3("EAndroidGraphicsDebugger", NULL, NULL);
#endif

	PyObject* new_dict_EAndroidGraphicsDebugger = PyModule_GetDict(new_module_EAndroidGraphicsDebugger);
	PyDict_SetItemString(new_dict_EAndroidGraphicsDebugger, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAndroidGraphicsDebugger, "Mali", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAndroidGraphicsDebugger, "Adreno", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAndroidGraphicsDebugger, "EAndroidGraphicsDebugger_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EGoogleVRCaps()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGoogleVRCaps = PyImport_AddModule("EGoogleVRCaps");
#else                                                                                     
	PyObject* new__module_EGoogleVRCaps = Py_InitModule3("EGoogleVRCaps", NULL, NULL);
#endif

	PyObject* new_dict_EGoogleVRCaps = PyModule_GetDict(new_module_EGoogleVRCaps);
	PyDict_SetItemString(new_dict_EGoogleVRCaps, "Cardboard", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGoogleVRCaps, "Daydream33", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGoogleVRCaps, "Daydream63", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGoogleVRCaps, "Daydream66", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EGoogleVRCaps, "EGoogleVRCaps_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EGoogleVRMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EGoogleVRMode = PyImport_AddModule("EGoogleVRMode");
#else                                                                                     
	PyObject* new__module_EGoogleVRMode = Py_InitModule3("EGoogleVRMode", NULL, NULL);
#endif

	PyObject* new_dict_EGoogleVRMode = PyModule_GetDict(new_module_EGoogleVRMode);
	PyDict_SetItemString(new_dict_EGoogleVRMode, "Cardboard", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EGoogleVRMode, "Daydream", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EGoogleVRMode, "DaydreamAndCardboard", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EGoogleVRMode, "EGoogleVRMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAndroidAudio()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAndroidAudio = PyImport_AddModule("EAndroidAudio");
#else                                                                                     
	PyObject* new__module_EAndroidAudio = Py_InitModule3("EAndroidAudio", NULL, NULL);
#endif

	PyObject* new_dict_EAndroidAudio = PyModule_GetDict(new_module_EAndroidAudio);
	PyDict_SetItemString(new_dict_EAndroidAudio, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAndroidAudio, "OGG", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAndroidAudio, "ADPCM", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAndroidAudio, "EAndroidAudio_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EOculusMobileDevice()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOculusMobileDevice = PyImport_AddModule("EOculusMobileDevice");
#else                                                                                     
	PyObject* new__module_EOculusMobileDevice = Py_InitModule3("EOculusMobileDevice", NULL, NULL);
#endif

	PyObject* new_dict_EOculusMobileDevice = PyModule_GetDict(new_module_EOculusMobileDevice);
	PyDict_SetItemString(new_dict_EOculusMobileDevice, "GearGo", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOculusMobileDevice, "Quest", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOculusMobileDevice, "EOculusMobileDevice_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EAndroidInstallLocation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAndroidInstallLocation = PyImport_AddModule("EAndroidInstallLocation");
#else                                                                                     
	PyObject* new__module_EAndroidInstallLocation = Py_InitModule3("EAndroidInstallLocation", NULL, NULL);
#endif

	PyObject* new_dict_EAndroidInstallLocation = PyModule_GetDict(new_module_EAndroidInstallLocation);
	PyDict_SetItemString(new_dict_EAndroidInstallLocation, "InternalOnly", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAndroidInstallLocation, "PreferExternal", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAndroidInstallLocation, "Auto", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAndroidInstallLocation, "EAndroidInstallLocation_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EAndroidDepthBufferPreference()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAndroidDepthBufferPreference = PyImport_AddModule("EAndroidDepthBufferPreference");
#else                                                                                     
	PyObject* new__module_EAndroidDepthBufferPreference = Py_InitModule3("EAndroidDepthBufferPreference", NULL, NULL);
#endif

	PyObject* new_dict_EAndroidDepthBufferPreference = PyModule_GetDict(new_module_EAndroidDepthBufferPreference);
	PyDict_SetItemString(new_dict_EAndroidDepthBufferPreference, "Default", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAndroidDepthBufferPreference, "Bits16", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_EAndroidDepthBufferPreference, "Bits24", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_EAndroidDepthBufferPreference, "Bits32", Py_BuildValue("i", 32));
	PyDict_SetItemString(new_dict_EAndroidDepthBufferPreference, "EAndroidDepthBufferPreference_MAX", Py_BuildValue("i", 33));

}
void unreal_export_uenum_EAndroidScreenOrientation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAndroidScreenOrientation = PyImport_AddModule("EAndroidScreenOrientation");
#else                                                                                     
	PyObject* new__module_EAndroidScreenOrientation = Py_InitModule3("EAndroidScreenOrientation", NULL, NULL);
#endif

	PyObject* new_dict_EAndroidScreenOrientation = PyModule_GetDict(new_module_EAndroidScreenOrientation);
	PyDict_SetItemString(new_dict_EAndroidScreenOrientation, "Portrait", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAndroidScreenOrientation, "ReversePortrait", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAndroidScreenOrientation, "SensorPortrait", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAndroidScreenOrientation, "Landscape", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EAndroidScreenOrientation, "ReverseLandscape", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EAndroidScreenOrientation, "SensorLandscape", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EAndroidScreenOrientation, "Sensor", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EAndroidScreenOrientation, "FullSensor", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EAndroidScreenOrientation, "EAndroidScreenOrientation_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_EAndroidAntVerbosity()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAndroidAntVerbosity = PyImport_AddModule("EAndroidAntVerbosity");
#else                                                                                     
	PyObject* new__module_EAndroidAntVerbosity = Py_InitModule3("EAndroidAntVerbosity", NULL, NULL);
#endif

	PyObject* new_dict_EAndroidAntVerbosity = PyModule_GetDict(new_module_EAndroidAntVerbosity);
	PyDict_SetItemString(new_dict_EAndroidAntVerbosity, "Quiet", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAndroidAntVerbosity, "Normal", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAndroidAntVerbosity, "Verbose", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EAndroidAntVerbosity, "EAndroidAntVerbosity_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EOculusPlatform()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOculusPlatform = PyImport_AddModule("EOculusPlatform");
#else                                                                                     
	PyObject* new__module_EOculusPlatform = Py_InitModule3("EOculusPlatform", NULL, NULL);
#endif

	PyObject* new_dict_EOculusPlatform = PyModule_GetDict(new_module_EOculusPlatform);
	PyDict_SetItemString(new_dict_EOculusPlatform, "PC", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOculusPlatform, "Mobile", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOculusPlatform, "Length", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EOculusPlatform, "EOculusPlatform_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EOculusPlatformTarget()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOculusPlatformTarget = PyImport_AddModule("EOculusPlatformTarget");
#else                                                                                     
	PyObject* new__module_EOculusPlatformTarget = Py_InitModule3("EOculusPlatformTarget", NULL, NULL);
#endif

	PyObject* new_dict_EOculusPlatformTarget = PyModule_GetDict(new_module_EOculusPlatformTarget);
	PyDict_SetItemString(new_dict_EOculusPlatformTarget, "Rift", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOculusPlatformTarget, "Quest", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOculusPlatformTarget, "Mobile", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EOculusPlatformTarget, "Length", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EOculusPlatformTarget, "EOculusPlatformTarget_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ESteamVRTouchDPadMapping()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESteamVRTouchDPadMapping = PyImport_AddModule("ESteamVRTouchDPadMapping");
#else                                                                                     
	PyObject* new__module_ESteamVRTouchDPadMapping = Py_InitModule3("ESteamVRTouchDPadMapping", NULL, NULL);
#endif

	PyObject* new_dict_ESteamVRTouchDPadMapping = PyModule_GetDict(new_module_ESteamVRTouchDPadMapping);
	PyDict_SetItemString(new_dict_ESteamVRTouchDPadMapping, "FaceButtons", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESteamVRTouchDPadMapping, "ThumbstickDirections", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESteamVRTouchDPadMapping, "Disabled", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESteamVRTouchDPadMapping, "ESteamVRTouchDPadMapping_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EPythonProjectItemType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPythonProjectItemType = PyImport_AddModule("EPythonProjectItemType");
#else                                                                                     
	PyObject* new__module_EPythonProjectItemType = Py_InitModule3("EPythonProjectItemType", NULL, NULL);
#endif

	PyObject* new_dict_EPythonProjectItemType = PyModule_GetDict(new_module_EPythonProjectItemType);
	PyDict_SetItemString(new_dict_EPythonProjectItemType, "Project", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPythonProjectItemType, "Folder", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPythonProjectItemType, "File", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPythonProjectItemType, "EPythonProjectItemType_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEntitlementCacheLevelRetrieved()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEntitlementCacheLevelRetrieved = PyImport_AddModule("EEntitlementCacheLevelRetrieved");
#else                                                                                     
	PyObject* new__module_EEntitlementCacheLevelRetrieved = Py_InitModule3("EEntitlementCacheLevelRetrieved", NULL, NULL);
#endif

	PyObject* new_dict_EEntitlementCacheLevelRetrieved = PyModule_GetDict(new_module_EEntitlementCacheLevelRetrieved);
	PyDict_SetItemString(new_dict_EEntitlementCacheLevelRetrieved, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EEntitlementCacheLevelRetrieved, "Memory", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEntitlementCacheLevelRetrieved, "Disk", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEntitlementCacheLevelRetrieved, "EEntitlementCacheLevelRetrieved_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EEntitlementCacheLevelRequest()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EEntitlementCacheLevelRequest = PyImport_AddModule("EEntitlementCacheLevelRequest");
#else                                                                                     
	PyObject* new__module_EEntitlementCacheLevelRequest = Py_InitModule3("EEntitlementCacheLevelRequest", NULL, NULL);
#endif

	PyObject* new_dict_EEntitlementCacheLevelRequest = PyModule_GetDict(new_module_EEntitlementCacheLevelRequest);
	PyDict_SetItemString(new_dict_EEntitlementCacheLevelRequest, "Memory", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EEntitlementCacheLevelRequest, "Disk", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EEntitlementCacheLevelRequest, "EEntitlementCacheLevelRequest_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELiveCodingStartupMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELiveCodingStartupMode = PyImport_AddModule("ELiveCodingStartupMode");
#else                                                                                     
	PyObject* new__module_ELiveCodingStartupMode = Py_InitModule3("ELiveCodingStartupMode", NULL, NULL);
#endif

	PyObject* new_dict_ELiveCodingStartupMode = PyModule_GetDict(new_module_ELiveCodingStartupMode);
	PyDict_SetItemString(new_dict_ELiveCodingStartupMode, "Automatic", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELiveCodingStartupMode, "AutomaticButHidden", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELiveCodingStartupMode, "Manual", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELiveCodingStartupMode, "ELiveCodingStartupMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EIOSCloudKitSyncStrategy()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EIOSCloudKitSyncStrategy = PyImport_AddModule("EIOSCloudKitSyncStrategy");
#else                                                                                     
	PyObject* new__module_EIOSCloudKitSyncStrategy = Py_InitModule3("EIOSCloudKitSyncStrategy", NULL, NULL);
#endif

	PyObject* new_dict_EIOSCloudKitSyncStrategy = PyModule_GetDict(new_module_EIOSCloudKitSyncStrategy);
	PyDict_SetItemString(new_dict_EIOSCloudKitSyncStrategy, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EIOSCloudKitSyncStrategy, "OnlyAtGameStart", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EIOSCloudKitSyncStrategy, "Always", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EIOSCloudKitSyncStrategy, "EIOSCloudKitSyncStrategy_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EIOSLandscapeOrientation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EIOSLandscapeOrientation = PyImport_AddModule("EIOSLandscapeOrientation");
#else                                                                                     
	PyObject* new__module_EIOSLandscapeOrientation = Py_InitModule3("EIOSLandscapeOrientation", NULL, NULL);
#endif

	PyObject* new_dict_EIOSLandscapeOrientation = PyModule_GetDict(new_module_EIOSLandscapeOrientation);
	PyDict_SetItemString(new_dict_EIOSLandscapeOrientation, "LandscapeLeft", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EIOSLandscapeOrientation, "LandscapeRight", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EIOSLandscapeOrientation, "EIOSLandscapeOrientation_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EIOSMetalShaderStandard()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EIOSMetalShaderStandard = PyImport_AddModule("EIOSMetalShaderStandard");
#else                                                                                     
	PyObject* new__module_EIOSMetalShaderStandard = Py_InitModule3("EIOSMetalShaderStandard", NULL, NULL);
#endif

	PyObject* new_dict_EIOSMetalShaderStandard = PyModule_GetDict(new_module_EIOSMetalShaderStandard);
	PyDict_SetItemString(new_dict_EIOSMetalShaderStandard, "IOSMetalSLStandard_1_2", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EIOSMetalShaderStandard, "IOSMetalSLStandard_2_0", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EIOSMetalShaderStandard, "IOSMetalSLStandard_2_1", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EIOSMetalShaderStandard, "IOSMetalSLStandard_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_EIOSVersion()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EIOSVersion = PyImport_AddModule("EIOSVersion");
#else                                                                                     
	PyObject* new__module_EIOSVersion = Py_InitModule3("EIOSVersion", NULL, NULL);
#endif

	PyObject* new_dict_EIOSVersion = PyModule_GetDict(new_module_EIOSVersion);
	PyDict_SetItemString(new_dict_EIOSVersion, "IOS_61", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EIOSVersion, "IOS_7", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_EIOSVersion, "IOS_8", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_EIOSVersion, "IOS_9", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_EIOSVersion, "IOS_10", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_EIOSVersion, "IOS_11", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_EIOSVersion, "IOS_12", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_EIOSVersion, "IOS_MAX", Py_BuildValue("i", 13));

}
void unreal_export_uenum_EPowerUsageFrameRateLock()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPowerUsageFrameRateLock = PyImport_AddModule("EPowerUsageFrameRateLock");
#else                                                                                     
	PyObject* new__module_EPowerUsageFrameRateLock = Py_InitModule3("EPowerUsageFrameRateLock", NULL, NULL);
#endif

	PyObject* new_dict_EPowerUsageFrameRateLock = PyModule_GetDict(new_module_EPowerUsageFrameRateLock);
	PyDict_SetItemString(new_dict_EPowerUsageFrameRateLock, "PUFRL_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPowerUsageFrameRateLock, "PUFRL_20", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_EPowerUsageFrameRateLock, "PUFRL_30", Py_BuildValue("i", 30));
	PyDict_SetItemString(new_dict_EPowerUsageFrameRateLock, "PUFRL_60", Py_BuildValue("i", 60));
	PyDict_SetItemString(new_dict_EPowerUsageFrameRateLock, "PUFRL_MAX", Py_BuildValue("i", 61));

}
void unreal_export_uenum_ELuminPrivilege()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELuminPrivilege = PyImport_AddModule("ELuminPrivilege");
#else                                                                                     
	PyObject* new__module_ELuminPrivilege = Py_InitModule3("ELuminPrivilege", NULL, NULL);
#endif

	PyObject* new_dict_ELuminPrivilege = PyModule_GetDict(new_module_ELuminPrivilege);
	PyDict_SetItemString(new_dict_ELuminPrivilege, "Invalid", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "AudioRecognizer", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "BatteryInfo", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "CameraCapture", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "WorldReconstruction", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "InAppPurchase", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "AudioCaptureMic", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "DrmCertificates", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "Occlusion", Py_BuildValue("i", 8));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "LowLatencyLightwear", Py_BuildValue("i", 9));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "Internet", Py_BuildValue("i", 10));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "IdentityRead", Py_BuildValue("i", 11));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "BackgroundDownload", Py_BuildValue("i", 12));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "BackgroundUpload", Py_BuildValue("i", 13));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "MediaDrm", Py_BuildValue("i", 14));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "Media", Py_BuildValue("i", 15));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "MediaMetadata", Py_BuildValue("i", 16));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "PowerInfo", Py_BuildValue("i", 17));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "LocalAreaNetwork", Py_BuildValue("i", 18));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "VoiceInput", Py_BuildValue("i", 19));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "Documents", Py_BuildValue("i", 20));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "ConnectBackgroundMusicService", Py_BuildValue("i", 21));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "RegisterBackgroundMusicService", Py_BuildValue("i", 22));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "PwFoundObjRead", Py_BuildValue("i", 23));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "NormalNotificationsUsage", Py_BuildValue("i", 24));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "MusicService", Py_BuildValue("i", 25));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "ControllerPose", Py_BuildValue("i", 26));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "ScreensProvider", Py_BuildValue("i", 27));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "GesturesSubscribe", Py_BuildValue("i", 28));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "GesturesConfig", Py_BuildValue("i", 29));
	PyDict_SetItemString(new_dict_ELuminPrivilege, "ELuminPrivilege_MAX", Py_BuildValue("i", 30));

}
void unreal_export_uenum_ELuminFrameTimingHint()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELuminFrameTimingHint = PyImport_AddModule("ELuminFrameTimingHint");
#else                                                                                     
	PyObject* new__module_ELuminFrameTimingHint = Py_InitModule3("ELuminFrameTimingHint", NULL, NULL);
#endif

	PyObject* new_dict_ELuminFrameTimingHint = PyModule_GetDict(new_module_ELuminFrameTimingHint);
	PyDict_SetItemString(new_dict_ELuminFrameTimingHint, "Unspecified", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELuminFrameTimingHint, "Maximum", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELuminFrameTimingHint, "FPS_60", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELuminFrameTimingHint, "FPS_120", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELuminFrameTimingHint, "ELuminFrameTimingHint_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ECanvasScalingMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ECanvasScalingMode = PyImport_AddModule("ECanvasScalingMode");
#else                                                                                     
	PyObject* new__module_ECanvasScalingMode = Py_InitModule3("ECanvasScalingMode", NULL, NULL);
#endif

	PyObject* new_dict_ECanvasScalingMode = PyModule_GetDict(new_module_ECanvasScalingMode);
	PyDict_SetItemString(new_dict_ECanvasScalingMode, "Stretch", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ECanvasScalingMode, "Aspect", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ECanvasScalingMode, "Fixed", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ECanvasScalingMode, "ECanvasScalingMode_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ETutorialAnchorIdentifier()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETutorialAnchorIdentifier = PyImport_AddModule("ETutorialAnchorIdentifier");
#else                                                                                     
	PyObject* new__module_ETutorialAnchorIdentifier = Py_InitModule3("ETutorialAnchorIdentifier", NULL, NULL);
#endif

	PyObject* new_dict_ETutorialAnchorIdentifier = PyModule_GetDict(new_module_ETutorialAnchorIdentifier);
	PyDict_SetItemString(new_dict_ETutorialAnchorIdentifier, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETutorialAnchorIdentifier, "NamedWidget", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETutorialAnchorIdentifier, "Asset", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETutorialAnchorIdentifier, "ETutorialAnchorIdentifier_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ETutorialContent()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETutorialContent = PyImport_AddModule("ETutorialContent");
#else                                                                                     
	PyObject* new__module_ETutorialContent = Py_InitModule3("ETutorialContent", NULL, NULL);
#endif

	PyObject* new_dict_ETutorialContent = PyModule_GetDict(new_module_ETutorialContent);
	PyDict_SetItemString(new_dict_ETutorialContent, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETutorialContent, "Text", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETutorialContent, "UDNExcerpt", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETutorialContent, "RichText", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETutorialContent, "ETutorialContent_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EPaintableClothProperty()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPaintableClothProperty = PyImport_AddModule("EPaintableClothProperty");
#else                                                                                     
	PyObject* new__module_EPaintableClothProperty = Py_InitModule3("EPaintableClothProperty", NULL, NULL);
#endif

	PyObject* new_dict_EPaintableClothProperty = PyModule_GetDict(new_module_EPaintableClothProperty);
	PyDict_SetItemString(new_dict_EPaintableClothProperty, "MaxDistances", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPaintableClothProperty, "BackstopDistances", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPaintableClothProperty, "BackstopRadius", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EPaintableClothProperty, "EPaintableClothProperty_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ESourceColorChannel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ESourceColorChannel = PyImport_AddModule("ESourceColorChannel");
#else                                                                                     
	PyObject* new__module_ESourceColorChannel = Py_InitModule3("ESourceColorChannel", NULL, NULL);
#endif

	PyObject* new_dict_ESourceColorChannel = PyModule_GetDict(new_module_ESourceColorChannel);
	PyDict_SetItemString(new_dict_ESourceColorChannel, "Red", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ESourceColorChannel, "Green", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ESourceColorChannel, "Blue", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ESourceColorChannel, "Alpha", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ESourceColorChannel, "ESourceColorChannel_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EAudioRecordingMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EAudioRecordingMode = PyImport_AddModule("EAudioRecordingMode");
#else                                                                                     
	PyObject* new__module_EAudioRecordingMode = Py_InitModule3("EAudioRecordingMode", NULL, NULL);
#endif

	PyObject* new_dict_EAudioRecordingMode = PyModule_GetDict(new_module_EAudioRecordingMode);
	PyDict_SetItemString(new_dict_EAudioRecordingMode, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EAudioRecordingMode, "AudioTrack", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EAudioRecordingMode, "EAudioRecordingMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EMediaPlayerRecordingImageFormat()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMediaPlayerRecordingImageFormat = PyImport_AddModule("EMediaPlayerRecordingImageFormat");
#else                                                                                     
	PyObject* new__module_EMediaPlayerRecordingImageFormat = Py_InitModule3("EMediaPlayerRecordingImageFormat", NULL, NULL);
#endif

	PyObject* new_dict_EMediaPlayerRecordingImageFormat = PyModule_GetDict(new_module_EMediaPlayerRecordingImageFormat);
	PyDict_SetItemString(new_dict_EMediaPlayerRecordingImageFormat, "PNG", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMediaPlayerRecordingImageFormat, "JPEG", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMediaPlayerRecordingImageFormat, "BMP", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMediaPlayerRecordingImageFormat, "EXR", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EMediaPlayerRecordingImageFormat, "EMediaPlayerRecordingImageFormat_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EMediaPlayerRecordingNumerationStyle()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMediaPlayerRecordingNumerationStyle = PyImport_AddModule("EMediaPlayerRecordingNumerationStyle");
#else                                                                                     
	PyObject* new__module_EMediaPlayerRecordingNumerationStyle = Py_InitModule3("EMediaPlayerRecordingNumerationStyle", NULL, NULL);
#endif

	PyObject* new_dict_EMediaPlayerRecordingNumerationStyle = PyModule_GetDict(new_module_EMediaPlayerRecordingNumerationStyle);
	PyDict_SetItemString(new_dict_EMediaPlayerRecordingNumerationStyle, "AppendFrameNumber", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMediaPlayerRecordingNumerationStyle, "AppendSampleTime", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMediaPlayerRecordingNumerationStyle, "EMediaPlayerRecordingNumerationStyle_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EMediaPlayerEditorScale()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EMediaPlayerEditorScale = PyImport_AddModule("EMediaPlayerEditorScale");
#else                                                                                     
	PyObject* new__module_EMediaPlayerEditorScale = Py_InitModule3("EMediaPlayerEditorScale", NULL, NULL);
#endif

	PyObject* new_dict_EMediaPlayerEditorScale = PyModule_GetDict(new_module_EMediaPlayerEditorScale);
	PyDict_SetItemString(new_dict_EMediaPlayerEditorScale, "Fill", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EMediaPlayerEditorScale, "Fit", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EMediaPlayerEditorScale, "Original", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EMediaPlayerEditorScale, "EMediaPlayerEditorScale_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EOculusMR_BoundaryType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOculusMR_BoundaryType = PyImport_AddModule("EOculusMR_BoundaryType");
#else                                                                                     
	PyObject* new__module_EOculusMR_BoundaryType = Py_InitModule3("EOculusMR_BoundaryType", NULL, NULL);
#endif

	PyObject* new_dict_EOculusMR_BoundaryType = PyModule_GetDict(new_module_EOculusMR_BoundaryType);
	PyDict_SetItemString(new_dict_EOculusMR_BoundaryType, "BT_OuterBoundary", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOculusMR_BoundaryType, "BT_PlayArea", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOculusMR_BoundaryType, "BT_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EOculusMR_CompositionMethod()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOculusMR_CompositionMethod = PyImport_AddModule("EOculusMR_CompositionMethod");
#else                                                                                     
	PyObject* new__module_EOculusMR_CompositionMethod = Py_InitModule3("EOculusMR_CompositionMethod", NULL, NULL);
#endif

	PyObject* new_dict_EOculusMR_CompositionMethod = PyModule_GetDict(new_module_EOculusMR_CompositionMethod);
	PyDict_SetItemString(new_dict_EOculusMR_CompositionMethod, "ExternalComposition", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOculusMR_CompositionMethod, "DirectComposition", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOculusMR_CompositionMethod, "EOculusMR_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EOculusMR_DepthQuality()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOculusMR_DepthQuality = PyImport_AddModule("EOculusMR_DepthQuality");
#else                                                                                     
	PyObject* new__module_EOculusMR_DepthQuality = Py_InitModule3("EOculusMR_DepthQuality", NULL, NULL);
#endif

	PyObject* new_dict_EOculusMR_DepthQuality = PyModule_GetDict(new_module_EOculusMR_DepthQuality);
	PyDict_SetItemString(new_dict_EOculusMR_DepthQuality, "DQ_Low", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOculusMR_DepthQuality, "DQ_Medium", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOculusMR_DepthQuality, "DQ_High", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EOculusMR_DepthQuality, "DQ_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EOculusMR_PostProcessEffects()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOculusMR_PostProcessEffects = PyImport_AddModule("EOculusMR_PostProcessEffects");
#else                                                                                     
	PyObject* new__module_EOculusMR_PostProcessEffects = Py_InitModule3("EOculusMR_PostProcessEffects", NULL, NULL);
#endif

	PyObject* new_dict_EOculusMR_PostProcessEffects = PyModule_GetDict(new_module_EOculusMR_PostProcessEffects);
	PyDict_SetItemString(new_dict_EOculusMR_PostProcessEffects, "PPE_Off", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOculusMR_PostProcessEffects, "PPE_On", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOculusMR_PostProcessEffects, "PPE_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EOculusMR_VirtualGreenScreenType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOculusMR_VirtualGreenScreenType = PyImport_AddModule("EOculusMR_VirtualGreenScreenType");
#else                                                                                     
	PyObject* new__module_EOculusMR_VirtualGreenScreenType = Py_InitModule3("EOculusMR_VirtualGreenScreenType", NULL, NULL);
#endif

	PyObject* new_dict_EOculusMR_VirtualGreenScreenType = PyModule_GetDict(new_module_EOculusMR_VirtualGreenScreenType);
	PyDict_SetItemString(new_dict_EOculusMR_VirtualGreenScreenType, "VGS_Off", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOculusMR_VirtualGreenScreenType, "VGS_OuterBoundary", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOculusMR_VirtualGreenScreenType, "VGS_PlayArea", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EOculusMR_VirtualGreenScreenType, "VGS_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EOculusMR_ClippingReference()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOculusMR_ClippingReference = PyImport_AddModule("EOculusMR_ClippingReference");
#else                                                                                     
	PyObject* new__module_EOculusMR_ClippingReference = Py_InitModule3("EOculusMR_ClippingReference", NULL, NULL);
#endif

	PyObject* new_dict_EOculusMR_ClippingReference = PyModule_GetDict(new_module_EOculusMR_ClippingReference);
	PyDict_SetItemString(new_dict_EOculusMR_ClippingReference, "CR_TrackingReference", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOculusMR_ClippingReference, "CR_Head", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOculusMR_ClippingReference, "CR_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_EOculusMR_CameraDeviceEnum()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EOculusMR_CameraDeviceEnum = PyImport_AddModule("EOculusMR_CameraDeviceEnum");
#else                                                                                     
	PyObject* new__module_EOculusMR_CameraDeviceEnum = Py_InitModule3("EOculusMR_CameraDeviceEnum", NULL, NULL);
#endif

	PyObject* new_dict_EOculusMR_CameraDeviceEnum = PyModule_GetDict(new_module_EOculusMR_CameraDeviceEnum);
	PyDict_SetItemString(new_dict_EOculusMR_CameraDeviceEnum, "CD_None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EOculusMR_CameraDeviceEnum, "CD_WebCamera0", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EOculusMR_CameraDeviceEnum, "CD_WebCamera1", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EOculusMR_CameraDeviceEnum, "CD_ZEDCamera", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EOculusMR_CameraDeviceEnum, "CD_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_EPaintMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EPaintMode = PyImport_AddModule("EPaintMode");
#else                                                                                     
	PyObject* new__module_EPaintMode = Py_InitModule3("EPaintMode", NULL, NULL);
#endif

	PyObject* new_dict_EPaintMode = PyModule_GetDict(new_module_EPaintMode);
	PyDict_SetItemString(new_dict_EPaintMode, "Vertices", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EPaintMode, "Textures", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EPaintMode, "EPaintMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ETexturePaintIndex()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETexturePaintIndex = PyImport_AddModule("ETexturePaintIndex");
#else                                                                                     
	PyObject* new__module_ETexturePaintIndex = Py_InitModule3("ETexturePaintIndex", NULL, NULL);
#endif

	PyObject* new_dict_ETexturePaintIndex = PyModule_GetDict(new_module_ETexturePaintIndex);
	PyDict_SetItemString(new_dict_ETexturePaintIndex, "TextureOne", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ETexturePaintIndex, "TextureTwo", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ETexturePaintIndex, "TextureThree", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETexturePaintIndex, "TextureFour", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETexturePaintIndex, "TextureFive", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETexturePaintIndex, "ETexturePaintIndex_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ETextureWeightTypes()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ETextureWeightTypes = PyImport_AddModule("ETextureWeightTypes");
#else                                                                                     
	PyObject* new__module_ETextureWeightTypes = Py_InitModule3("ETextureWeightTypes", NULL, NULL);
#endif

	PyObject* new_dict_ETextureWeightTypes = PyModule_GetDict(new_module_ETextureWeightTypes);
	PyDict_SetItemString(new_dict_ETextureWeightTypes, "AlphaLerp", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ETextureWeightTypes, "RGB", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ETextureWeightTypes, "ARGB", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ETextureWeightTypes, "OneMinusARGB", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ETextureWeightTypes, "ETextureWeightTypes_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ELandscapeImportLayerError()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeImportLayerError = PyImport_AddModule("ELandscapeImportLayerError");
#else                                                                                     
	PyObject* new__module_ELandscapeImportLayerError = Py_InitModule3("ELandscapeImportLayerError", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeImportLayerError = PyModule_GetDict(new_module_ELandscapeImportLayerError);
	PyDict_SetItemString(new_dict_ELandscapeImportLayerError, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeImportLayerError, "MissingLayerInfo", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeImportLayerError, "FileNotFound", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeImportLayerError, "FileSizeMismatch", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELandscapeImportLayerError, "CorruptFile", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELandscapeImportLayerError, "ColorPng", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ELandscapeImportLayerError, "ELandscapeImportLayerError_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ELandscapeImportHeightmapError()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeImportHeightmapError = PyImport_AddModule("ELandscapeImportHeightmapError");
#else                                                                                     
	PyObject* new__module_ELandscapeImportHeightmapError = Py_InitModule3("ELandscapeImportHeightmapError", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeImportHeightmapError = PyModule_GetDict(new_module_ELandscapeImportHeightmapError);
	PyDict_SetItemString(new_dict_ELandscapeImportHeightmapError, "None", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeImportHeightmapError, "FileNotFound", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeImportHeightmapError, "InvalidSize", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeImportHeightmapError, "CorruptFile", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELandscapeImportHeightmapError, "ColorPng", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELandscapeImportHeightmapError, "LowBitDepth", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ELandscapeImportHeightmapError, "ELandscapeImportHeightmapError_MAX", Py_BuildValue("i", 6));

}
void unreal_export_uenum_ELandscapeMirrorOperation()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeMirrorOperation = PyImport_AddModule("ELandscapeMirrorOperation");
#else                                                                                     
	PyObject* new__module_ELandscapeMirrorOperation = Py_InitModule3("ELandscapeMirrorOperation", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeMirrorOperation = PyModule_GetDict(new_module_ELandscapeMirrorOperation);
	PyDict_SetItemString(new_dict_ELandscapeMirrorOperation, "MinusXToPlusX", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeMirrorOperation, "PlusXToMinusX", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeMirrorOperation, "MinusYToPlusY", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeMirrorOperation, "PlusYToMinusY", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELandscapeMirrorOperation, "RotateMinusXToPlusX", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELandscapeMirrorOperation, "RotatePlusXToMinusX", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_ELandscapeMirrorOperation, "RotateMinusYToPlusY", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_ELandscapeMirrorOperation, "RotatePlusYToMinusY", Py_BuildValue("i", 7));
	PyDict_SetItemString(new_dict_ELandscapeMirrorOperation, "ELandscapeMirrorOperation_MAX", Py_BuildValue("i", 8));

}
void unreal_export_uenum_EColorChannel()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EColorChannel = PyImport_AddModule("EColorChannel");
#else                                                                                     
	PyObject* new__module_EColorChannel = Py_InitModule3("EColorChannel", NULL, NULL);
#endif

	PyObject* new_dict_EColorChannel = PyModule_GetDict(new_module_EColorChannel);
	PyDict_SetItemString(new_dict_EColorChannel, "Red", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EColorChannel, "Green", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EColorChannel, "Blue", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EColorChannel, "Alpha", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EColorChannel, "EColorChannel_MAX", Py_BuildValue("i", 4));

}
void unreal_export_uenum_ELandscapeConvertMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeConvertMode = PyImport_AddModule("ELandscapeConvertMode");
#else                                                                                     
	PyObject* new__module_ELandscapeConvertMode = Py_InitModule3("ELandscapeConvertMode", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeConvertMode = PyModule_GetDict(new_module_ELandscapeConvertMode);
	PyDict_SetItemString(new_dict_ELandscapeConvertMode, "Invalid", Py_BuildValue("i", -1));
	PyDict_SetItemString(new_dict_ELandscapeConvertMode, "Expand", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeConvertMode, "Clip", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeConvertMode, "Resample", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeConvertMode, "ELandscapeConvertMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELandscapeToolPasteMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeToolPasteMode = PyImport_AddModule("ELandscapeToolPasteMode");
#else                                                                                     
	PyObject* new__module_ELandscapeToolPasteMode = Py_InitModule3("ELandscapeToolPasteMode", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeToolPasteMode = PyModule_GetDict(new_module_ELandscapeToolPasteMode);
	PyDict_SetItemString(new_dict_ELandscapeToolPasteMode, "Invalid", Py_BuildValue("i", -1));
	PyDict_SetItemString(new_dict_ELandscapeToolPasteMode, "Both", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeToolPasteMode, "Raise", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeToolPasteMode, "Lower", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeToolPasteMode, "ELandscapeToolPasteMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELandscapeToolNoiseMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeToolNoiseMode = PyImport_AddModule("ELandscapeToolNoiseMode");
#else                                                                                     
	PyObject* new__module_ELandscapeToolNoiseMode = Py_InitModule3("ELandscapeToolNoiseMode", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeToolNoiseMode = PyModule_GetDict(new_module_ELandscapeToolNoiseMode);
	PyDict_SetItemString(new_dict_ELandscapeToolNoiseMode, "Invalid", Py_BuildValue("i", -1));
	PyDict_SetItemString(new_dict_ELandscapeToolNoiseMode, "Both", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeToolNoiseMode, "Add", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeToolNoiseMode, "Sub", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeToolNoiseMode, "ELandscapeToolNoiseMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELandscapeToolHydroErosionMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeToolHydroErosionMode = PyImport_AddModule("ELandscapeToolHydroErosionMode");
#else                                                                                     
	PyObject* new__module_ELandscapeToolHydroErosionMode = Py_InitModule3("ELandscapeToolHydroErosionMode", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeToolHydroErosionMode = PyModule_GetDict(new_module_ELandscapeToolHydroErosionMode);
	PyDict_SetItemString(new_dict_ELandscapeToolHydroErosionMode, "Invalid", Py_BuildValue("i", -1));
	PyDict_SetItemString(new_dict_ELandscapeToolHydroErosionMode, "Both", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeToolHydroErosionMode, "Positive", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeToolHydroErosionMode, "ELandscapeToolHydroErosionMode_MAX", Py_BuildValue("i", 2));

}
void unreal_export_uenum_ELandscapeToolErosionMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeToolErosionMode = PyImport_AddModule("ELandscapeToolErosionMode");
#else                                                                                     
	PyObject* new__module_ELandscapeToolErosionMode = Py_InitModule3("ELandscapeToolErosionMode", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeToolErosionMode = PyModule_GetDict(new_module_ELandscapeToolErosionMode);
	PyDict_SetItemString(new_dict_ELandscapeToolErosionMode, "Invalid", Py_BuildValue("i", -1));
	PyDict_SetItemString(new_dict_ELandscapeToolErosionMode, "Both", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeToolErosionMode, "Raise", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeToolErosionMode, "Lower", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeToolErosionMode, "ELandscapeToolErosionMode_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_ELandscapeToolFlattenMode()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeToolFlattenMode = PyImport_AddModule("ELandscapeToolFlattenMode");
#else                                                                                     
	PyObject* new__module_ELandscapeToolFlattenMode = Py_InitModule3("ELandscapeToolFlattenMode", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeToolFlattenMode = PyModule_GetDict(new_module_ELandscapeToolFlattenMode);
	PyDict_SetItemString(new_dict_ELandscapeToolFlattenMode, "Invalid", Py_BuildValue("i", -1));
	PyDict_SetItemString(new_dict_ELandscapeToolFlattenMode, "Both", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeToolFlattenMode, "Raise", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeToolFlattenMode, "Lower", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeToolFlattenMode, "Interval", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_ELandscapeToolFlattenMode, "Terrace", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_ELandscapeToolFlattenMode, "ELandscapeToolFlattenMode_MAX", Py_BuildValue("i", 5));

}
void unreal_export_uenum_ELandscapeImportResult()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_ELandscapeImportResult = PyImport_AddModule("ELandscapeImportResult");
#else                                                                                     
	PyObject* new__module_ELandscapeImportResult = Py_InitModule3("ELandscapeImportResult", NULL, NULL);
#endif

	PyObject* new_dict_ELandscapeImportResult = PyModule_GetDict(new_module_ELandscapeImportResult);
	PyDict_SetItemString(new_dict_ELandscapeImportResult, "Success", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_ELandscapeImportResult, "Warning", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_ELandscapeImportResult, "Error", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_ELandscapeImportResult, "ELandscapeImportResult_MAX", Py_BuildValue("i", 3));

}
void unreal_export_uenum_EHierarchicalLODActionType()
{

#if PY_MAJOR_VERSION >= 3                                                                 
	PyObject * new_module_EHierarchicalLODActionType = PyImport_AddModule("EHierarchicalLODActionType");
#else                                                                                     
	PyObject* new__module_EHierarchicalLODActionType = Py_InitModule3("EHierarchicalLODActionType", NULL, NULL);
#endif

	PyObject* new_dict_EHierarchicalLODActionType = PyModule_GetDict(new_module_EHierarchicalLODActionType);
	PyDict_SetItemString(new_dict_EHierarchicalLODActionType, "InvalidAction", Py_BuildValue("i", 0));
	PyDict_SetItemString(new_dict_EHierarchicalLODActionType, "CreateCluster", Py_BuildValue("i", 1));
	PyDict_SetItemString(new_dict_EHierarchicalLODActionType, "AddActorToCluster", Py_BuildValue("i", 2));
	PyDict_SetItemString(new_dict_EHierarchicalLODActionType, "MoveActorToCluster", Py_BuildValue("i", 3));
	PyDict_SetItemString(new_dict_EHierarchicalLODActionType, "RemoveActorFromCluster", Py_BuildValue("i", 4));
	PyDict_SetItemString(new_dict_EHierarchicalLODActionType, "MergeClusters", Py_BuildValue("i", 5));
	PyDict_SetItemString(new_dict_EHierarchicalLODActionType, "ChildCluster", Py_BuildValue("i", 6));
	PyDict_SetItemString(new_dict_EHierarchicalLODActionType, "MAX", Py_BuildValue("i", 7));

}
void unreal_export_uenum()
{
	unreal_export_uenum_EInterpCurveMode();
	unreal_export_uenum_ERangeBoundTypes();
	unreal_export_uenum_ELocalizedTextSourceCategory();
	unreal_export_uenum_EAutomationEventType();
	unreal_export_uenum_ELifetimeCondition();
	unreal_export_uenum_EDataValidationResult();
	unreal_export_uenum_EUnit();
	unreal_export_uenum_EMouseCursor();
	unreal_export_uenum_EPixelFormat();
	unreal_export_uenum_EAxis();
	unreal_export_uenum_ELogTimes();
	unreal_export_uenum_ESearchDir();
	unreal_export_uenum_ESearchCase();
	unreal_export_uenum_ETouchType();
	unreal_export_uenum_EConsoleForGamepadLabels();
	unreal_export_uenum_ETouchIndex();
	unreal_export_uenum_EControllerHand();
	unreal_export_uenum_EWidgetClipping();
	unreal_export_uenum_EFontLayoutMethod();
	unreal_export_uenum_EFontLoadingPolicy();
	unreal_export_uenum_EFontHinting();
	unreal_export_uenum_EFocusCause();
	unreal_export_uenum_EFlowDirectionPreference();
	unreal_export_uenum_ETextShapingMethod();
	unreal_export_uenum_EUINavigationRule();
	unreal_export_uenum_EColorVisionDeficiency();
	unreal_export_uenum_ESlateBrushImageType();
	unreal_export_uenum_ESlateBrushMirrorType();
	unreal_export_uenum_ESlateBrushTileType();
	unreal_export_uenum_ESlateBrushDrawType();
	unreal_export_uenum_ESlateColorStylingMode();
	unreal_export_uenum_ESlateDebuggingFocusEvent();
	unreal_export_uenum_ESlateDebuggingNavigationMethod();
	unreal_export_uenum_ESlateDebuggingStateChangeEvent();
	unreal_export_uenum_ESlateDebuggingInputEvent();
	unreal_export_uenum_ESelectInfo();
	unreal_export_uenum_ETextCommit();
	unreal_export_uenum_EScrollDirection();
	unreal_export_uenum_EOrientation();
	unreal_export_uenum_EMenuPlacement();
	unreal_export_uenum_EVerticalAlignment();
	unreal_export_uenum_EHorizontalAlignment();
	unreal_export_uenum_ENavigationGenesis();
	unreal_export_uenum_ENavigationSource();
	unreal_export_uenum_EUINavigationAction();
	unreal_export_uenum_EUINavigation();
	unreal_export_uenum_EButtonPressMethod();
	unreal_export_uenum_EButtonTouchMethod();
	unreal_export_uenum_EButtonClickMethod();
	unreal_export_uenum_EFontFallback();
	unreal_export_uenum_ECheckBoxState();
	unreal_export_uenum_ESlateCheckBoxType();
	unreal_export_uenum_ESlateParentWindowSearchMethod();
	unreal_export_uenum_EConsumeMouseWheel();
	unreal_export_uenum_EVirtualKeyboardDismissAction();
	unreal_export_uenum_ETableViewMode();
	unreal_export_uenum_ESelectionMode();
	unreal_export_uenum_EMultiBlockType();
	unreal_export_uenum_EMultiBoxType();
	unreal_export_uenum_EProgressBarFillType();
	unreal_export_uenum_EStretch();
	unreal_export_uenum_EStretchDirection();
	unreal_export_uenum_EDescendantScrollDestination();
	unreal_export_uenum_EListItemAlignment();
	unreal_export_uenum_ETextFlowDirection();
	unreal_export_uenum_ETextWrappingPolicy();
	unreal_export_uenum_ETextJustify();
	unreal_export_uenum_EMultipleKeyBindingIndex();
	unreal_export_uenum_EUserInterfaceActionType();
	unreal_export_uenum_EAssetEditorOpenLocation();
	unreal_export_uenum_EMobileCSMQuality();
	unreal_export_uenum_EComputeNTBsOptions();
	unreal_export_uenum_ESubLevelStripMode();
	unreal_export_uenum_EFourPlayerSplitScreenType();
	unreal_export_uenum_EThreePlayerSplitScreenType();
	unreal_export_uenum_ETwoPlayerSplitScreenType();
	unreal_export_uenum_ESoundwaveSampleRateSettings();
	unreal_export_uenum_EChaosBufferMode();
	unreal_export_uenum_EChaosThreadingMode();
	unreal_export_uenum_EChaosSolverTickMode();
	unreal_export_uenum_EEmissionPatternTypeEnum();
	unreal_export_uenum_EInitialVelocityTypeEnum();
	unreal_export_uenum_EGeometryCollectionPhysicsTypeEnum();
	unreal_export_uenum_EObjectStateTypeEnum();
	unreal_export_uenum_EImplicitTypeEnum();
	unreal_export_uenum_ECollisionTypeEnum();
	unreal_export_uenum_EPIEPreviewDeviceType();
	unreal_export_uenum_EGameplayTagQueryExprType();
	unreal_export_uenum_EGameplayContainerMatchType();
	unreal_export_uenum_EGameplayTagMatchType();
	unreal_export_uenum_EGameplayTagSelectionType();
	unreal_export_uenum_EGameplayTagSourceType();
	unreal_export_uenum_ETextGender();
	unreal_export_uenum_EFormatArgumentType();
	unreal_export_uenum_EEndPlayReason();
	unreal_export_uenum_ETickingGroup();
	unreal_export_uenum_EComponentCreationMethod();
	unreal_export_uenum_ETemperatureSeverityType();
	unreal_export_uenum_EPlaneConstraintAxisSetting();
	unreal_export_uenum_EInterpToBehaviourType();
	unreal_export_uenum_ETeleportType();
	unreal_export_uenum_EPlatformInterfaceDataType();
	unreal_export_uenum_EMovementMode();
	unreal_export_uenum_ENetworkFailure();
	unreal_export_uenum_ETravelFailure();
	unreal_export_uenum_EApplicationState();
	unreal_export_uenum_EScreenOrientation();
	unreal_export_uenum_EObjectTypeQuery();
	unreal_export_uenum_EDrawDebugTrace();
	unreal_export_uenum_ETraceTypeQuery();
	unreal_export_uenum_EMoveComponentAction();
	unreal_export_uenum_EQuitPreference();
	unreal_export_uenum_ENavPathEvent();
	unreal_export_uenum_ERuntimeGenerationType();
	unreal_export_uenum_ENavCostDisplay();
	unreal_export_uenum_ERecastPartitioning();
	unreal_export_uenum_EClothingWindMethod();
	unreal_export_uenum_MaskTarget_PhysMesh();
	unreal_export_uenum_EHDRCaptureGamut();
	unreal_export_uenum_EMovieSceneCaptureProtocolState();
	unreal_export_uenum_EThumbnailQuality();
	unreal_export_uenum_EKeyGroupMode();
	unreal_export_uenum_EAllowEditsMode();
	unreal_export_uenum_EAutoChangeMode();
	unreal_export_uenum_ESequencerSectionResizeMode();
	unreal_export_uenum_ESequencerLoopMode();
	unreal_export_uenum_ESequencerZoomPosition();
	unreal_export_uenum_ESequencerSpawnPosition();
	unreal_export_uenum_ETouchSwipeDirection();
	unreal_export_uenum_EControllerType();
	unreal_export_uenum_EVREditorWidgetDrawingPolicy();
	unreal_export_uenum_EInteractorHand();
	unreal_export_uenum_EGizmoHandleTypes();
	unreal_export_uenum_EViewportInteractionDraggingMode();
	unreal_export_uenum_EViewportWorldInteractionType();
	unreal_export_uenum_ELocalizationTargetLoadingPolicy();
	unreal_export_uenum_ELocalizationGatherPathRoot();
	unreal_export_uenum_ELocalizationTargetConflictStatus();
	unreal_export_uenum_ELocTextPlatformSplitMode();
	unreal_export_uenum_ELocalizedTextCollapseMode();
	unreal_export_uenum_ERelativeTransformSpace();
	unreal_export_uenum_EAttachLocation();
	unreal_export_uenum_EAttachmentRule();
	unreal_export_uenum_EDetachmentRule();
	unreal_export_uenum_EComponentMobility();
	unreal_export_uenum_EDetailMode();
	unreal_export_uenum_EMeshTrackerVertexColorMode();
	unreal_export_uenum_EARTrackingState();
	unreal_export_uenum_EARSessionTrackingFeature();
	unreal_export_uenum_EARFaceTrackingUpdate();
	unreal_export_uenum_EAREnvironmentCaptureProbeType();
	unreal_export_uenum_EARFrameSyncMode();
	unreal_export_uenum_EARLightEstimationMode();
	unreal_export_uenum_EARPlaneDetectionMode();
	unreal_export_uenum_EARSessionType();
	unreal_export_uenum_EARWorldAlignment();
	unreal_export_uenum_EARDepthAccuracy();
	unreal_export_uenum_EARDepthQuality();
	unreal_export_uenum_EARTextureType();
	unreal_export_uenum_EAREye();
	unreal_export_uenum_EARFaceBlendShape();
	unreal_export_uenum_EARFaceTrackingDirection();
	unreal_export_uenum_EARCandidateImageOrientation();
	unreal_export_uenum_EARJointTransformSpace();
	unreal_export_uenum_EARObjectClassification();
	unreal_export_uenum_EARPlaneOrientation();
	unreal_export_uenum_EARWorldMappingState();
	unreal_export_uenum_EARSessionStatus();
	unreal_export_uenum_EARTrackingQualityReason();
	unreal_export_uenum_EARTrackingQuality();
	unreal_export_uenum_EARLineTraceChannels();
	unreal_export_uenum_EXRTrackedDeviceType();
	unreal_export_uenum_ESpectatorScreenMode();
	unreal_export_uenum_EHMDWornState();
	unreal_export_uenum_EHMDTrackingOrigin();
	unreal_export_uenum_EOrientPositionSelector();
	unreal_export_uenum_ETrackingStatus();
	unreal_export_uenum_ECookerStatsObjectSets();
	unreal_export_uenum_ELightingBuildInfoObjectSets();
	unreal_export_uenum_EPrimitiveObjectSets();
	unreal_export_uenum_EStaticMeshLightingInfoObjectSets();
	unreal_export_uenum_ETextureObjectSets();
	unreal_export_uenum_EMaterialBakeMethod();
	unreal_export_uenum_EFlattenMaterialProperties();
	unreal_export_uenum_ECurveEditorZoomPosition();
	unreal_export_uenum_ECurveEditorTangentVisibility();
	unreal_export_uenum_ECameraFocusMethod();
	unreal_export_uenum_EFFTWindowType();
	unreal_export_uenum_EFFTPeakInterpolationMethod();
	unreal_export_uenum_EFFTSize();
	unreal_export_uenum_ESubmixEffectDynamicsPeakMode();
	unreal_export_uenum_ESubmixEffectDynamicsProcessorType();
	unreal_export_uenum_EFeaturePackDetailLevel();
	unreal_export_uenum_EContentSourceCategory();
	unreal_export_uenum_EGraphicsPreset();
	unreal_export_uenum_EHardwareClass();
	unreal_export_uenum_ESlateAccessibleBehavior();
	unreal_export_uenum_ESlateVisibility();
	unreal_export_uenum_EWidgetDesignFlags();
	unreal_export_uenum_EMouseLockMode();
	unreal_export_uenum_EWindowTitleBarMode();
	unreal_export_uenum_EVirtualKeyboardType();
	unreal_export_uenum_EDragPivot();
	unreal_export_uenum_EDynamicBoxType();
	unreal_export_uenum_ESlateSizeRule();
	unreal_export_uenum_EDesignPreviewSizeMode();
	unreal_export_uenum_EUMGSequencePlayMode();
	unreal_export_uenum_EWidgetAnimationEvent();
	unreal_export_uenum_EWidgetTickFrequency();
	unreal_export_uenum_EBindingKind();
	unreal_export_uenum_EWindowVisibility();
	unreal_export_uenum_EWidgetGeometryMode();
	unreal_export_uenum_EWidgetBlendMode();
	unreal_export_uenum_EWidgetTimingPolicy();
	unreal_export_uenum_EWidgetSpace();
	unreal_export_uenum_EWidgetInteractionSource();
	unreal_export_uenum_EContextTargetFlags();
	unreal_export_uenum_EditConditionByteEnum();
	unreal_export_uenum_EditConditionTestEnum();
	unreal_export_uenum_EGraphPanningMouseButton();
	unreal_export_uenum_EBlueprintUsage();
	unreal_export_uenum_EMontagePreviewType();
	unreal_export_uenum_EAnimStateType();
	unreal_export_uenum_ETransitionGetter();
	unreal_export_uenum_ESaveOnCompile();
	unreal_export_uenum_EEdGraphSchemaAction_K2Graph();
	unreal_export_uenum_ETunnelBoundaryType();
	unreal_export_uenum_ESelfContextInfo();
	unreal_export_uenum_ETransformConstraintType();
	unreal_export_uenum_EConstraintType();
	unreal_export_uenum_ESphericalLimitType();
	unreal_export_uenum_AnimPhysSimSpaceType();
	unreal_export_uenum_AnimPhysLinearConstraintType();
	unreal_export_uenum_AnimPhysAngularConstraintType();
	unreal_export_uenum_EDrivenDestinationMode();
	unreal_export_uenum_EDrivenBoneModificationMode();
	unreal_export_uenum_EConstraintOffsetOption();
	unreal_export_uenum_CopyBoneDeltaMode();
	unreal_export_uenum_EInterpolationBlend();
	unreal_export_uenum_EBoneModificationMode();
	unreal_export_uenum_EModifyCurveApplyMode();
	unreal_export_uenum_EPoseDriverOutput();
	unreal_export_uenum_EPoseDriverSource();
	unreal_export_uenum_EPoseDriverType();
	unreal_export_uenum_ESnapshotSourceMode();
	unreal_export_uenum_ERefPoseType();
	unreal_export_uenum_ESimulationSpace();
	unreal_export_uenum_EScaleChainInitialLength();
	unreal_export_uenum_ESequenceEvalReinit();
	unreal_export_uenum_ESplineBoneAxis();
	unreal_export_uenum_ERotationComponent();
	unreal_export_uenum_EEasingFuncType();
	unreal_export_uenum_ERBFNormalizeMethod();
	unreal_export_uenum_ERBFDistanceMethod();
	unreal_export_uenum_ERBFFunctionType();
	unreal_export_uenum_MovieScene3DPathSection_Axis();
	unreal_export_uenum_EShow3DTrajectory();
	unreal_export_uenum_EFireEventsAtPosition();
	unreal_export_uenum_ELevelVisibility();
	unreal_export_uenum_EParticleKey();
	unreal_export_uenum_EFrameNumberDisplayFormats();
	unreal_export_uenum_EMovieSceneKeyInterpolation();
	unreal_export_uenum_EMovieSceneBlendType();
	unreal_export_uenum_EMovieSceneBuiltInEasing();
	unreal_export_uenum_EEvaluationMethod();
	unreal_export_uenum_EUpdateClockSource();
	unreal_export_uenum_EMovieSceneEvaluationType();
	unreal_export_uenum_EMovieScenePlayerStatus();
	unreal_export_uenum_EMovieSceneObjectBindingSpace();
	unreal_export_uenum_EMovieSceneCompletionMode();
	unreal_export_uenum_ESectionEvaluationFlags();
	unreal_export_uenum_EUpdatePositionMethod();
	unreal_export_uenum_ESpawnOwnership();
	unreal_export_uenum_EClassViewerDeveloperType();
	unreal_export_uenum_EBlueprintComponentDataCookingMethod();
	unreal_export_uenum_ECookProgressDisplayMode();
	unreal_export_uenum_ECookTickFlags();
	unreal_export_uenum_ECookMode();
	unreal_export_uenum_ECSVImportType();
	unreal_export_uenum_ECommentBoxMode();
	unreal_export_uenum_EPasteTo();
	unreal_export_uenum_EMapSetBrushFlags();
	unreal_export_uenum_ELevelVisibilityDirtyMode();
	unreal_export_uenum_ELoadLevelAtStartup();
	unreal_export_uenum_ELevelEditor2DAxis();
	unreal_export_uenum_EDefaultLocationUnit();
	unreal_export_uenum_EUnitDisplay();
	unreal_export_uenum_EFBXAnimationLengthImportType();
	unreal_export_uenum_EFBXTestPlanActionType();
	unreal_export_uenum_EFBXExpectedResultPreset();
	unreal_export_uenum_EFbxExportCompatibility();
	unreal_export_uenum_EFBXImportType();
	unreal_export_uenum_EVertexColorImportOption();
	unreal_export_uenum_EFBXNormalGenerationMethod();
	unreal_export_uenum_EFBXNormalImportMethod();
	unreal_export_uenum_EFbxSceneReimportStatusFlags();
	unreal_export_uenum_EFBXSceneOptionsCreateHierarchyType();
	unreal_export_uenum_EFBXSceneNormalGenerationMethod();
	unreal_export_uenum_EFBXSceneNormalImportMethod();
	unreal_export_uenum_EFbxSceneVertexColorImportOption();
	unreal_export_uenum_EFBXImportContentType();
	unreal_export_uenum_EPlayOnLaunchConfiguration();
	unreal_export_uenum_EPlayOnBuildMode();
	unreal_export_uenum_EPlayNetMode();
	unreal_export_uenum_EPlayModeType();
	unreal_export_uenum_EPlayModeLocations();
	unreal_export_uenum_ELaunchModeType();
	unreal_export_uenum_ELabelAnchorMode();
	unreal_export_uenum_EScrollGestureDirection();
	unreal_export_uenum_EMeasuringToolUnits();
	unreal_export_uenum_ELandscapeFoliageEditorControlType();
	unreal_export_uenum_EWASDType();
	unreal_export_uenum_ERotationGridMode();
	unreal_export_uenum_EMaterialSearchLocation();
	unreal_export_uenum_EAnimationViewportCameraFollowMode();
	unreal_export_uenum_EPhysicsAssetEditorConstraintViewMode();
	unreal_export_uenum_EPhysicsAssetEditorRenderMode();
	unreal_export_uenum_EPhysAssetFitVertWeight();
	unreal_export_uenum_EPhysAssetFitGeomType();
	unreal_export_uenum_EProjectPackagingBlueprintNativizationMethod();
	unreal_export_uenum_EProjectPackagingBuild();
	unreal_export_uenum_EProjectPackagingInternationalizationPresets();
	unreal_export_uenum_EProjectPackagingBuildConfigurations();
	unreal_export_uenum_EditColor();
	unreal_export_uenum_ArrayLabelEnum();
	unreal_export_uenum_PropertyEditorTestEnum();
	unreal_export_uenum_ESheetAxis();
	unreal_export_uenum_EStructViewerDeveloperType();
	unreal_export_uenum_ETexAlign();
	unreal_export_uenum_EThumbnailPrimType();
	unreal_export_uenum_EWriteDisallowedWarningState();
	unreal_export_uenum_EPackageNotifyState();
	unreal_export_uenum_ELevelViewportType();
	unreal_export_uenum_EOrthoThumbnailDirection();
	unreal_export_uenum_EFoliageScaling();
	unreal_export_uenum_EVertexColorMaskChannel();
	unreal_export_uenum_FoliageVertexColorMask();
	unreal_export_uenum_ESimulationQuery();
	unreal_export_uenum_ESimulationOverlap();
	unreal_export_uenum_EDesiredImageFormat();
	unreal_export_uenum_ELandscapeBlendMode();
	unreal_export_uenum_ELandscapeSetupErrors();
	unreal_export_uenum_ELandscapeClearMode();
	unreal_export_uenum_ELandscapeGizmoType();
	unreal_export_uenum_EGrassScaling();
	unreal_export_uenum_ELandscapeLODFalloff();
	unreal_export_uenum_ELandscapeLayerDisplayMode();
	unreal_export_uenum_ELandscapeLayerPaintingRestriction();
	unreal_export_uenum_ELandscapeImportAlphamapType();
	unreal_export_uenum_LandscapeSplineMeshOrientation();
	unreal_export_uenum_ELandscapeLayerBlendType();
	unreal_export_uenum_ELandscapeCustomizedCoordType();
	unreal_export_uenum_ETerrainCoordMappingType();
	unreal_export_uenum_EAlphaBlendOption();
	unreal_export_uenum_EAnimGroupRole();
	unreal_export_uenum_AnimationKeyFormat();
	unreal_export_uenum_ERawCurveTrackTypes();
	unreal_export_uenum_EAnimAssetCurveFlags();
	unreal_export_uenum_AnimationCompressionFormat();
	unreal_export_uenum_EAdditiveBasePoseType();
	unreal_export_uenum_ERootMotionMode();
	unreal_export_uenum_ERootMotionRootLock();
	unreal_export_uenum_EMontagePlayReturnType();
	unreal_export_uenum_EDrawDebugItemType();
	unreal_export_uenum_EAnimLinkMethod();
	unreal_export_uenum_EMontageSubStepResult();
	unreal_export_uenum_EAnimNotifyEventType();
	unreal_export_uenum_EEvaluatorMode();
	unreal_export_uenum_EEvaluatorDataSource();
	unreal_export_uenum_ECopyType();
	unreal_export_uenum_EPostCopyOperation();
	unreal_export_uenum_EPinHidingMode();
	unreal_export_uenum_AnimPhysCollisionType();
	unreal_export_uenum_AnimPhysTwistAxis();
	unreal_export_uenum_ETypeAdvanceAnim();
	unreal_export_uenum_ETransitionLogicType();
	unreal_export_uenum_ETransitionBlendMode();
	unreal_export_uenum_EComponentType();
	unreal_export_uenum_EAxisOption();
	unreal_export_uenum_EAnimInterpolationType();
	unreal_export_uenum_ECurveBlendOption();
	unreal_export_uenum_EAdditiveAnimationType();
	unreal_export_uenum_ENotifyFilterType();
	unreal_export_uenum_EMontageNotifyTickType();
	unreal_export_uenum_EBoneRotationSource();
	unreal_export_uenum_EBoneControlSpace();
	unreal_export_uenum_EBoneAxis();
	unreal_export_uenum_EPrimaryAssetCookRule();
	unreal_export_uenum_EAttenuationShape();
	unreal_export_uenum_EAttenuationDistanceModel();
	unreal_export_uenum_EMonoChannelUpmixMethod();
	unreal_export_uenum_EPanningMethod();
	unreal_export_uenum_EVoiceSampleRate();
	unreal_export_uenum_ReverbPreset();
	unreal_export_uenum_EBlendableLocation();
	unreal_export_uenum_ENotifyTriggerMode();
	unreal_export_uenum_EBlendSpaceAxis();
	unreal_export_uenum_EBlueprintNativizationFlag();
	unreal_export_uenum_EBlueprintCompileMode();
	unreal_export_uenum_EBlueprintType();
	unreal_export_uenum_EBlueprintStatus();
	unreal_export_uenum_EDOFMode();
	unreal_export_uenum_EBodyCollisionResponse();
	unreal_export_uenum_EPhysicsType();
	unreal_export_uenum_ECollisionTraceFlag();
	unreal_export_uenum_EBrushType();
	unreal_export_uenum_ECsgOper();
	unreal_export_uenum_EInitialOscillatorOffset();
	unreal_export_uenum_EOscillatorWaveform();
	unreal_export_uenum_ECameraAlphaBlendMode();
	unreal_export_uenum_ECameraAnimPlaySpace();
	unreal_export_uenum_ECameraProjectionMode();
	unreal_export_uenum_ECloudStorageDelegate();
	unreal_export_uenum_EAngularDriveMode();
	unreal_export_uenum_ELinearConstraintMotion();
	unreal_export_uenum_ECurveTableMode();
	unreal_export_uenum_EEvaluateCurveTableResult();
	unreal_export_uenum_EGrammaticalNumber();
	unreal_export_uenum_EGrammaticalGender();
	unreal_export_uenum_DistributionParamMode();
	unreal_export_uenum_EDistributionVectorMirrorFlags();
	unreal_export_uenum_EDistributionVectorLockFlags();
	unreal_export_uenum_ENodeEnabledState();
	unreal_export_uenum_ENodeAdvancedPins();
	unreal_export_uenum_ENodeTitleType();
	unreal_export_uenum_EPinContainerType();
	unreal_export_uenum_EEdGraphPinDirection();
	unreal_export_uenum_EBlueprintPinStyleType();
	unreal_export_uenum_ECanCreateConnectionResponse();
	unreal_export_uenum_EGraphType();
	unreal_export_uenum_EConsoleType();
	unreal_export_uenum_ETransitionType();
	unreal_export_uenum_EFullyLoadPackageType();
	unreal_export_uenum_EViewModeIndex();
	unreal_export_uenum_EDemoPlayFailure();
	unreal_export_uenum_ETravelType();
	unreal_export_uenum_ENetworkLagState();
	unreal_export_uenum_EMouseCaptureMode();
	unreal_export_uenum_EInputEvent();
	unreal_export_uenum_ECustomTimeStepSynchronizationState();
	unreal_export_uenum_EMeshBufferAccess();
	unreal_export_uenum_ESpawnActorCollisionHandlingMethod();
	unreal_export_uenum_EConstraintFrame();
	unreal_export_uenum_EAngularConstraintMotion();
	unreal_export_uenum_EComponentSocketType();
	unreal_export_uenum_EPhysicalSurface();
	unreal_export_uenum_EWalkableSlopeBehavior();
	unreal_export_uenum_ERotatorQuantization();
	unreal_export_uenum_EVectorQuantization();
	unreal_export_uenum_EAutoPossessAI();
	unreal_export_uenum_EAutoReceiveInput();
	unreal_export_uenum_ENetDormancy();
	unreal_export_uenum_ENetRole();
	unreal_export_uenum_EUpdateRateShiftBucket();
	unreal_export_uenum_EShadowMapFlags();
	unreal_export_uenum_ELightMapPaddingType();
	unreal_export_uenum_ECollisionEnabled();
	unreal_export_uenum_ETimelineSigType();
	unreal_export_uenum_ESleepFamily();
	unreal_export_uenum_ERadialImpulseFalloff();
	unreal_export_uenum_EFilterInterpolationType();
	unreal_export_uenum_ECollisionResponse();
	unreal_export_uenum_EOverlapFilterOption();
	unreal_export_uenum_ECollisionChannel();
	unreal_export_uenum_ENetworkSmoothingMode();
	unreal_export_uenum_ELightingBuildQuality();
	unreal_export_uenum_EMaterialStencilCompare();
	unreal_export_uenum_EMaterialSamplerType();
	unreal_export_uenum_EMaterialTessellationMode();
	unreal_export_uenum_EMaterialShadingModel();
	unreal_export_uenum_EParticleCollisionMode();
	unreal_export_uenum_ETrailWidthMode();
	unreal_export_uenum_EGBufferFormat();
	unreal_export_uenum_ESceneCaptureCompositeMode();
	unreal_export_uenum_ESceneCaptureSource();
	unreal_export_uenum_ETranslucentSortPolicy();
	unreal_export_uenum_ERefractionMode();
	unreal_export_uenum_ETranslucencyLightingMode();
	unreal_export_uenum_ESamplerSourceMode();
	unreal_export_uenum_EBlendMode();
	unreal_export_uenum_EOcclusionCombineMode();
	unreal_export_uenum_ELightmapType();
	unreal_export_uenum_EIndirectLightingCacheQuality();
	unreal_export_uenum_ESceneDepthPriorityGroup();
	unreal_export_uenum_EAspectRatioAxisConstraint();
	unreal_export_uenum_EFontCacheType();
	unreal_export_uenum_EFontImportCharacterSet();
	unreal_export_uenum_EStandbyType();
	unreal_export_uenum_ESuggestProjVelocityTraceOption();
	unreal_export_uenum_EWindowMode();
	unreal_export_uenum_EImportanceWeight();
	unreal_export_uenum_EAdManagerDelegate();
	unreal_export_uenum_EControllerAnalogStick();
	unreal_export_uenum_EAnimAlphaInputType();
	unreal_export_uenum_ETrackActiveCondition();
	unreal_export_uenum_EInterpTrackMoveRotMode();
	unreal_export_uenum_EInterpMoveAxis();
	unreal_export_uenum_ETrackToggleAction();
	unreal_export_uenum_EVisibilityTrackCondition();
	unreal_export_uenum_EVisibilityTrackAction();
	unreal_export_uenum_ESlateGesture();
	unreal_export_uenum_ELerpInterpolationMode();
	unreal_export_uenum_EEasingFunc();
	unreal_export_uenum_ERoundingMode();
	unreal_export_uenum_EStreamingVolumeUsage();
	unreal_export_uenum_EMaterialDecalResponse();
	unreal_export_uenum_EDecalBlendMode();
	unreal_export_uenum_ETextureColorChannel();
	unreal_export_uenum_EMaterialAttributeBlend();
	unreal_export_uenum_EChannelMaskParameterColor();
	unreal_export_uenum_EClampMode();
	unreal_export_uenum_ECustomMaterialOutputType();
	unreal_export_uenum_EDepthOfFieldFunctionValue();
	unreal_export_uenum_EFunctionInputType();
	unreal_export_uenum_ENoiseFunction();
	unreal_export_uenum_EMaterialSceneAttributeInputMode();
	unreal_export_uenum_ESpeedTreeLODType();
	unreal_export_uenum_ESpeedTreeWindType();
	unreal_export_uenum_ESpeedTreeGeometryType();
	unreal_export_uenum_EMaterialExposedTextureProperty();
	unreal_export_uenum_ETextureMipValueMode();
	unreal_export_uenum_EMaterialVectorCoordTransform();
	unreal_export_uenum_EMaterialVectorCoordTransformSource();
	unreal_export_uenum_EMaterialPositionTransformSource();
	unreal_export_uenum_EVectorNoiseFunction();
	unreal_export_uenum_EMaterialExposedViewProperty();
	unreal_export_uenum_EWorldPositionIncludedOffsets();
	unreal_export_uenum_EMaterialFunctionUsage();
	unreal_export_uenum_EMaterialUsage();
	unreal_export_uenum_EMaterialParameterAssociation();
	unreal_export_uenum_EMaterialMergeType();
	unreal_export_uenum_ETextureSizingType();
	unreal_export_uenum_ESceneTextureId();
	unreal_export_uenum_EMaterialDomain();
	unreal_export_uenum_EMeshInstancingReplacementMethod();
	unreal_export_uenum_EUVOutput();
	unreal_export_uenum_EMeshMergeType();
	unreal_export_uenum_EMeshLODSelectionType();
	unreal_export_uenum_EProxyNormalComputationMethod();
	unreal_export_uenum_ELandscapeCullingPrecision();
	unreal_export_uenum_EStaticMeshReductionTerimationCriterion();
	unreal_export_uenum_EMeshFeatureImportance();
	unreal_export_uenum_EVertexPaintAxis();
	unreal_export_uenum_EMicroTransactionResult();
	unreal_export_uenum_EMicroTransactionDelegate();
	unreal_export_uenum_FNavigationSystemRunMode();
	unreal_export_uenum_ENavigationQueryResult();
	unreal_export_uenum_ENavDataGatheringModeConfig();
	unreal_export_uenum_ENavDataGatheringMode();
	unreal_export_uenum_ENavigationOptionFlag();
	unreal_export_uenum_ENavLinkDirection();
	unreal_export_uenum_EFastArraySerializerDeltaFlags();
	unreal_export_uenum_EEmitterRenderMode();
	unreal_export_uenum_EParticleSubUVInterpMethod();
	unreal_export_uenum_EParticleBurstMethod();
	unreal_export_uenum_EParticleSystemInsignificanceReaction();
	unreal_export_uenum_EParticleSignificanceLevel();
	unreal_export_uenum_EParticleDetailMode();
	unreal_export_uenum_EParticleSourceSelectionMethod();
	unreal_export_uenum_EModuleType();
	unreal_export_uenum_EAttractorParticleSelectionMethod();
	unreal_export_uenum_Beam2SourceTargetTangentMethod();
	unreal_export_uenum_Beam2SourceTargetMethod();
	unreal_export_uenum_BeamModifierType();
	unreal_export_uenum_EParticleCameraOffsetUpdateMethod();
	unreal_export_uenum_EParticleCollisionComplete();
	unreal_export_uenum_EParticleCollisionResponse();
	unreal_export_uenum_ELocationBoneSocketSelectionMethod();
	unreal_export_uenum_ELocationBoneSocketSource();
	unreal_export_uenum_ELocationEmitterSelectionMethod();
	unreal_export_uenum_CylinderHeightAxis();
	unreal_export_uenum_ELocationSkelVertSurfaceSource();
	unreal_export_uenum_EOrbitChainMode();
	unreal_export_uenum_EParticleAxisLock();
	unreal_export_uenum_EEmitterDynamicParameterValue();
	unreal_export_uenum_EEmitterNormalsMode();
	unreal_export_uenum_EParticleSortMode();
	unreal_export_uenum_EParticleUVFlipMode();
	unreal_export_uenum_ETrail2SourceMethod();
	unreal_export_uenum_EBeamTaperMethod();
	unreal_export_uenum_EBeam2Method();
	unreal_export_uenum_EMeshCameraFacingOptions();
	unreal_export_uenum_EMeshCameraFacingUpAxis();
	unreal_export_uenum_EMeshScreenAlignment();
	unreal_export_uenum_ETrailsRenderAxisOption();
	unreal_export_uenum_EParticleScreenAlignment();
	unreal_export_uenum_EParticleSystemOcclusionBoundsMethod();
	unreal_export_uenum_ParticleSystemLODMethod();
	unreal_export_uenum_EParticleSystemUpdateMode();
	unreal_export_uenum_EParticleEventType();
	unreal_export_uenum_ParticleReplayState();
	unreal_export_uenum_EParticleSysParamType();
	unreal_export_uenum_ESettingsLockedAxis();
	unreal_export_uenum_ESettingsDOF();
	unreal_export_uenum_EFrictionCombineMode();
	unreal_export_uenum_EViewTargetBlendFunction();
	unreal_export_uenum_EDynamicForceFeedbackAction();
	unreal_export_uenum_ERendererStencilMask();
	unreal_export_uenum_EHasCustomNavigableGeometry();
	unreal_export_uenum_ECanBeCharacterBase();
	unreal_export_uenum_ERichCurveExtrapolation();
	unreal_export_uenum_ERichCurveInterpMode();
	unreal_export_uenum_EReflectionSourceType();
	unreal_export_uenum_EDefaultBackBufferPixelFormat();
	unreal_export_uenum_EAutoExposureMethodUI();
	unreal_export_uenum_EAlphaChannelMode();
	unreal_export_uenum_EEarlyZPass();
	unreal_export_uenum_ECustomDepthStencil();
	unreal_export_uenum_EMobileMSAASampleCount();
	unreal_export_uenum_ECompositingSampleCount();
	unreal_export_uenum_EClearSceneOptions();
	unreal_export_uenum_EReporterLineStyle();
	unreal_export_uenum_ELegendPosition();
	unreal_export_uenum_EGraphDataStyle();
	unreal_export_uenum_EGraphAxisStyle();
	unreal_export_uenum_ERichCurveKeyTimeCompressionFormat();
	unreal_export_uenum_ERichCurveCompressionFormat();
	unreal_export_uenum_ERichCurveTangentWeightMode();
	unreal_export_uenum_ERichCurveTangentMode();
	unreal_export_uenum_EConstraintTransform();
	unreal_export_uenum_EControlConstraint();
	unreal_export_uenum_ERootMotionFinishVelocityMode();
	unreal_export_uenum_ERootMotionSourceSettingsFlags();
	unreal_export_uenum_ERootMotionSourceStatusFlags();
	unreal_export_uenum_ERootMotionAccumulateMode();
	unreal_export_uenum_ERuntimeVirtualTextureMainPassType();
	unreal_export_uenum_ERuntimeVirtualTextureMaterialType();
	unreal_export_uenum_EReflectedAndRefractedRayTracedShadows();
	unreal_export_uenum_ETranslucencyType();
	unreal_export_uenum_EReflectionsType();
	unreal_export_uenum_ELightUnits();
	unreal_export_uenum_EBloomMethod();
	unreal_export_uenum_EAutoExposureMethod();
	unreal_export_uenum_EAntiAliasingMethod();
	unreal_export_uenum_EDepthOfFieldMethod();
	unreal_export_uenum_ESceneCapturePrimitiveRenderMode();
	unreal_export_uenum_EMaterialProperty();
	unreal_export_uenum_EPhysicsTransformUpdateMode();
	unreal_export_uenum_EAnimationMode();
	unreal_export_uenum_EKinematicBonesUpdateToPhysics();
	unreal_export_uenum_EAnimCurveType();
	unreal_export_uenum_EBoneFilterActionOption();
	unreal_export_uenum_SkeletalMeshOptimizationImportance();
	unreal_export_uenum_SkeletalMeshOptimizationType();
	unreal_export_uenum_SkeletalMeshTerminationCriterion();
	unreal_export_uenum_EBoneTranslationRetargetingMode();
	unreal_export_uenum_EBoneSpaces();
	unreal_export_uenum_EVisibilityBasedAnimTickOption();
	unreal_export_uenum_EPhysBodyOp();
	unreal_export_uenum_EBoneVisibilityStatus();
	unreal_export_uenum_ESkyLightSourceType();
	unreal_export_uenum_EReverbSendMethod();
	unreal_export_uenum_EAirAbsorptionMethod();
	unreal_export_uenum_ESoundSpatializationAlgorithm();
	unreal_export_uenum_ESoundDistanceCalc();
	unreal_export_uenum_EVirtualizationMode();
	unreal_export_uenum_EAudioOutputTarget();
	unreal_export_uenum_EMaxConcurrentResolutionRule();
	unreal_export_uenum_ESoundGroup();
	unreal_export_uenum_ModulationParamMode();
	unreal_export_uenum_ESourceBusChannels();
	unreal_export_uenum_ESourceBusSendLevelControlMethod();
	unreal_export_uenum_ESendLevelControlMethod();
	unreal_export_uenum_EAudioRecordingExportType();
	unreal_export_uenum_ESubmixChannelFormat();
	unreal_export_uenum_ESoundWaveFFTSize();
	unreal_export_uenum_EDecompressionType();
	unreal_export_uenum_ESplineCoordinateSpace();
	unreal_export_uenum_ESplinePointType();
	unreal_export_uenum_ESplineMeshAxis();
	unreal_export_uenum_EOptimizationType();
	unreal_export_uenum_EImportanceLevel();
	unreal_export_uenum_ENormalMode();
	unreal_export_uenum_EStereoLayerShape();
	unreal_export_uenum_EStereoLayerType();
	unreal_export_uenum_EOpacitySourceMode();
	unreal_export_uenum_ESubUVBoundingVertexCount();
	unreal_export_uenum_EVerticalTextAligment();
	unreal_export_uenum_EHorizTextAligment();
	unreal_export_uenum_ETextureLossyCompressionAmount();
	unreal_export_uenum_ETextureCompressionQuality();
	unreal_export_uenum_ETextureSourceFormat();
	unreal_export_uenum_ETextureSourceArtType();
	unreal_export_uenum_ETextureMipCount();
	unreal_export_uenum_ECompositeTextureMode();
	unreal_export_uenum_TextureAddress();
	unreal_export_uenum_TextureFilter();
	unreal_export_uenum_TextureCompressionSettings();
	unreal_export_uenum_ETextureMipLoadOptions();
	unreal_export_uenum_ETextureSamplerFilter();
	unreal_export_uenum_ETexturePowerOfTwoSetting();
	unreal_export_uenum_TextureMipGenSettings();
	unreal_export_uenum_TextureGroup();
	unreal_export_uenum_ETextureRenderTargetFormat();
	unreal_export_uenum_ETimecodeProviderSynchronizationState();
	unreal_export_uenum_ETimelineDirection();
	unreal_export_uenum_ETimelineLengthMode();
	unreal_export_uenum_ETimeStretchCurveMapping();
	unreal_export_uenum_ETwitterIntegrationDelegate();
	unreal_export_uenum_ETwitterRequestMethod();
	unreal_export_uenum_EUserDefinedStructureStatus();
	unreal_export_uenum_EUIScalingRule();
	unreal_export_uenum_ERenderFocusRule();
	unreal_export_uenum_EVectorFieldConstructionOp();
	unreal_export_uenum_EWindSourceType();
	unreal_export_uenum_EPSCPoolMethod();
	unreal_export_uenum_EVolumeLightingMethod();
	unreal_export_uenum_EVisibilityAggressiveness();
	unreal_export_uenum_EMoviePlaybackType();
	unreal_export_uenum_EMediaPlayerOptionBooleanOverride();
	unreal_export_uenum_ESmartNameContainerType();
	unreal_export_uenum_EGameplayDebuggerOverrideMode();
	unreal_export_uenum_ETaskResourceOverlapPolicy();
	unreal_export_uenum_EGameplayTaskState();
	unreal_export_uenum_EGameplayTaskRunResult();
	unreal_export_uenum_EPathFollowingResult();
	unreal_export_uenum_EEnvQueryStatus();
	unreal_export_uenum_EAISenseNotifyType();
	unreal_export_uenum_EAITaskPriority();
	unreal_export_uenum_EGenericAICheck();
	unreal_export_uenum_EAILockSource();
	unreal_export_uenum_EAIRequestPriority();
	unreal_export_uenum_EPawnActionEventType();
	unreal_export_uenum_EPawnActionResult();
	unreal_export_uenum_EPawnActionAbortState();
	unreal_export_uenum_FAIDistanceType();
	unreal_export_uenum_EAIOptionFlag();
	unreal_export_uenum_EBTFlowAbortMode();
	unreal_export_uenum_EBTNodeResult();
	unreal_export_uenum_ETextKeyOperation();
	unreal_export_uenum_EArithmeticKeyOperation();
	unreal_export_uenum_EBasicKeyOperation();
	unreal_export_uenum_EBTParallelMode();
	unreal_export_uenum_EBTDecoratorLogic();
	unreal_export_uenum_EBTChildIndex();
	unreal_export_uenum_EBTBlackboardRestart();
	unreal_export_uenum_EBlackBoardEntryComparison();
	unreal_export_uenum_EPathExistanceQueryType();
	unreal_export_uenum_EPointOnCircleSpacingMethod();
	unreal_export_uenum_EEQSNormalizationType();
	unreal_export_uenum_EEnvTestDistance();
	unreal_export_uenum_EEnvTestDot();
	unreal_export_uenum_EEnvTestPathfinding();
	unreal_export_uenum_EEnvQueryTestClamping();
	unreal_export_uenum_EEnvDirection();
	unreal_export_uenum_EEnvOverlapShape();
	unreal_export_uenum_EEnvTraceShape();
	unreal_export_uenum_EEnvQueryTrace();
	unreal_export_uenum_EAIParamType();
	unreal_export_uenum_EEnvQueryParam();
	unreal_export_uenum_EEnvQueryRunMode();
	unreal_export_uenum_EEnvTestScoreOperator();
	unreal_export_uenum_EEnvTestFilterOperator();
	unreal_export_uenum_EEnvTestCost();
	unreal_export_uenum_EEnvTestWeight();
	unreal_export_uenum_EEnvTestScoreEquation();
	unreal_export_uenum_EEnvTestFilterType();
	unreal_export_uenum_EEnvTestPurpose();
	unreal_export_uenum_EEnvQueryHightlightMode();
	unreal_export_uenum_ETeamAttitude();
	unreal_export_uenum_EPathFollowingRequestResult();
	unreal_export_uenum_EPathFollowingAction();
	unreal_export_uenum_EPathFollowingStatus();
	unreal_export_uenum_EPawnActionFailHandling();
	unreal_export_uenum_EPawnSubActionTriggeringPolicy();
	unreal_export_uenum_EPawnActionMoveMode();
	unreal_export_uenum_EDatasmithAreaLightActorType();
	unreal_export_uenum_EDatasmithAreaLightActorShape();
	unreal_export_uenum_EVREDDataTableType();
	unreal_export_uenum_EDatasmithCADStitchingTechnique();
	unreal_export_uenum_EDatasmithImportHierarchy();
	unreal_export_uenum_EDatasmithImportScene();
	unreal_export_uenum_EDatasmithImportLightmapMax();
	unreal_export_uenum_EDatasmithImportLightmapMin();
	unreal_export_uenum_EDatasmithImportMaterialQuality();
	unreal_export_uenum_EDatasmithImportActorPolicy();
	unreal_export_uenum_EDatasmithImportAssetConflictPolicy();
	unreal_export_uenum_EDatasmithImportSearchPackagePolicy();
	unreal_export_uenum_PurchaseType();
	unreal_export_uenum_EAutoPinType();
	unreal_export_uenum_EMeshLOD();
	unreal_export_uenum_EMeshState();
	unreal_export_uenum_EMLMeshVertexColorMode();
	unreal_export_uenum_EMeshType();
	unreal_export_uenum_EPlaneQueryFlags();
	unreal_export_uenum_ERaycastResultState();
	unreal_export_uenum_EMagicLeapPrivilege();
	unreal_export_uenum_CloudStatus();
	unreal_export_uenum_EPassableWorldError();
	unreal_export_uenum_EHeadTrackingMode();
	unreal_export_uenum_EHeadTrackingError();
	unreal_export_uenum_EInAppPurchaseState();
	unreal_export_uenum_EMPMatchOutcome();
	unreal_export_uenum_EBeaconConnectionState();
	unreal_export_uenum_EClientRequestType();
	unreal_export_uenum_EPartyReservationResult();
	unreal_export_uenum_ESpectatorClientRequestType();
	unreal_export_uenum_ESpectatorReservationResult();
	unreal_export_uenum_EBoundaryType();
	unreal_export_uenum_ETiledMultiResLevel();
	unreal_export_uenum_ETrackedDeviceType();
	unreal_export_uenum_EProcMeshSliceCapOption();
	unreal_export_uenum_ESteamVRTrackedDeviceType();
	unreal_export_uenum_EMacMetalShaderStandard();
	unreal_export_uenum_EDefaultGraphicsRHI();
	unreal_export_uenum_ECompilerVersion();
	unreal_export_uenum_EMinimumSupportedOS();
	unreal_export_uenum_EBitmapCSType();
	unreal_export_uenum_EBitmapHeaderVersion();
	unreal_export_uenum_EVectorVMOp();
	unreal_export_uenum_EVectorVMOperandLocation();
	unreal_export_uenum_EVectorVMBaseTypes();
	unreal_export_uenum_ETimezoneSetting();
	unreal_export_uenum_EConfigFileSourceControlStatus();
	unreal_export_uenum_EPinnedCommandListType();
	unreal_export_uenum_EPropertyBindingPermissionLevel();
	unreal_export_uenum_EWidgetCompileTimeTickPrediction();
	unreal_export_uenum_EWidgetSupportsDynamicCreation();
	unreal_export_uenum_EAutomationArtifactType();
	unreal_export_uenum_EAutomationState();
	unreal_export_uenum_EComparisonTolerance();
	unreal_export_uenum_EFunctionalTestLogHandling();
	unreal_export_uenum_EFunctionalTestResult();
	unreal_export_uenum_EComparisonMethod();
	unreal_export_uenum_EWidgetTestAppearLocation();
	unreal_export_uenum_EDecoratorLogicMode();
	unreal_export_uenum_EMediaWebcamCaptureDeviceFilter();
	unreal_export_uenum_EMediaVideoCaptureDeviceFilter();
	unreal_export_uenum_EMediaAudioCaptureDeviceFilter();
	unreal_export_uenum_EMediaPlayerTrack();
	unreal_export_uenum_EMediaSoundComponentFFTSize();
	unreal_export_uenum_EMediaSoundChannels();
	unreal_export_uenum_EFlipbookCollisionMode();
	unreal_export_uenum_EPaperSpriteAtlasPadding();
	unreal_export_uenum_ETileMapProjectionMode();
	unreal_export_uenum_ESpritePivotMode();
	unreal_export_uenum_ESpritePolygonMode();
	unreal_export_uenum_ESpriteShapeType();
	unreal_export_uenum_ESpriteCollisionMode();
	unreal_export_uenum_ELuminARLineTraceChannel();
	unreal_export_uenum_ELuminARTrackingState();
	unreal_export_uenum_ELuminARFunctionStatus();
	unreal_export_uenum_ELuminARAvailability();
	unreal_export_uenum_EMagicLeapTouchpadGestureDirection();
	unreal_export_uenum_EMagicLeapTouchpadGestureType();
	unreal_export_uenum_EMLControllerTrackingMode();
	unreal_export_uenum_EMLControllerHapticIntensity();
	unreal_export_uenum_EMLControllerHapticPattern();
	unreal_export_uenum_EMLControllerLEDSpeed();
	unreal_export_uenum_EMLControllerLEDColor();
	unreal_export_uenum_EMLControllerLEDEffect();
	unreal_export_uenum_EMLControllerLEDPattern();
	unreal_export_uenum_EMLControllerType();
	unreal_export_uenum_EEyeTrackerStatus();
	unreal_export_uenum_EMagicLeapEyeTrackingCalibrationStatus();
	unreal_export_uenum_EMagicLeapEyeTrackingStatus();
	unreal_export_uenum_ELiveLinkCameraProjectionMode();
	unreal_export_uenum_ELiveLinkSourceMode();
	unreal_export_uenum_ELiveLinkAxis();
	unreal_export_uenum_EGestureTransformSpace();
	unreal_export_uenum_EHandTrackingGestureFilterLevel();
	unreal_export_uenum_EHandTrackingKeypointFilterLevel();
	unreal_export_uenum_EHandTrackingGesture();
	unreal_export_uenum_EHandTrackingKeypoint();
	unreal_export_uenum_EMagicLeapIdentityKey();
	unreal_export_uenum_EMagicLeapIdentityError();
	unreal_export_uenum_EActorSequenceObjectReferenceType();
	unreal_export_uenum_ELocationAccuracy();
	unreal_export_uenum_EWheelSweepType();
	unreal_export_uenum_EVehicleDifferential4W();
	unreal_export_uenum_EMeshPaintColorViewMode();
	unreal_export_uenum_EMeshVertexPaintTarget();
	unreal_export_uenum_EMeshPaintMode();
	unreal_export_uenum_ESpriteExtractMode();
	unreal_export_uenum_ECurveEditorFFTFilterType();
	unreal_export_uenum_ECurveEditorFFTFilterClass();
	unreal_export_uenum_EImportLODType();
	unreal_export_uenum_EImportGeometryType();
	unreal_export_uenum_EPropertyValueCategory();
	unreal_export_uenum_EAbcConversionPreset();
	unreal_export_uenum_EAlembicSamplingType();
	unreal_export_uenum_EBaseCalculationType();
	unreal_export_uenum_EAlembicImportType();
	unreal_export_uenum_EMinClientFlags();
	unreal_export_uenum_EUnitTestResetStage();
	unreal_export_uenum_EUnitTestVerification();
	unreal_export_uenum_EAppleTextureType();
	unreal_export_uenum_ETextureRotationDirection();
	unreal_export_uenum_EGeometryCollectionCacheType();
	unreal_export_uenum_EFieldPhysicsDefaultFields();
	unreal_export_uenum_EFieldPhysicsType();
	unreal_export_uenum_EFieldFalloffType();
	unreal_export_uenum_EFieldResolutionType();
	unreal_export_uenum_EFieldCullingOperationType();
	unreal_export_uenum_EFieldOperationType();
	unreal_export_uenum_ESetMaskConditionType();
	unreal_export_uenum_EClusterConnectionTypeEnum();
	unreal_export_uenum_EChaosBreakingSortMethod();
	unreal_export_uenum_EChaosCollisionSortMethod();
	unreal_export_uenum_EChaosTrailingSortMethod();
	unreal_export_uenum_EGeometryCollectionDebugDrawActorHideGeometry();
	unreal_export_uenum_ECollectionGroupEnum();
	unreal_export_uenum_ECollectionAttributeEnum();
	unreal_export_uenum_ETriangleTessellationMode();
	unreal_export_uenum_EInsetPolygonsMode();
	unreal_export_uenum_EPolygonEdgeHardness();
	unreal_export_uenum_EMeshElementAttributeType();
	unreal_export_uenum_EMeshTopologyChange();
	unreal_export_uenum_EMeshModificationType();
	unreal_export_uenum_EAndroidGraphicsDebugger();
	unreal_export_uenum_EGoogleVRCaps();
	unreal_export_uenum_EGoogleVRMode();
	unreal_export_uenum_EAndroidAudio();
	unreal_export_uenum_EOculusMobileDevice();
	unreal_export_uenum_EAndroidInstallLocation();
	unreal_export_uenum_EAndroidDepthBufferPreference();
	unreal_export_uenum_EAndroidScreenOrientation();
	unreal_export_uenum_EAndroidAntVerbosity();
	unreal_export_uenum_EOculusPlatform();
	unreal_export_uenum_EOculusPlatformTarget();
	unreal_export_uenum_ESteamVRTouchDPadMapping();
	unreal_export_uenum_EPythonProjectItemType();
	unreal_export_uenum_EEntitlementCacheLevelRetrieved();
	unreal_export_uenum_EEntitlementCacheLevelRequest();
	unreal_export_uenum_ELiveCodingStartupMode();
	unreal_export_uenum_EIOSCloudKitSyncStrategy();
	unreal_export_uenum_EIOSLandscapeOrientation();
	unreal_export_uenum_EIOSMetalShaderStandard();
	unreal_export_uenum_EIOSVersion();
	unreal_export_uenum_EPowerUsageFrameRateLock();
	unreal_export_uenum_ELuminPrivilege();
	unreal_export_uenum_ELuminFrameTimingHint();
	unreal_export_uenum_ECanvasScalingMode();
	unreal_export_uenum_ETutorialAnchorIdentifier();
	unreal_export_uenum_ETutorialContent();
	unreal_export_uenum_EPaintableClothProperty();
	unreal_export_uenum_ESourceColorChannel();
	unreal_export_uenum_EAudioRecordingMode();
	unreal_export_uenum_EMediaPlayerRecordingImageFormat();
	unreal_export_uenum_EMediaPlayerRecordingNumerationStyle();
	unreal_export_uenum_EMediaPlayerEditorScale();
	unreal_export_uenum_EOculusMR_BoundaryType();
	unreal_export_uenum_EOculusMR_CompositionMethod();
	unreal_export_uenum_EOculusMR_DepthQuality();
	unreal_export_uenum_EOculusMR_PostProcessEffects();
	unreal_export_uenum_EOculusMR_VirtualGreenScreenType();
	unreal_export_uenum_EOculusMR_ClippingReference();
	unreal_export_uenum_EOculusMR_CameraDeviceEnum();
	unreal_export_uenum_EPaintMode();
	unreal_export_uenum_ETexturePaintIndex();
	unreal_export_uenum_ETextureWeightTypes();
	unreal_export_uenum_ELandscapeImportLayerError();
	unreal_export_uenum_ELandscapeImportHeightmapError();
	unreal_export_uenum_ELandscapeMirrorOperation();
	unreal_export_uenum_EColorChannel();
	unreal_export_uenum_ELandscapeConvertMode();
	unreal_export_uenum_ELandscapeToolPasteMode();
	unreal_export_uenum_ELandscapeToolNoiseMode();
	unreal_export_uenum_ELandscapeToolHydroErosionMode();
	unreal_export_uenum_ELandscapeToolErosionMode();
	unreal_export_uenum_ELandscapeToolFlattenMode();
	unreal_export_uenum_ELandscapeImportResult();
	unreal_export_uenum_EHierarchicalLODActionType();

}
